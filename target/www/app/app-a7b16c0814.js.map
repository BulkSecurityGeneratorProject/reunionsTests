{"version":3,"sources":["app/app.module.js","app/services/user/user.service.js","app/services/profiles/profile.service.js","app/services/profiles/page-ribbon.directive.js","app/services/auth/sessions.service.js","app/services/auth/register.service.js","app/services/auth/principal.service.js","app/services/auth/password-reset-init.service.js","app/services/auth/password-reset-finish.service.js","app/services/auth/password.service.js","app/services/auth/has-authority.directive.js","app/services/auth/has-any-authority.directive.js","app/services/auth/auth.session.service.js","app/services/auth/auth.service.js","app/services/auth/activate.service.js","app/services/auth/account.service.js","app/noAccents.filter.js","app/layouts/navbar/navbar.controller.js","app/layouts/navbar/active-menu.directive.js","app/layouts/navbar/active-link.directive.js","app/layouts/error/error.state.js","app/home/home.state.js","app/home/home.controller.js","app/entities/sesion/sesion-dialog.controller.js","app/entities/sesion/sesion-detail.controller.js","app/entities/sesion/sesion-delete-dialog.controller.js","app/entities/sesion/sesion.state.js","app/entities/sesion/sesion.service.js","app/entities/sesion/sesion.search.service.js","app/entities/sesion/sesion.controller.js","app/entities/participante/participante-dialog.controller.js","app/entities/participante/participante-detail.controller.js","app/entities/participante/participante-delete-dialog.controller.js","app/entities/participante/participante.state.js","app/entities/participante/participante.service.js","app/entities/participante/participante.search.service.js","app/entities/participante/participante.controller.js","app/entities/organo/organo-dialog.controller.js","app/entities/organo/organo-detail.controller.js","app/entities/organo/organo-delete-dialog.controller.js","app/entities/organo/organo.state.js","app/entities/organo/organo.service.js","app/entities/organo/organo.search.service.js","app/entities/organo/organo.controller.js","app/entities/miembro/miembro-dialog.controller.js","app/entities/miembro/miembro-detail.controller.js","app/entities/miembro/miembro-delete-dialog.controller.js","app/entities/miembro/miembro.state.js","app/entities/miembro/miembro.service.js","app/entities/miembro/miembro.search.service.js","app/entities/miembro/miembro.controller.js","app/entities/grupo/grupo-dialog.controller.js","app/entities/grupo/grupo-detail.controller.js","app/entities/grupo/grupo-delete-dialog.controller.js","app/entities/grupo/grupo.state.js","app/entities/grupo/grupo.service.js","app/entities/grupo/grupo.search.service.js","app/entities/grupo/grupo.controller.js","app/entities/entity.state.js","app/entities/documento/documento-dialog.controller.js","app/entities/documento/documento-detail.controller.js","app/entities/documento/documento-delete-dialog.controller.js","app/entities/documento/documento.state.js","app/entities/documento/documento.service.js","app/entities/documento/documento.search.service.js","app/entities/documento/documento.controller.js","app/entities/cargo/cargo-dialog.controller.js","app/entities/cargo/cargo-detail.controller.js","app/entities/cargo/cargo-delete-dialog.controller.js","app/entities/cargo/cargo.state.js","app/entities/cargo/cargo.service.js","app/entities/cargo/cargo.search.service.js","app/entities/cargo/cargo.controller.js","app/components/util/truncate-words.filter.js","app/components/util/truncate-characters.filter.js","app/components/util/sort-by.directive.js","app/components/util/sort.directive.js","app/components/util/parse-links.service.js","app/components/util/pagination-util.service.js","app/components/util/jhi-item-count.directive.js","app/components/util/date-util.service.js","app/components/util/data-util.service.js","app/components/util/capitalize.filter.js","app/components/util/base64.service.js","app/components/login/login.service.js","app/components/login/login.controller.js","app/components/language/language.service.js","app/components/language/language.filter.js","app/components/language/language.controller.js","app/components/language/language.constants.js","app/components/form/show-validation.directive.js","app/components/form/pagination.constants.js","app/components/form/minbytes.directive.js","app/components/form/maxbytes.directive.js","app/components/alert/alert-error.directive.js","app/components/alert/alert.service.js","app/components/alert/alert.directive.js","app/blocks/interceptor/notification.interceptor.js","app/blocks/interceptor/errorhandler.interceptor.js","app/blocks/interceptor/auth-expired.interceptor.js","app/blocks/handlers/translation.handler.js","app/blocks/handlers/state.handler.js","app/blocks/config/uib-pagination.config.js","app/blocks/config/uib-pager.config.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/translation.config.js","app/blocks/config/localstorage.config.js","app/blocks/config/http.config.js","app/blocks/config/compile.config.js","app/blocks/config/alert.config.js","app/app.state.js","app/app.constants.js","app/admin/user-management/user-management-dialog.controller.js","app/admin/user-management/user-management-detail.controller.js","app/admin/user-management/user-management-delete-dialog.controller.js","app/admin/user-management/user-management.state.js","app/admin/user-management/user-management.controller.js","app/admin/metrics/metrics.state.js","app/admin/metrics/metrics.service.js","app/admin/metrics/metrics.modal.controller.js","app/admin/metrics/metrics.controller.js","app/admin/logs/logs.state.js","app/admin/logs/logs.service.js","app/admin/logs/logs.controller.js","app/admin/health/health.state.js","app/admin/health/health.service.js","app/admin/health/health.modal.controller.js","app/admin/health/health.controller.js","app/admin/docs/docs.state.js","app/admin/configuration/configuration.state.js","app/admin/configuration/configuration.service.js","app/admin/configuration/configuration.controller.js","app/admin/audits/audits.state.js","app/admin/audits/audits.service.js","app/admin/audits/audits.controller.js","app/admin/admin.state.js","app/account/settings/settings.state.js","app/account/settings/settings.controller.js","app/account/sessions/sessions.state.js","app/account/sessions/sessions.controller.js","app/account/reset/request/reset.request.state.js","app/account/reset/request/reset.request.controller.js","app/account/reset/finish/reset.finish.state.js","app/account/reset/finish/reset.finish.controller.js","app/account/register/register.state.js","app/account/register/register.controller.js","app/account/password/password-strength-bar.directive.js","app/account/password/password.state.js","app/account/password/password.controller.js","app/account/activate/activate.state.js","app/account/activate/activate.controller.js","app/account/account.state.js","app/app.js"],"names":["run","stateHandler","translationHandler","initialize","angular","module","$inject","User","$resource","service","query","method","isArray","membresia","url","getAll","getEvents","participaciones","resumen","excel","transformResponse","data","fromJson","get","save","update","delete","factory","ProfileService","$http","getProfileInfo","isUndefined","dataPromise","then","result","activeProfiles","response","ribbonEnv","inProduction","indexOf","swaggerEnabled","pageRibbon","$rootScope","$translate","linkFunc","scope","element","attrs","addClass","removeClass","directive","replace","restrict","template","link","Sessions","Register","Principal","$q","Account","authenticate","identity","_identity","_authenticated","hasAnyAuthority","authorities","i","length","hasAuthority","authority","this","_id","when","force","getAccountThen","account","deferred","resolve","getAccountCatch","defer","undefined","isDefined","promise","$promise","catch","isAuthenticated","isIdentityResolved","PasswordResetInit","PasswordResetFinish","Password","setVisible","setHidden","defineVisibility","reset","$watch","split","AuthServerProvider","$localStorage","getToken","token","authenticationToken","hasValidToken","login","credentials","encodeURIComponent","username","password","rememberMe","post","headers","Content-Type","success","logout","Auth","$state","$sessionStorage","LoginService","Activate","activateAccount","key","callback","cb","noop","err","bind","authorize","authThen","toState","parent","name","go","fromState","getPreviousState","previousState","resetPreviousState","params","storePreviousState","toStateParams","open","authReturn","changePassword","newPassword","createAccount","loginThen","use","langKey","refresh","reject","resetPasswordFinish","keyAndPassword","resetPasswordInit","mail","updateAccount","previousStateName","previousStateParams","interceptor","noAccents","toLowerCase","filter","NavbarController","collapseNavbar","reload","toggleNavbar","vm","isNavbarCollapsed","controller","activeMenu","$locale","tmhDynamicLocale","language","selectedLanguage","set","activeLink","clazz","path","href","substring","location","newPath","stateConfig","$stateProvider","state","pageTitle","views","content@","templateUrl","mainTranslatePartialLoader","$translatePartialLoader","addPart","config","controllerAs","HomeController","$scope","$compile","eventClick","event","jsEvent","view","id","getAccount","register","events","eventRender","attr","uib-tooltip","title","uib-tooltip-append-to-body","calendarConfig","calendar","allDaySlot","editable","firstDay","header","left","center","right","buttonText","today","moment","format","timeFormat","titleFormat","eventResizeStop","alertResize","eventDragStop","alertDrag","dayClick","myevents","start","end","timezone","forEach","console","log","primeraConvocatoria","Date","parse","push","organo","nombre","color","numero","eventSources","$on","SesionDialogController","$timeout","$stateParams","$uibModalInstance","entity","Sesion","Organo","Participante","Documento","onLastSesionSuccess","sesion","clear","dismiss","isSaving","onSaveSuccess","onSaveError","$emit","close","openCalendar","date","datePickerOpenStatus","admin","miembros","includes","user","cargo","last","lastSesion","getLastSesion","organos","participantes","focus","segundaConvocatoria","SesionDetailController","$location","$anchorScroll","$previousState","DataUtils","marcarAsistencia","marcando","byname","a","b","lastName","localeCompare","exportar","cabecera","asistentes","disculpas","faltas","copiaparticipantes","slice","sort","p","asistencia","firstName","document","body","appendChild","createElement","download","btoa","click","notificar","back","openFile","byteSize","predicate","reverse","goUp","old","hash","documentos","qFn","actual","expected","removeAccents","value","toString","isObject","lowercase","unsubscribe","SesionDeleteController","confirmDelete","page","squash","search","pagingParams","PaginationUtil","parsePage","parsePredicate","ascending","parseAscending","translatePartialLoader","currentStateData","current","onEnter","$uibModal","backdrop","size","lugar","descripcion","ids","DateUtils","resourceUrl","convertDateTimeFromServer","SesionSearch","SesionController","ParseLinks","AlertService","paginationConstants","loadAll","onSuccess","links","totalItems","queryCount","sesions","onError","error","message","itemsPerPage","loadPage","transition","transitionTo","$current","currentSearch","searchQuery","ParticipanteDialogController","Cargo","participante","cargos","users","ParticipanteDetailController","ParticipanteDeleteController","observaciones","idp","ParticipanteSearch","ParticipanteController","OrganoDialogController","Grupo","Miembro","grupos","OrganoDetailController","predicateAnteriores","reverseAnteriores","miembrosAnteriores","sesiones","OrganoDeleteController","OrganoSearch","OrganoController","MiembroDialogController","miembro","fechaAlta","fechaBaja","MiembroDetailController","MiembroDeleteController","idm","convertLocalDateFromServer","transformRequest","copy","convertLocalDateToServer","toJson","MiembroSearch","MiembroController","GrupoDialogController","grupo","GrupoDetailController","GrupoDeleteController","GrupoSearch","GrupoController","abstract","DocumentoDialogController","documento","setArchivo","$file","toBase64","base64Data","$apply","archivo","archivoContentType","type","DocumentoDetailController","DocumentoDeleteController","idd","DocumentoSearch","DocumentoController","CargoDialogController","CargoDetailController","CargoDeleteController","CargoSearch","CargoController","words","wordsFilter","input","isNaN","inputWords","join","characters","charactersFilter","chars","breakOnWord","charAt","substr","lastspace","lastIndexOf","jhSortBy","parentCtrl","require","jhSort","SortController","bindToController","$element","applyClass","thisIcon","find","sortIcon","sortAsc","sortDesc","remove","add","resetClasses","allThIcons","field","triggerApply","values","$watchGroup","Error","parts","section","trim","queryString","RegExp","$0","$1","$2","$3","isString","parseInt","sortArray","pop","jhiItemCount","bindings","component","$filter","dateString","dateformat","$window","abbreviate","text","base64String","endsWith","suffix","str","paddingSize","formatAsBytes","file","fileReader","FileReader","readAsDataURL","onload","e","target","capitalize","capitalizeFilter","toUpperCase","Base64","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","keyStr","decode","String","fromCharCode","modalInstance","animation","resetModal","LoginController","cancel","authenticationError","preventDefault","$broadcast","requestResetPassword","JhiLanguageService","LANGUAGES","getCurrent","storage","findLanguageFromKey","findLanguageFromKeyFilter","lang","ca","cs","da","de","el","en","es","fr","gl","hu","hi","it","ja","ko","mr","nl","pl","pt-br","pt-pt","ro","ru","sk","sv","ta","tr","zh-cn","zh-tw","JhiLanguageController","changeLanguage","languageKey","languages","constant","showValidation","formCtrl","each","$formGroup","$inputs","$input","inputName","$invalid","$dirty","isInvalid","toggleClass","minbytes","ngModel","$validators","modelValue","$isEmpty","numberOfBytes","maxbytes","jhiAlertErrorController","addErrorAlert","alerts","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","stopPropagation","status","errorHeader","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","fieldName","objectName","jhiAlertError","getService","$sce","position","warning","info","alertOptions","alert","trustAsHtml","alertId","closeAlert","addAlert","extAlerts","that","thisAlerts","closeAlertByIndex","map","index","splice","$get","showAsToast","provider","jhiAlertController","jhiAlert","notificationInterceptor","alertKey","param","errorHandlerInterceptor","responseError","authExpiredInterceptor","$injector","to","translateChangeSuccess","updateTitle","titleKey","VERSION","stateChangeStart","external","stateChangeSuccess","toParams","fromParams","paginationConfig","uibPaginationConfig","maxSize","boundaryLinks","firstText","previousText","nextText","lastText","pagerConfig","uibPagerConfig","translationStorageProvider","$cookies","$log","getObject","putObject","put","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","httpConfig","$urlRouterProvider","$httpProvider","httpRequestInterceptorCacheBusterProvider","$urlMatcherFactoryProvider","setMatchlist","otherwise","interceptors","val","equals","is","pattern","compileServiceConfig","$compileProvider","DEBUG_INFO_ENABLED","debugInfoEnabled","alertServiceConfig","AlertServiceProvider","navbar@","UserManagementDialogController","UserManagementDetailController","load","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","byteArray","Uint8Array","blob","Blob","filename","style","fileURL","window","URL","createObjectURL","predicateParticipaciones","reverseParticipaciones","UserManagementDeleteController","email","activated","createdBy","createdDate","lastModifiedBy","lastModifiedDate","resetDate","resetKey","UserManagementController","currentAccount","JhiMetricsService","getMetrics","threadDump","JhiMetricsMonitoringModalController","getLabelClass","threadState","threadDumpAll","threadDumpBlocked","threadDumpRunnable","threadDumpTimedWaiting","threadDumpWaiting","JhiMetricsMonitoringController","updatingMetrics","metrics","refreshThreadDumpData","cachesStats","servicesStats","newValue","timers","newKey","LogsService","findAll","changeLevel","LogsController","level","loggers","JhiHealthService","checkHealth","transformHealthData","flattenHealthData","getBaseName","getSubSystemName","remainder","isHealthObject","hasSubSystem","addHealthObject","getModuleName","isLeaf","healthObject","healthData","details","hasDetails","extend","separator","HealthModalController","currentHealth","baseName","subSystemName","JhiHealthCheckController","statusState","updatingHealth","showHealth","health","JhiConfigurationService","getConfigPropsComplete","properties","orderBy","getEnv","getEnvComplete","vals","v","k","JhiConfigurationController","allConfiguration","configuration","AuditsService","fromDate","toDate","AuditsController","onChangeDate","dateFormat","audits","getFullYear","getMonth","getDate","previousMonth","SettingsController","settingsAccount","copyAccount","SessionsController","invalidate","series","sessions","RequestResetController","requestReset","errorEmailNotExists","resetAccount","ResetFinishController","finishReset","doNotMatch","confirmPassword","keyMissing","RegisterController","registerAccount","errorUserExists","errorEmailExists","passwordStrengthBar","iElement","strength","colors","mesureStrength","_force","_regex","_lowerLetters","test","_upperLetters","_numbers","_symbols","_flags","_passedMatches","$","grep","Math","min","getColor","s","idx","col","c","children","css","background-color","passwordToCheck","PasswordController","ActivationController","$templateCache"],"mappings":"CAAA,WACA,YA0BA,SAAAA,GAAAC,EAAAC,GACAD,EAAAE,aACAD,EAAAC,aA1BAC,QACAC,OAAA,eACA,YACA,oBACA,yBACA,aACA,YACA,SACA,gBACA,eACA,wCACA,cACA,eACA,8BACA,YACA,sBACA,kBAEA,wBAEAL,IAAAA,GAEAA,EAAAM,SAAA,eAAA,yBCzBA,WACA,YAQA,SAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAA,uBACAE,OAAAC,OAAA,MAAAC,SAAA,GACAC,WAAAF,OAAA,MAAAC,SAAA,EAAAE,IAAA,8BACAC,QAAAJ,OAAA,MAAAC,SAAA,EAAAE,IAAA,aACAE,WAAAL,OAAA,MAAAC,SAAA,EAAAE,IAAA,oBACAG,iBAAAN,OAAA,MAAAC,SAAA,EAAAE,IAAA,oCAEAI,SAAAP,OAAA,MAAAC,SAAA,EAAAE,IAAA,4BACAK,OACAR,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,GACAP,IAAA,0BAEAS,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAEA,MADAA,GAAAjB,QAAAkB,SAAAD,KAIAG,MAAAb,OAAA,QACAc,QAAAd,OAAA,OACAe,QAAAf,OAAA,WAGA,OAAAF,GApCAL,QACAC,OAAA,eACAsB,QAAA,OAAApB,GAEAA,EAAAD,SAAA,gBCPA,WACA,YAQA,SAAAsB,GAAAC,GAUA,QAAAC,KAaA,MAZA1B,SAAA2B,YAAAC,KACAA,EAAAH,EAAAN,IAAA,oBAAAU,KAAA,SAAAC,GACA,GAAAA,EAAAb,KAAAc,eAAA,CACA,GAAAC,KAKA,OAJAA,GAAAD,eAAAD,EAAAb,KAAAc,eACAC,EAAAC,UAAAH,EAAAb,KAAAgB,UACAD,EAAAE,aAAAJ,EAAAb,KAAAc,eAAAI,QAAA,WAAA,EACAH,EAAAI,eAAAN,EAAAb,KAAAc,eAAAI,QAAA,cAAA,EACAH,MAIAJ,EArBA,GAAAA,GAEAvB,GACAqB,eAAAA,EAGA,OAAArB,GAdAL,QACAC,OAAA,eACAsB,QAAA,iBAAAC,GAEAA,EAAAtB,SAAA,YCPA,WACA,YAQA,SAAAmC,GAAAb,EAAAc,EAAAC,GAUA,QAAAC,GAAAC,EAAAC,EAAAC,GACAnB,EAAAE,iBAAAG,KAAA,SAAAG,GACAA,EAAAC,YACAQ,EAAAR,UAAAD,EAAAC,UACAS,EAAAE,SAAAZ,EAAAC,WACAS,EAAAG,YAAA,aAdA,GAAAC,IACAC,SAAA,EACAC,SAAA,KACAC,SAAA,wGACAC,KAAAV,EAGA,OAAAM,GAdA9C,QACAC,OAAA,eACA6C,UAAA,aAAAT,GAEAA,EAAAnC,SAAA,iBAAA,aAAA,iBCPA,WACA,YAQA,SAAAiD,GAAA/C,GACA,MAAAA,GAAA,mCACAO,QAAAJ,OAAA,MAAAC,SAAA,KARAR,QACAC,OAAA,eACAsB,QAAA,WAAA4B,GAEAA,EAAAjD,SAAA,gBCPA,WACA,YAQA,SAAAkD,GAAAhD,GACA,MAAAA,GAAA,sBAPAJ,QACAC,OAAA,eACAsB,QAAA,WAAA6B,GAEAA,EAAAlD,SAAA,gBCPA,WACA,YAQA,SAAAmD,GAAAC,EAAAC,GAeA,QAAAC,GAAAC,GACAC,EAAAD,EACAE,EAAA,OAAAF,EAGA,QAAAG,GAAAC,GACA,IAAAF,IAAAD,IAAAA,EAAAG,YACA,OAAA,CAGA,KAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACA,GAAAJ,EAAAG,YAAA1B,QAAA0B,EAAAC,OAAA,EACA,OAAA,CAIA,QAAA,EAGA,QAAAE,GAAAC,GACA,MAAAN,GAIAO,KAAAT,WAAA5B,KAAA,SAAAsC,GACA,MAAAA,GAAAN,aAAAM,EAAAN,YAAA1B,QAAA8B,MAAA,GACA,WACA,OAAA,IANAX,EAAAc,MAAA,GAUA,QAAAX,GAAAY,GAsBA,QAAAC,GAAAC,GACAb,EAAAa,EAAAtD,KACA0C,GAAA,EACAa,EAAAC,QAAAf,GAGA,QAAAgB,KACAhB,EAAA,KACAC,GAAA,EACAa,EAAAC,QAAAf,GA9BA,GAAAc,GAAAlB,EAAAqB,OAQA,OANAN,MAAA,IACAX,EAAAkB,QAKA5E,QAAA6E,UAAAnB,IACAc,EAAAC,QAAAf,GAEAc,EAAAM,UAIAvB,EAAApC,MAAA4D,SACAlD,KAAAyC,GACAU,MAAAN,GAEAF,EAAAM,SAeA,QAAAG,KACA,MAAAtB,GAGA,QAAAuB,KACA,MAAAlF,SAAA6E,UAAAnB,GArFA,GAAAA,GACAC,GAAA,EAEAtD,GACAmD,aAAAA,EACAI,gBAAAA,EACAI,aAAAA,EACAP,SAAAA,EACAwB,gBAAAA,EACAC,mBAAAA,EAGA,OAAA7E,GAnBAL,QACAC,OAAA,eACAsB,QAAA,YAAA8B,GAEAA,EAAAnD,SAAA,KAAA,cCPA,WACA,YAQA,SAAAiF,GAAA/E,GACA,GAAAC,GAAAD,EAAA,wCAEA,OAAAC,GATAL,QACAC,OAAA,eACAsB,QAAA,oBAAA4D,GAEAA,EAAAjF,SAAA,gBCPA,WACA,YAQA,SAAAkF,GAAAhF,GACA,GAAAC,GAAAD,EAAA,0CAEA,OAAAC,GATAL,QACAC,OAAA,eACAsB,QAAA,sBAAA6D,GAEAA,EAAAlF,SAAA,gBCPA,WACA,YAQA,SAAAmF,GAAAjF,GACA,GAAAC,GAAAD,EAAA,oCAEA,OAAAC,GATAL,QACAC,OAAA,eACAsB,QAAA,WAAA8D,GAEAA,EAAAnF,SAAA,gBCPA,WACA,YAQA,SAAA8D,GAAAX,GAQA,QAAAb,GAAAC,EAAAC,EAAAC,GACA,GAAAsB,GAAAtB,EAAAqB,aAAAjB,QAAA,OAAA,IAEAuC,EAAA,WACA5C,EAAAG,YAAA,WAEA0C,EAAA,WACA7C,EAAAE,SAAA,WAEA4C,EAAA,SAAAC,GAEAA,GACAH,IAGAjC,EAAAW,aAAAC,GACApC,KAAA,SAAAC,GACAA,EACAwD,IAEAC,MAKAtB,GAAAF,OAAA,IACAyB,GAAA,GAEA/C,EAAAiD,OAAA,WACA,MAAArC,GAAA4B,mBACA,WACAO,GAAA,MAtCA,GAAA1C,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZA9C,QACAC,OAAA,eACA6C,UAAA,eAAAkB,GAEAA,EAAA9D,SAAA,gBCPA,WACA,YAQA,SAAA0D,GAAAP,GAQA,QAAAb,GAAAC,EAAAC,EAAAC,GACA,GAAAkB,GAAAlB,EAAAiB,gBAAAb,QAAA,OAAA,IAAA4C,MAAA,KAEAL,EAAA,WACA5C,EAAAG,YAAA,WAEA0C,EAAA,WACA7C,EAAAE,SAAA,WAEA4C,EAAA,SAAAC,GACA,GAAA3D,EACA2D,IACAH,IAGAxD,EAAAuB,EAAAO,gBAAAC,GACA/B,EACAwD,IAEAC,IAIA1B,GAAAE,OAAA,IACAyB,GAAA,GAEA/C,EAAAiD,OAAA,WACA,MAAArC,GAAA4B,mBACA,WACAO,GAAA,MApCA,GAAA1C,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZA9C,QACAC,OAAA,eACA6C,UAAA,kBAAAc,GAEAA,EAAA1D,SAAA,gBCPA,WACA,YAQA,SAAA0F,GAAAnE,EAAAoE,GAUA,QAAAC,KACA,GAAAC,GAAAF,EAAAG,mBACA,OAAAD,GAGA,QAAAE,KACA,GAAAF,GAAA7B,KAAA4B,UACA,SAAAC,EAGA,QAAAG,GAAAC,GACA,GAAAlF,GAAA,cAAAmF,mBAAAD,EAAAE,UACA,eAAAD,mBAAAD,EAAAG,UACA,gBAAAH,EAAAI,WAAA,eAEA,OAAA9E,GAAA+E,KAAA,qBAAAvF,GACAwF,SACAC,eAAA,uCAEAC,QAAA,SAAA3E,GACA,MAAAA,KAIA,QAAA4E,KAIAnF,EAAA+E,KAAA,cAAAG,QAAA,SAAA3E,GAIA,aAHA6D,GAAAG,oBAEAvE,EAAAN,IAAA,eACAa,IAzCA,GAAA3B,IACAyF,SAAAA,EACAG,cAAAA,EACAC,MAAAA,EACAU,OAAAA,EAGA,OAAAvG,GAdAL,QACAC,OAAA,eACAsB,QAAA,qBAAAqE,GAEAA,EAAA1F,SAAA,QAAA,oBCPA,WACA,YAQA,SAAA2G,GAAAvE,EAAAwE,EAAAC,EAAAzD,EAAAf,EAAAc,EAAAuC,EAAArC,EAAAyD,EAAA5D,EAAA6D,EAAA5B,EAAAF,EAAAC,GAkBA,QAAA8B,GAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAAL,GAAA9F,IAAAgG,EACA,SAAAnF,GACA,MAAAqF,GAAArF,IAEA,SAAAuF,GACA,MAAAF,GAAAE,IACAC,KAAAtD,OAAAa,SAGA,QAAA0C,GAAApD,GAKA,QAAAqD,KACA,GAAAzC,GAAA5B,EAAA4B,iBAQA,KALAA,GAAA,YAAA3C,EAAAqF,QAAAC,QAAA,UAAAtF,EAAAqF,QAAAE,MAAA,aAAAvF,EAAAqF,QAAAE,MACAf,EAAAgB,GAAA,QAIA7C,IAAA3C,EAAAyF,UAAAF,MAAAG,IAAA,CACA,GAAAC,GAAAD,GACAE,KACApB,EAAAgB,GAAAG,EAAAJ,KAAAI,EAAAE,QAGA7F,EAAAqF,QAAA1G,KAAA4C,aAAAvB,EAAAqF,QAAA1G,KAAA4C,YAAAE,OAAA,IAAAV,EAAAO,gBAAAtB,EAAAqF,QAAA1G,KAAA4C,eACAoB,EAEA6B,EAAAgB,GAAA,iBAKAM,EAAA9F,EAAAqF,QAAAE,KAAAvF,EAAA+F,eAGAvB,EAAAgB,GAAA,gBAAAjG,KAAA,WACAmF,EAAAsB,WA/BA,GAAAC,GAAAlF,EAAAI,SAAAY,GAAAxC,KAAA6F,EAEA,OAAAa,GAoCA,QAAAC,GAAAC,EAAArB,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAAjC,GAAAjE,KAAAqH,EAAA,WACA,MAAApB,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAxC,SAGA,QAAA2D,GAAAnE,EAAA6C,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAAlE,GAAAhC,KAAAmD,EACA,WACA,MAAA8C,GAAA9C,IAEA,SAAAgD,GAEA,MADArD,MAAA0C,SACAS,EAAAE,IACAC,KAAAtD,OAAAa,SAGA,QAAAmB,GAAAC,EAAAiB,GAYA,QAAAuB,GAAA1H,GAWA,MAVAoC,GAAAI,UAAA,GAAA5B,KAAA,SAAA0C,GAGA,OAAAA,GACAhC,EAAAqG,IAAArE,EAAAsE,SAAAhH,KAAA,WACAU,EAAAuG,YAGAtE,EAAAC,QAAAxD,KAEAoG,IAtBA,GAAAA,GAAAD,GAAApH,QAAAsH,KACA9C,EAAAlB,EAAAqB,OAwBA,OAtBAiB,GAAAM,MAAAC,GACAtE,KAAA8G,GACA3D,MAAA,SAAAuC,GAGA,MAFArD,MAAA0C,SACApC,EAAAuE,OAAAxB,GACAF,EAAAE,IACAC,KAAAtD,OAgBAM,EAAAM,QAIA,QAAA8B,KACAhB,EAAAgB,SACAvD,EAAAG,aAAA,MAGA,QAAAwF,GAAAC,EAAA7B,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAAlC,GAAAhE,KAAA6H,EAAA,WACA,MAAA5B,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAxC,SAGA,QAAAmE,GAAAC,EAAA/B,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAAnC,GAAA/D,KAAA+H,EAAA,WACA,MAAA9B,MACA,SAAAE,GACA,MAAAF,GAAAE,KACAxC,SAGA,QAAAqE,GAAA7E,EAAA6C,GACA,GAAAC,GAAAD,GAAApH,QAAAsH,IAEA,OAAA/D,GAAAnC,KAAAmD,EACA,WACA,MAAA8C,GAAA9C,IAEA,SAAAgD,GACA,MAAAF,GAAAE,IACAC,KAAAtD,OAAAa,SAGA,QAAAiD,KACA,GAAAC,GAAAlB,EAAAkB,aACA,OAAAA,GAGA,QAAAC,WACAnB,GAAAkB,cAGA,QAAAG,GAAAiB,EAAAC,GACA,GAAArB,IAAAJ,KAAAwB,EAAAlB,OAAAmB,EACAvC,GAAAkB,cAAAA,EAzKA,GAAA5H,IACA6G,gBAAAA,EACAO,UAAAA,EACAe,eAAAA,EACAE,cAAAA,EACAV,iBAAAA,EACA9B,MAAAA,EACAU,OAAAA,EACAoC,oBAAAA,EACAE,kBAAAA,EACAhB,mBAAAA,EACAE,mBAAAA,EACAgB,cAAAA,EAGA,OAAA/I,GAtBAL,QACAC,OAAA,eACAsB,QAAA,OAAAsF,GAEAA,EAAA3G,SAAA,aAAA,SAAA,kBAAA,KAAA,aAAA,YAAA,qBAAA,UAAA,eAAA,WAAA,WAAA,WAAA,oBAAA,0BCPA,WACA,YAQA,SAAA+G,GAAA7G,GACA,GAAAC,GAAAD,EAAA,mBACAe,KAAAZ,OAAA,MAAA4H,UAAA3H,SAAA,IAGA,OAAAH,GAXAL,QACAC,OAAA,eACAsB,QAAA,WAAA0F,GAEAA,EAAA/G,SAAA,gBCPA,WACA,YAQA,SAAAqD,GAAAnD,GACA,GAAAC,GAAAD,EAAA,kBACAe,KAAAZ,OAAA,MAAA4H,UAAA3H,SAAA,EACA+I,aACAvH,SAAA,SAAAA,GAEA,MAAAA,OAMA,OAAA3B,GAlBAL,QACAC,OAAA,eACAsB,QAAA,UAAAgC,GAEAA,EAAArD,SAAA,gBCPA,WACA,YAMA,SAAAsJ,KACA,MAAA,UAAAvI,GACA,MAAAA,GAAAwI,cACA1G,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,KACAA,QAAA,KAAA,MApBA/C,QACAC,OAAA,eACAyJ,OAAA,YAAAF,MCLA,WACA,YAQA,SAAAG,GAAA7C,EAAAD,EAAAxD,EAAA7B,EAAAwF,GAiBA,QAAAd,KACA0D,IACA5C,EAAAsB,OAGA,QAAA1B,KACAgD,IACA/C,EAAAD,SACAE,EAAAgB,GAAA,WAAA+B,QAAA,IAGA,QAAAC,KACAC,EAAAC,mBAAAD,EAAAC,kBAGA,QAAAJ,KACAG,EAAAC,mBAAA,EAhCA,GAAAD,GAAA7F,IAEA6F,GAAAC,mBAAA,EACAD,EAAA9E,gBAAA5B,EAAA4B,gBAEAzD,EAAAE,iBAAAG,KAAA,SAAAG,GACA+H,EAAA7H,aAAAF,EAAAE,aACA6H,EAAA3H,eAAAJ,EAAAI,iBAGA2H,EAAA7D,MAAAA,EACA6D,EAAAnD,OAAAA,EACAmD,EAAAD,aAAAA,EACAC,EAAAH,eAAAA,EACAG,EAAAjD,OAAAA,EArBA9G,QACAC,OAAA,eACAgK,WAAA,mBAAAN,GAEAA,EAAAzJ,SAAA,SAAA,OAAA,YAAA,iBAAA,mBCPA,WACA,YAQA,SAAAgK,GAAA3H,EAAA4H,EAAAC,GAQA,QAAA5H,GAAAC,EAAAC,EAAAC,GACA,GAAA0H,GAAA1H,EAAAuH,UAEAzH,GAAAiD,OAAA,WACA,MAAAnD,GAAAqG,OACA,SAAA0B,GACAD,IAAAC,GACAF,EAAAG,IAAAF,GACA3H,EAAAE,SAAA,WAEAF,EAAAG,YAAA,YAjBA,GAAAC,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAZA9C,QACAC,OAAA,eACA6C,UAAA,aAAAoH,GAEAA,EAAAhK,SAAA,aAAA,UAAA,uBCPA,WACA,YAMA,SAAAsK,KAQA,QAAAhI,GAAAC,EAAAC,EAAAC,GACA,GAAA8H,GAAA9H,EAAA6H,WACAE,EAAA/H,EAAAgI,IACAD,GAAAA,EAAAE,UAAA,GACAnI,EAAAoI,SAAAA,SACApI,EAAAiD,OAAA,kBAAA,SAAAoF,GACAJ,IAAAI,EACApI,EAAAE,SAAA6H,GAEA/H,EAAAG,YAAA4H,KAhBA,GAAA3H,IACAE,SAAA,IACAE,KAAAV,EAGA,OAAAM,GAVA9C,QACAC,OAAA,eACA6C,UAAA,aAAA0H,MCLA,WACA,YAQA,SAAAO,GAAAC,GACAA,EACAC,MAAA,SACArD,OAAA,MACAlH,IAAA,SACAO,MACA4C,eACAqH,UAAA,eAEAC,OACAC,YACAC,YAAA,iCAGA5G,SACA6G,4BAAA,aAAA,0BAAA,SAAA/I,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,eAIAmC,MAAA,gBACArD,OAAA,MACAlH,IAAA,gBACAO,MACA4C,gBAEAsH,OACAC,YACAC,YAAA,wCAGA5G,SACA6G,4BAAA,aAAA,0BAAA,SAAA/I,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,eAzCA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,QACArD,OAAA,MACAlH,IAAA,IACAO,MACA4C,gBAEAsH,OACAC,YACAC,YAAA,qBACApB,WAAA,iBACAyB,aAAA,OAGAjH,SACA6G,4BAAA,aAAA,0BAAA,SAAA/I,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,QACAjJ,EAAAuG,eAvBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAyL,GAAAC,EAAAC,EAAAxI,EAAA2D,EAAAF,EAAA3G,GAyCA,QAAA2L,GAAAC,EAAAC,EAAAC,GACAnF,EAAAgB,GAAA,iBAAAoE,GAAAH,EAAAG,KAoDA,QAAAC,KACA9I,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,EACAwF,EAAA9E,gBAAA5B,EAAA4B,kBAGA,QAAAmH,KACAtF,EAAAgB,GAAA,YApGA,GAAAiC,GAAA7F,IAEA6F,GAAAxF,QAAA,KACAwF,EAAA9E,gBAAA,KACA8E,EAAA7D,MAAAc,EAAAsB,KACAyB,EAAAqC,SAAAA,EACArC,EAAA+B,WAAAA,EACA/B,EAAAsC,UACAtC,EAAAuC,YAAA,SAAAP,EAAArJ,EAAAuJ,GACAvJ,EAAA6J,MAAAC,cAAAT,EAAAU,MACAC,8BAAA,IACAb,EAAAnJ,GAAAkJ,IAEA7B,EAAA4C,gBACAC,UACAC,YAAA,EAEAC,UAAA,EAEAC,SAAA,EACAC,QACAC,KAAA,QACAC,OAAA,GACAC,MAAA,mBAEAC,YACAC,MAAAC,SAAAC,OAAA,aAEAC,WAAA,QACAC,YAAA,2BACA3B,WAAA/B,EAAA+B,WACA4B,gBAAA9B,EAAA+B,YACAC,cAAAhC,EAAAiC,UACAvB,YAAAvC,EAAAuC,YACAwB,SAAAlC,EAAAkC,WAUA/D,EAAAgE,SAAA,SAAAC,EAAAC,EAAAC,EAAA9G,GAGAjH,EAAAS,UAAAgL,EAAA,SAAA5J,GAKA+H,EAAAsC,UAGArM,QAAAmO,QAAAnM,EAAA,SAAA+J,GACAqC,QAAAC,IAAAtC,EAAAuC,qBACAF,QAAAC,IAAA,GAAAE,MAAAA,KAAAC,MAAAzC,EAAAuC,uBACAvE,EAAAsC,OAAAoC,MACAvC,GAAAH,EAAAG,GACAO,MAAAV,EAAA2C,OAAAC,OACAX,MAAA,GAAAO,MAAAA,KAAAC,MAAAzC,EAAAuC,sBACAM,MAAA,GAAA7C,EAAA8C,OAAA,UAAA,WAGAzH,EAAA2C,EAAAsC,WAoBAtC,EAAA+E,cAAA/E,EAAAsC,OAAAtC,EAAAgE,UAEAnC,EAAAmD,IAAA,wBAAA,WACA5C,MAGAA,IAlGAnM,QACAC,OAAA,eACAgK,WAAA,iBAAA0B,GAEAA,EAAAzL,SAAA,SAAA,WAAA,YAAA,eAAA,SAAA,WCPA,WACA,YAQA,SAAA8O,GAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAA/L,EAAAgM,EAAAC,EAAAC,EAAAC,GAWA,QAAArD,KACA9I,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,EACAwF,EAAA9E,gBAAA5B,EAAA4B,kBAsBA,QAAAwK,GAAA3N,GACAA,EAAAoK,GACAnC,EAAA2F,OAAAb,OAAA/M,EAAA+M,OAAA,EAEA9E,EAAA2F,OAAAb,OAAA,EAeA,QAAAc,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAA2F,OAAAxD,GACAmD,EAAAhO,OAAA0I,EAAA2F,OAAAI,EAAAC,GAEAV,EAAAjO,KAAA2I,EAAA2F,OAAAI,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,2BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EAMA,QAAAK,GAAAC,GACApG,EAAAqG,qBAAAD,IAAA,EAjFA,GAAApG,GAAA7F,IAEA6F,GAAAxF,QAAA,KACAwF,EAAA9E,gBAAA,KACA8E,EAAAsG,OAAA,EAEAtG,EAAA2F,OAAAN,EAEAjD,IASAmD,EAAAgB,UAAApE,GAAAgD,EAAAhD,KAAAnH,SAAAlD,KAAA,SAAAZ,GACA8I,EAAA9E,kBACA8E,EAAAxF,QAAAV,YAAA0M,SAAA,gBACAtP,EAAAkN,QAAA,SAAAzL,GACAA,EAAA8N,KAAAtK,OAAA6D,EAAAxF,QAAA2B,OAAAxD,EAAA+N,MAAAvE,GAAA,IAAAnC,EAAAsG,OAAA,KAEAtG,EAAAsG,OACAlB,EAAAS,QAAA,cAMA,OAAA7F,EAAA2F,OAAAb,SACA9E,EAAA2G,MAAA,EACA3G,EAAA4G,WAAArB,EAAAsB,eAAA1E,GAAAgD,EAAAhD,IAAAuD,IAWA1F,EAAA4F,MAAAA,EACA5F,EAAAqG,wBACArG,EAAAmG,aAAAA,EACAnG,EAAA3I,KAAAA,EACA2I,EAAA8G,QAAAvB,EAAAhP,QACAyJ,EAAA+G,cAAAvB,EAAAjP,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UA0BAhH,EAAAqG,qBAAA9B,qBAAA,EACAvE,EAAAqG,qBAAAY,qBAAA,EArFAhR,QACAC,OAAA,eACAgK,WAAA,yBAAA+E,GAEAA,EAAA9O,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,YAAA,SAAA,SAAA,eAAA,gBCPA,WACA,YAQA,SAAA+Q,GAAAC,EAAAC,EAAAvF,EAAAtJ,EAAA4M,EAAAkC,EAAAnJ,EAAAoJ,EAAAjC,EAAA/L,EAAAgM,EAAAC,EAAAC,EAAAC,GA4BA,QAAArD,KACA9I,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,EACAwF,EAAA9E,gBAAA5B,EAAA4B,kBA8BA,QAAAqM,KACAvH,EAAAwH,UACAxH,EAAAwH,UAAA,EACAlC,EAAAiC,iBAAAvH,EAAA+G,gBAEA/G,EAAAwH,UAAA,EAIA,QAAAC,GAAAC,EAAAC,GACA,MAAAD,GAAAjB,KAAAmB,SAAAC,cAAAF,EAAAlB,KAAAmB,UAIA,QAAAE,KACA,GAAA/N,GACAgO,EAAA,6CAAA/H,EAAA2F,OAAAb,OAAA,eAAA9E,EAAA2F,OAAAhB,OAAAC,OACAoD,EAAA,cACAC,EAAA,gBACAC,EAAA,YACAlI,GAAAmI,mBAAAnI,EAAA+G,cAAAqB,MAAA,EACA,KAAArO,IAAAiG,GAAAmI,mBAAAE,KAAAZ,GAAA,CACA,GAAAa,GAAAtI,EAAA+G,cAAAhN,EACA,WAAAuO,EAAAC,WACAP,GAAA,OAAAM,EAAA7B,KAAAmB,SAAA,KAAAU,EAAA7B,KAAA+B,UACA,YAAAF,EAAAC,WACAN,GAAA,OAAAK,EAAA7B,KAAAmB,SAAA,KAAAU,EAAA7B,KAAA+B,UACA,SAAAF,EAAAC,aACAL,GAAA,OAAAI,EAAA7B,KAAAmB,SAAA,KAAAU,EAAA7B,KAAA+B,WAGA,GAAAd,GAAAe,SAAAC,KAAAC,YACAF,SAAAG,cAAA,KAEAlB,GAAAmB,SAAA,oBACAnB,EAAA9G,KAAA,0BAAAkI,KAAAf,EAAAC,EAAAC,EAAAC,GACAR,EAAAqB,QAGA,QAAAC,KACA1D,EAAA0D,UAAAhJ,EAAA2F,QAGA,QAAAsD,KACA5B,EAAAtJ,KAxGA,GAAAiC,GAAA7F,IAEA6F,GAAAxF,QAAA,KACAwF,EAAA9E,gBAAA,KACA8E,EAAA2F,OAAAN,EACArF,EAAAkJ,SAAA5B,EAAA4B,SACAlJ,EAAAmJ,SAAA7B,EAAA6B,SACAnJ,EAAAgJ,UAAAA,EACAhJ,EAAA8H,SAAAA,EACA9H,EAAAiJ,KAAAA,EACAjJ,EAAAuH,iBAAAA,EACAvH,EAAAsG,OAAA,EACAtG,EAAA9B,cAAAmJ,EAAAjQ,MACA4I,EAAAwH,UAAA,EACAxH,EAAAoJ,UAAA,0BACApJ,EAAAqJ,SAAA,EAEArJ,EAAAsJ,KAAA,SAAAnH,GACA,GAAAoH,GAAApC,EAAAqC,MACArC,GAAAqC,KAAArH,GACAiF,IAEAD,EAAAqC,KAAAD,IAGAnH,IASAmD,EAAAgB,UAAApE,GAAAnC,EAAA2F,OAAAhB,OAAAxC,KAAAnH,SAAAlD,KAAA,SAAAZ,GACA8I,EAAA9E,kBACA8E,EAAAxF,QAAAV,YAAA0M,SAAA,cACAxG,EAAAsG,OAAA,EAEApP,EAAAkN,QAAA,SAAAzL,GACAA,EAAA8N,KAAAtK,OAAA6D,EAAAxF,QAAA2B,OAAAxD,EAAA+N,MAAAvE,GAAA,IAAAnC,EAAAsG,OAAA,QAMAtG,EAAAyJ,WAAAnE,EAAAmE,YAAAtH,GAAAgD,EAAAhD,KACAnC,EAAA+G,cAAAzB,EAAAyB,eAAA5E,GAAAgD,EAAAhD,KAEAnC,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,GAkDA,IAAAM,GAAA3R,EAAAyM,IAAA,2BAAA,SAAAhD,EAAAjK,GACAiI,EAAA2F,OAAA5N,GAEA8J,GAAAmD,IAAA,WAAAkF,GArHAjU,QACAC,OAAA,eACAgK,WAAA,yBAAAgH,GAEAA,EAAA/Q,SAAA,YAAA,gBAAA,SAAA,aAAA,eAAA,iBAAA,gBAAA,YAAA,SAAA,YAAA,SAAA,SAAA,eAAA,gBCPA,WACA,YAQA,SAAAgU,GAAA/E,EAAAC,EAAAC,GAOA,QAAAM,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACAmD,EAAA/N,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAA2F,OAAAN,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,yBAAAiK,GAEAA,EAAAhU,SAAA,oBAAA,SAAA,aCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,UACArD,OAAA,SACAlH,IAAA,2BACAO,MACA4C,aAAA,cACAqH,UAAA,iCAEAC,OACAC,YACAC,YAAA,mCACApB,WAAA,mBACAyB,aAAA,OAGAvD,QACAiM,MACAP,MAAA,IACAQ,QAAA,GAEAjC,MACAyB,MAAA,SACAQ,QAAA,GAEAC,OAAA,MAEA7P,SACA8P,cAAA,eAAA,iBAAA,SAAArF,EAAAsF,GACA,OACAJ,KAAAI,EAAAC,UAAAvF,EAAAkF,MACAhC,KAAAlD,EAAAkD,KACAe,UAAAqB,EAAAE,eAAAxF,EAAAkD,MACAuC,UAAAH,EAAAI,eAAA1F,EAAAkD,MACAkC,OAAApF,EAAAoF,UAGAO,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,UACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,iBACArD,OAAA,SACAlH,IAAA,eACAO,MACA4C,eACAqH,UAAA,mCAEAC,OACAC,YACAC,YAAA,yCACApB,WAAA,yBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAKA,MAJAA,GAAAC,QAAA,UACAD,EAAAC,QAAA,gBACAD,EAAAC,QAAA,cACAD,EAAAC,QAAA,aACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,SAAA,SAAAF,EAAAG,GACA,MAAAA,GAAAlO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,SACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,sBACArD,OAAA,gBACAlH,IAAA,eACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAlO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,cACArD,OAAA,gBACAlH,IAAA,eACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAE,GACA,OACAT,OAAA,KACAP,oBAAA,KACA0C,oBAAA,KACAoE,MAAA,KACAC,YAAA,KACAnJ,GAAA,KACAwC,OAAAY,EAAAnO,KAAA+K,GAAAgD,EAAAhD,WAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,eACArD,OAAA,gBACAlH,IAAA,sBACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAlO,KAAA+K,GAAAgD,EAAAoG,MAAAvQ,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,iBACArD,OAAA,gBACAlH,IAAA,wBACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,gDACApB,WAAA,yBACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAC,GACA,MAAAA,GAAAlO,KAAA+K,GAAAgD,EAAAoG,MAAAvQ,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WA5LA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAAmP,GAAAjP,EAAAmV,GACA,GAAAC,GAAA,iBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAsQ,eAAAvQ,OAAA,MAAAC,SAAA,EAAAE,IAAA,iCACA8S,YAAAjT,OAAA,MAAAC,SAAA,EAAAE,IAAA,8BACAqS,WAAAxS,OAAA,OAAAG,IAAA,yBACA4Q,kBAAA/Q,OAAA,MAAAG,IAAA,gCACAS,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAMA,MALAA,KACAA,EAAAjB,QAAAkB,SAAAD,GACAA,EAAAqN,oBAAAiH,EAAAE,0BAAAxU,EAAAqN,qBACArN,EAAA+P,oBAAAuE,EAAAE,0BAAAxU,EAAA+P,sBAEA/P,IAGAI,QAAAd,OAAA,SA1BAP,QACAC,OAAA,eACAsB,QAAA,SAAA8N,GAEAA,EAAAnP,SAAA,YAAA,gBCNA,WACA,YAQA,SAAAwV,GAAAtV,GACA,GAAAoV,GAAA,yBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,eAAAmU,GAEAA,EAAAxV,SAAA,gBCPA,WACA,YAQA,SAAAyV,GAAA/J,EAAA9E,EAAAuI,EAAAqG,EAAAE,EAAAC,EAAAtB,EAAAuB,GAgBA,QAAAC,KAeA,QAAA3D,KACA,GAAAtQ,IAAAiI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QAIA,OAHA,OAAArJ,EAAAoJ,WACArR,EAAA2M,KAAA,MAEA3M,EAEA,QAAAkU,GAAA/U,EAAAwF,GACAsD,EAAAkM,MAAAL,EAAApH,MAAA/H,EAAA,SACAsD,EAAAmM,WAAAzP,EAAA,iBACAsD,EAAAoM,WAAApM,EAAAmM,WACAnM,EAAAqM,QAAAnV,EACA8I,EAAAqK,KAAAG,EAAAH,KAEA,QAAAiC,GAAAC,GACAT,EAAAS,MAAAA,EAAArV,KAAAsV,SA7BAhC,EAAAD,OACAoB,EAAApV,OACAA,MAAAiU,EAAAD,OACAF,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAEAhH,EAAA/O,OACA8T,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAqBA,QAAAI,GAAArC,GACArK,EAAAqK,KAAAA,EACArK,EAAA2M,aAGA,QAAAA,KACA5P,EAAA6P,aAAA7P,EAAA8P,UACAxC,KAAArK,EAAAqK,KACAhC,KAAArI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QACAkB,OAAAvK,EAAA8M,gBAIA,QAAAvC,GAAAwC,GACA,MAAAA,IAGA/M,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,SACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAAC,MACA/M,GAAA2M,cAPA3M,EAAA4F,QAUA,QAAAA,KACA5F,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,KACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAA,KACA9M,EAAA2M,aAhFA,GAAA3M,GAAA7F,IAEA6F,GAAA0M,SAAAA,EACA1M,EAAAoJ,UAAAoB,EAAApB,UACApJ,EAAAqJ,QAAAmB,EAAAI,UACA5K,EAAA2M,WAAAA,EACA3M,EAAAyM,aAAAV,EAAAU,aACAzM,EAAA4F,MAAAA,EACA5F,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EACAhM,EAAA+M,YAAAvC,EAAAD,OACAvK,EAAA8M,cAAAtC,EAAAD,OAEAyB,IApBA/V,QACAC,OAAA,eACAgK,WAAA,mBAAA0L,GAEAA,EAAAzV,SAAA,SAAA,SAAA,SAAA,eAAA,aAAA,eAAA,eAAA,0BCPA,WACA,YAQA,SAAA6W,GAAA9H,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAG,EAAAF,EAAA2H,EAAA7W,GAcA,QAAAwP,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAAkN,aAAA/K,GACAqD,EAAAlO,OAAA0I,EAAAkN,aAAAnH,EAAAC,GAEAR,EAAAnO,KAAA2I,EAAAkN,aAAAnH,EAAAC,GAeA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,iCAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EA5CA,GAAA9F,GAAA7F,IAEA6F,GAAAkN,aAAA7H,EACArF,EAAA4F,MAAAA,EACA5F,EAAA3I,KAAAA,EACA2I,EAAAqM,QAAA/G,EAAA/O,QACAyJ,EAAAmN,OAAAF,EAAA1W,QACAyJ,EAAAoN,MAAAhX,EAAAG,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UAgBAhH,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,IAzCA3T,QACAC,OAAA,eACAgK,WAAA,+BAAA8M,GAEAA,EAAA7W,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,eAAA,SAAA,QAAA,WCPA,WACA,YAQA,SAAAkX,GAAAxL,EAAAtJ,EAAA4M,EAAAjH,EAAAmH,EAAAG,EAAAF,EAAA2H,EAAA7W,GACA,GAAA4J,GAAA7F,IAEA6F,GAAAkN,aAAA7H,EACArF,EAAA9B,cAAAA,EAAAJ,IAEA,IAAAoM,GAAA3R,EAAAyM,IAAA,iCAAA,SAAAhD,EAAAjK,GACAiI,EAAAkN,aAAAnV,GAEA8J,GAAAmD,IAAA,WAAAkF,GAfAjU,QACAC,OAAA,eACAgK,WAAA,+BAAAmN,GAEAA,EAAAlX,SAAA,SAAA,aAAA,eAAA,gBAAA,SAAA,eAAA,SAAA,QAAA,WCPA,WACA,YAQA,SAAAmX,GAAAlI,EAAAC,EAAAG,GAOA,QAAAI,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACAqD,EAAAjO,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAAkN,aAAA7H,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,+BAAAoN,GAEAA,EAAAnX,SAAA,oBAAA,SAAA,mBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,gBACArD,OAAA,SACAlH,IAAA,iCACAO,MACA4C,aAAA,cACAqH,UAAA,uCAEAC,OACAC,YACAC,YAAA,+CACApB,WAAA,yBACAyB,aAAA,OAGAvD,QACAiM,MACAP,MAAA,IACAQ,QAAA,GAEAjC,MACAyB,MAAA,SACAQ,QAAA,GAEAC,OAAA,MAEA7P,SACA8P,cAAA,eAAA,iBAAA,SAAArF,EAAAsF,GACA,OACAJ,KAAAI,EAAAC,UAAAvF,EAAAkF,MACAhC,KAAAlD,EAAAkD,KACAe,UAAAqB,EAAAE,eAAAxF,EAAAkD,MACAuC,UAAAH,EAAAI,eAAA1F,EAAAkD,MACAkC,OAAApF,EAAAoF,UAGAO,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAIA,MAHAA,GAAAC,QAAA,gBACAD,EAAAC,QAAA,cACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,uBACArD,OAAA,SACAlH,IAAA,qBACAO,MACA4C,aAAA,cACAqH,UAAA,yCAEAC,OACAC,YACAC,YAAA,qDACApB,WAAA,+BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,gBACAD,EAAAC,QAAA,cACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,eAAA,SAAAF,EAAAK,GACA,MAAAA,GAAApO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,eACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,4BACArD,OAAA,sBACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,qDACApB,WAAA,+BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,eAAA,SAAAG,GACA,MAAAA,GAAApO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,oBACArD,OAAA,gBACAlH,IAAA,qBACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,qDACApB,WAAA,+BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAC,GACA,OACAiD,WAAA,KACAgF,cAAA,KACApL,GAAA,KACAwD,OAAAL,EAAAlO,KAAA+K,GAAAgD,EAAAhD,WAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,qBACArD,OAAA,gBACAlH,IAAA,4BACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,qDACApB,WAAA,+BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,eAAA,SAAAG,GACA,MAAAA,GAAApO,KAAA+K,GAAAgD,EAAAqI,MAAAxS,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,uBACArD,OAAA,gBACAlH,IAAA,8BACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,4DACApB,WAAA,+BACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,eAAA,SAAAG,GACA,MAAAA,GAAApO,KAAA+K,GAAAgD,EAAAqI,MAAAxS,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAxLA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAAqP,GAAAnP,GACA,GAAAoV,GAAA,uBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAW,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,IAGAI,QAAAd,OAAA,SApBAP,QACAC,OAAA,eACAsB,QAAA,eAAAgO,GAEAA,EAAArP,SAAA,gBCNA,WACA,YAQA,SAAAsX,GAAApX,GACA,GAAAoV,GAAA,+BAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,qBAAAiW,GAEAA,EAAAtX,SAAA,gBCPA,WACA,YAQA,SAAAuX,GAAA7L,EAAA9E,EAAAyI,EAAAiI,EAAA5B,EAAAC,EAAAtB,EAAAuB,GAgBA,QAAAC,KAeA,QAAA3D,KACA,GAAAtQ,IAAAiI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QAIA,OAHA,OAAArJ,EAAAoJ,WACArR,EAAA2M,KAAA,MAEA3M,EAEA,QAAAkU,GAAA/U,EAAAwF,GACAsD,EAAAkM,MAAAL,EAAApH,MAAA/H,EAAA,SACAsD,EAAAmM,WAAAzP,EAAA,iBACAsD,EAAAoM,WAAApM,EAAAmM,WACAnM,EAAA+G,cAAA7P,EACA8I,EAAAqK,KAAAG,EAAAH,KAEA,QAAAiC,GAAAC,GACAT,EAAAS,MAAAA,EAAArV,KAAAsV,SA7BAhC,EAAAD,OACAkD,EAAAlX,OACAA,MAAAiU,EAAAD,OACAF,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAEA9G,EAAAjP,OACA8T,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAqBA,QAAAI,GAAArC,GACArK,EAAAqK,KAAAA,EACArK,EAAA2M,aAGA,QAAAA,KACA5P,EAAA6P,aAAA7P,EAAA8P,UACAxC,KAAArK,EAAAqK,KACAhC,KAAArI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QACAkB,OAAAvK,EAAA8M,gBAIA,QAAAvC,GAAAwC,GACA,MAAAA,IAGA/M,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,SACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAAC,MACA/M,GAAA2M,cAPA3M,EAAA4F,QAUA,QAAAA,KACA5F,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,KACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAA,KACA9M,EAAA2M,aAhFA,GAAA3M,GAAA7F,IAEA6F,GAAA0M,SAAAA,EACA1M,EAAAoJ,UAAAoB,EAAApB,UACApJ,EAAAqJ,QAAAmB,EAAAI,UACA5K,EAAA2M,WAAAA,EACA3M,EAAAyM,aAAAV,EAAAU,aACAzM,EAAA4F,MAAAA,EACA5F,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EACAhM,EAAA+M,YAAAvC,EAAAD,OACAvK,EAAA8M,cAAAtC,EAAAD,OAEAyB,IApBA/V,QACAC,OAAA,eACAgK,WAAA,yBAAAwN,GAEAA,EAAAvX,SAAA,SAAA,SAAA,eAAA,qBAAA,aAAA,eAAA,eAAA,0BCPA,WACA,YAQA,SAAAwX,GAAAzI,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAE,EAAAqI,EAAAC,EAAAvI,GAcA,QAAAM,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAA2E,OAAAxC,GACAoD,EAAAjO,OAAA0I,EAAA2E,OAAAoB,EAAAC,GAEAT,EAAAlO,KAAA2I,EAAA2E,OAAAoB,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,2BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EAjCA,GAAA9F,GAAA7F,IAEA6F,GAAA2E,OAAAU,EACArF,EAAA4F,MAAAA,EACA5F,EAAA3I,KAAAA,EACA2I,EAAA8N,OAAAF,EAAArX,QACAyJ,EAAAuG,SAAAsH,EAAAtX,QACAyJ,EAAAqM,QAAA/G,EAAA/O,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UAjBA/Q,QACAC,OAAA,eACAgK,WAAA,yBAAAyN,GAEAA,EAAAxX,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,SAAA,QAAA,UAAA,aCPA,WACA,YAQA,SAAA4X,GAAA5G,EAAAC,EAAAvF,EAAAtJ,EAAA4M,EAAAjH,EAAAmH,EAAA/L,EAAAiM,EAAAqI,EAAAC,EAAAvI,EAAAuG,GAuBA,QAAAzJ,KACA9I,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,EACAwF,EAAA9E,gBAAA5B,EAAA4B,kBAzBA,GAAA8E,GAAA7F,IAEA6F,GAAAxF,QAAA,KACAwF,EAAA9E,gBAAA,KACA8E,EAAA2E,OAAAU,EACArF,EAAAsG,OAAA,EACAtG,EAAAoJ,UAAA,0BACApJ,EAAAqJ,SAAA,EACArJ,EAAAgO,oBAAA,0BACAhO,EAAAiO,mBAAA,EACAjO,EAAAsJ,KAAA,SAAAnH,GACA,GAAAoH,GAAApC,EAAAqC,MACArC,GAAAqC,KAAArH,GACAiF,IAEAD,EAAAqC,KAAAD,IAGAvJ,EAAA9B,cAAAA,EAAAJ,KAEAsE,IASApC,EAAAkO,mBAAA3I,EAAA2I,oBAAA/L,GAAAgD,EAAAhD,KACAoD,EAAAgB,UAAApE,GAAAgD,EAAAhD,KAAAnH,SAAAlD,KAAA,SAAAZ,GACA8I,EAAAuG,SAAArP,EACA8I,EAAA9E,kBACA8E,EAAAxF,QAAAV,YAAA0M,SAAA,cACAxG,EAAAsG,OAAA,EAEApP,EAAAkN,QAAA,SAAAzL,GACAA,EAAA8N,KAAAtK,OAAA6D,EAAAxF,QAAA2B,OAAAxD,EAAA+N,MAAAvE,GAAA,IAAAnC,EAAAsG,OAAA,QAOAtG,EAAAmO,SAAA5I,EAAA4I,UAAAhM,GAAAgD,EAAAhD,KAEAnC,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,GAGA,IAAAM,GAAA3R,EAAAyM,IAAA,2BAAA,SAAAhD,EAAAjK,GACAiI,EAAA2E,OAAA5M,GAEA8J,GAAAmD,IAAA,WAAAkF,GAnEAjU,QACAC,OAAA,eACAgK,WAAA,yBAAA6N,GAEAA,EAAA5X,SAAA,YAAA,gBAAA,SAAA,aAAA,eAAA,gBAAA,SAAA,YAAA,SAAA,QAAA,UAAA,SAAA,iBCPA,WACA,YAQA,SAAAiY,GAAAhJ,EAAAC,EAAAE,GAOA,QAAAK,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACAoD,EAAAhO,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAA2E,OAAAU,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,yBAAAkO,GAEAA,EAAAjY,SAAA,oBAAA,SAAA,aCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,UACArD,OAAA,MACAlH,IAAA,UACAO,MACA4C,eACAqH,UAAA,iCAEAC,OACAC,YACAC,YAAA,mCACApB,WAAA,mBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,UACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,iBACArD,OAAA,SACAlH,IAAA,QACAO,MACA4C,eACAqH,UAAA,mCAEAC,OACAC,YACAC,YAAA,yCACApB,WAAA,yBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAIA,MAHAA,GAAAC,QAAA,UACAD,EAAAC,QAAA,WACAD,EAAAC,QAAA,UACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,SAAA,SAAAF,EAAAI,GACA,MAAAA,GAAAnO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB;AACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,SACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,sBACArD,OAAA,gBACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAE,GACA,MAAAA,GAAAnO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,cACArD,OAAA,SACAlH,IAAA,GACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,OAAA,WACA,OACAT,OAAA,KACA0G,YAAA,KACAnJ,GAAA,UAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,SAAA,MAAA+B,OAAA,YACA,WACA/C,EAAAgB,GAAA,gBAIAmD,MAAA,eACArD,OAAA,SACAlH,IAAA,aACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,yCACApB,WAAA,yBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAE,GACA,MAAAA,GAAAnO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,SAAA,MAAA+B,OAAA,YACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,iBACArD,OAAA,SACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,gDACApB,WAAA,yBACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAE,GACA,MAAAA,GAAAnO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,SAAA,MAAA+B,OAAA,YACA,WACA/C,EAAAgB,GAAA,WAnKA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAAoP,GAAAlP,EAAAmV,GACA,GAAAC,GAAA,iBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACA8P,UAAA/P,OAAA,MAAAC,SAAA,EAAAE,IAAA,4BACAuX,oBAAA1X,OAAA,MAAAC,SAAA,EAAAE,IAAA,sCACAwX,UAAA3X,OAAA,MAAAC,SAAA,EAAAE,IAAA,4BACAkQ,eACArQ,OAAA,MACAG,IAAA,6BACAM,kBAAA,SAAAC,GAMA,MALAA,KACAA,EAAAjB,QAAAkB,SAAAD,GACAA,EAAAqN,oBAAAiH,EAAAE,0BAAAxU,EAAAqN,qBACArN,EAAA+P,oBAAAuE,EAAAE,0BAAAxU,EAAA+P,sBAEA/P,IAGAN,QAAAJ,OAAA,MAAAC,SAAA,EAAAE,IAAA,eACAS,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,IAGAI,QAAAd,OAAA,SApCAP,QACAC,OAAA,eACAsB,QAAA,SAAA+N,GAEAA,EAAApP,SAAA,YAAA,gBCNA,WACA,YAQA,SAAAkY,GAAAhY,GACA,GAAAoV,GAAA,yBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,eAAA6W,GAEAA,EAAAlY,SAAA,gBCPA,WACA,YAQA,SAAAmY,GAAAzM,EAAA9E,EAAAoK,EAAAC,EAAA7B,EAAA8I,EAAAxC,EAAAC,GACA,GAAA9L,GAAA7F,IASA6F,GAAAsJ,KAAA,SAAAnH,GACA,GAAAoH,GAAApC,EAAAqC,MACArC,GAAAqC,KAAArH,GACAiF,IAEAD,EAAAqC,KAAAD,IAEAvJ,EAAA8G,QAAAvB,EAAA3O,SACAoJ,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,IAhCA3T,QACAC,OAAA,eACAgK,WAAA,mBAAAoO,GAEAA,EAAAnY,SAAA,SAAA,SAAA,YAAA,gBAAA,SAAA,eAAA,aAAA,mBCPA,WACA,YAQA,SAAAoY,GAAArJ,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAwI,EAAAtI,EAAA0H,EAAA7W,GAeA,QAAAwP,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAAwO,QAAArM,GACA0L,EAAAvW,OAAA0I,EAAAwO,QAAAzI,EAAAC,GAEA6H,EAAAxW,KAAA2I,EAAAwO,QAAAzI,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,4BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EAiBA,QAAAK,GAAAC,GACApG,EAAAqG,qBAAAD,IAAA,EApDA,GAAApG,GAAA7F,IAEA6F,GAAAwO,QAAAnJ,EACArF,EAAA4F,MAAAA,EACA5F,EAAAqG,wBACArG,EAAAmG,aAAAA,EACAnG,EAAA3I,KAAAA,EACA2I,EAAAmN,OAAAF,EAAA1W,QACAyJ,EAAAoN,MAAAhX,EAAAG,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UA0BAhH,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,IAGA5J,EAAAqG,qBAAAoI,WAAA,EACAzO,EAAAqG,qBAAAqI,WAAA,EAxDAzY,QACAC,OAAA,eACAgK,WAAA,0BAAAqO,GAEAA,EAAApY,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,UAAA,SAAA,QAAA,WCPA,WACA,YAQA,SAAAwY,GAAA9M,EAAAtJ,EAAA4M,EAAAjH,EAAAmH,EAAAwI,EAAAtI,EAAA0H,EAAA7W,GACA,GAAA4J,GAAA7F,IAEA6F,GAAAwO,QAAAnJ,EACArF,EAAA9B,cAAAA,EAAAJ,IAEA,IAAAoM,GAAA3R,EAAAyM,IAAA,4BAAA,SAAAhD,EAAAjK,GACAiI,EAAAwO,QAAAzW,GAEA8J,GAAAmD,IAAA,WAAAkF,GAfAjU,QACAC,OAAA,eACAgK,WAAA,0BAAAyO,GAEAA,EAAAxY,SAAA,SAAA,aAAA,eAAA,gBAAA,SAAA,UAAA,SAAA,QAAA,WCPA,WACA,YAQA,SAAAyY,GAAAxJ,EAAAC,EAAAwI,GAOA,QAAAjI,KACAR,EAAAS,QAAA,UAGA,QAAAuE,KACApK,EAAAwO,QAAAE,UAAA,GAAAlK,MACAqJ,EAAAvW,OAAA0I,EAAAwO,QACA,WACApJ,EAAAc,OAAA,KAdA,GAAAlG,GAAA7F,IAEA6F,GAAAwO,QAAAnJ,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,0BAAA0O,GAEAA,EAAAzY,SAAA,oBAAA,SAAA,cCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,WACArD,OAAA,SACAlH,IAAA,4BACAO,MACA4C,aAAA,cACAqH,UAAA,kCAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,oBACAyB,aAAA,OAGAvD,QACAiM,MACAP,MAAA,IACAQ,QAAA,GAEAjC,MACAyB,MAAA,SACAQ,QAAA,GAEAC,OAAA,MAEA7P,SACA8P,cAAA,eAAA,iBAAA,SAAArF,EAAAsF,GACA,OACAJ,KAAAI,EAAAC,UAAAvF,EAAAkF,MACAhC,KAAAlD,EAAAkD,KACAe,UAAAqB,EAAAE,eAAAxF,EAAAkD,MACAuC,UAAAH,EAAAI,eAAA1F,EAAAkD,MACAkC,OAAApF,EAAAoF,UAGAO,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,WACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,kBACArD,OAAA,SACAlH,IAAA,gBACAO,MACA4C,aAAA,cACAqH,UAAA,oCAEAC,OACAC,YACAC,YAAA,2CACApB,WAAA,0BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,WACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,UAAA,SAAAF,EAAA0I,GACA,MAAAA,GAAAzW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,UACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,uBACArD,OAAA,gBACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,2CACApB,WAAA,0BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,UAAA,SAAAwI,GACA,MAAAA,GAAAzW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,eACArD,OAAA,gBACAlH,IAAA,gBACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,2CACApB,WAAA,0BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAE,GACA,OACAkJ,UAAA,GAAAjK,MACAkK,UAAA,KACAnB,cAAA,KACApL,GAAA,KACAwC,OAAAY,EAAAnO,KAAA+K,GAAAgD,EAAAhD,WAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,gBACArD,OAAA,gBACAlH,IAAA,uBACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,2CACApB,WAAA,0BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,UAAA,SAAAwI,GACA,MAAAA,GAAAzW,KAAA+K,GAAAgD,EAAA0J,MAAA7T,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,kBACArD,OAAA,gBACAlH,IAAA,yBACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,kDACApB,WAAA,0BACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,UAAA,SAAAwI,GACA,MAAAA,GAAAzW,KAAA+K,GAAAgD,EAAA0J,MAAA7T,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAvLA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAA0X,GAAAxX,EAAAmV,GACA,GAAAC,GAAA,kBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAW,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAMA,MALAA,KACAA,EAAAjB,QAAAkB,SAAAD,GACAA,EAAAuX,UAAAjD,EAAAsD,2BAAA5X,EAAAuX,WACAvX,EAAAwX,UAAAlD,EAAAsD,2BAAA5X,EAAAwX,YAEAxX,IAGAI,QACAd,OAAA,MACAuY,iBAAA,SAAA7X,GACA,GAAA8X,GAAA/Y,QAAA+Y,KAAA9X,EAGA,OAFA8X,GAAAP,UAAAjD,EAAAyD,yBAAAD,EAAAP,WACAO,EAAAN,UAAAlD,EAAAyD,yBAAAD,EAAAN,WACAzY,QAAAiZ,OAAAF,KAGA3X,MACAb,OAAA,OACAuY,iBAAA,SAAA7X,GACA,GAAA8X,GAAA/Y,QAAA+Y,KAAA9X,EAGA,OAFA8X,GAAAP,UAAAjD,EAAAyD,yBAAAD,EAAAP,WACAO,EAAAN,UAAAlD,EAAAyD,yBAAAD,EAAAN,WACAzY,QAAAiZ,OAAAF,OArCA/Y,QACAC,OAAA,eACAsB,QAAA,UAAAqW,GAEAA,EAAA1X,SAAA,YAAA,gBCNA,WACA,YAQA,SAAAgZ,GAAA9Y,GACA,GAAAoV,GAAA,0BAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,gBAAA2X,GAEAA,EAAAhZ,SAAA,gBCPA,WACA,YAQA,SAAAiZ,GAAAvN,EAAA9E,EAAA8Q,EAAAsB,EAAAtD,EAAAC,EAAAtB,EAAAuB,GAgBA,QAAAC,KAeA,QAAA3D,KACA,GAAAtQ,IAAAiI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QAIA,OAHA,OAAArJ,EAAAoJ,WACArR,EAAA2M,KAAA,MAEA3M,EAEA,QAAAkU,GAAA/U,EAAAwF,GACAsD,EAAAkM,MAAAL,EAAApH,MAAA/H,EAAA,SACAsD,EAAAmM,WAAAzP,EAAA,iBACAsD,EAAAoM,WAAApM,EAAAmM,WACAnM,EAAAuG,SAAArP,EACA8I,EAAAqK,KAAAG,EAAAH,KAEA,QAAAiC,GAAAC,GACAT,EAAAS,MAAAA,EAAArV,KAAAsV,SA7BAhC,EAAAD,OACA4E,EAAA5Y,OACAA,MAAAiU,EAAAD,OACAF,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAEAuB,EAAAtX,OACA8T,KAAAG,EAAAH,KAAA,EACAe,KAAApL,EAAAyM,aACApE,KAAAA,KACA4D,EAAAK,GAqBA,QAAAI,GAAArC,GACArK,EAAAqK,KAAAA,EACArK,EAAA2M,aAGA,QAAAA,KACA5P,EAAA6P,aAAA7P,EAAA8P,UACAxC,KAAArK,EAAAqK,KACAhC,KAAArI,EAAAoJ,UAAA,KAAApJ,EAAAqJ,QAAA,MAAA,QACAkB,OAAAvK,EAAA8M,gBAIA,QAAAvC,GAAAwC,GACA,MAAAA,IAGA/M,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,SACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAAC,MACA/M,GAAA2M,cAPA3M,EAAA4F,QAUA,QAAAA,KACA5F,EAAAkM,MAAA,KACAlM,EAAAqK,KAAA,EACArK,EAAAoJ,UAAA,KACApJ,EAAAqJ,SAAA,EACArJ,EAAA8M,cAAA,KACA9M,EAAA2M,aAhFA,GAAA3M,GAAA7F,IAEA6F,GAAA0M,SAAAA,EACA1M,EAAAoJ,UAAAoB,EAAApB,UACApJ,EAAAqJ,QAAAmB,EAAAI,UACA5K,EAAA2M,WAAAA,EACA3M,EAAAyM,aAAAV,EAAAU,aACAzM,EAAA4F,MAAAA,EACA5F,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EACAhM,EAAA+M,YAAAvC,EAAAD,OACAvK,EAAA8M,cAAAtC,EAAAD,OAEAyB,IApBA/V,QACAC,OAAA,eACAgK,WAAA,oBAAAkP,GAEAA,EAAAjZ,SAAA,SAAA,SAAA,UAAA,gBAAA,aAAA,eAAA,eAAA,0BCPA,WACA,YAQA,SAAAkZ,GAAAnK,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAuI,EAAArI,GAYA,QAAAK,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAAsP,MAAAnN,GACAyL,EAAAtW,OAAA0I,EAAAsP,MAAAvJ,EAAAC,GAEA4H,EAAAvW,KAAA2I,EAAAsP,MAAAvJ,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,0BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EA/BA,GAAA9F,GAAA7F,IAEA6F,GAAAsP,MAAAjK,EACArF,EAAA4F,MAAAA,EACA5F,EAAA3I,KAAAA,EACA2I,EAAA8G,QAAAvB,EAAAhP,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UAfA/Q,QACAC,OAAA,eACAgK,WAAA,wBAAAmP,GAEAA,EAAAlZ,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,QAAA,aCPA,WACA,YAQA,SAAAoZ,GAAA1N,EAAAtJ,EAAA4M,EAAAjH,EAAAmH,EAAAuI,EAAArI,GACA,GAAAvF,GAAA7F,IAEA6F,GAAAsP,MAAAjK,EACArF,EAAA9B,cAAAA,EAAAJ,IAEA,IAAAoM,GAAA3R,EAAAyM,IAAA,0BAAA,SAAAhD,EAAAjK,GACAiI,EAAAsP,MAAAvX,GAEA8J,GAAAmD,IAAA,WAAAkF,GAfAjU,QACAC,OAAA,eACAgK,WAAA,wBAAAqP,GAEAA,EAAApZ,SAAA,SAAA,aAAA,eAAA,gBAAA,SAAA,QAAA,aCPA,WACA,YAQA,SAAAqZ,GAAApK,EAAAC,EAAAuI,GAOA,QAAAhI,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACAyL,EAAArW,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAAsP,MAAAjK,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,wBAAAsP,GAEAA,EAAArZ,SAAA,oBAAA,SAAA,YCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,SACArD,OAAA,SACAlH,IAAA,SACAO,MACA4C,aAAA,cACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,iCACApB,WAAA,kBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,SACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,gBACArD,OAAA,SACAlH,IAAA,cACAO,MACA4C,aAAA,cACAqH,UAAA,kCAEAC,OACAC,YACAC,YAAA,uCACApB,WAAA,wBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,QAAA,SAAAF,EAAAyI,GACA,MAAAA,GAAAxW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,QACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,qBACArD,OAAA,eACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAAuI,GACA,MAAAA,GAAAxW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,aACArD,OAAA,QACAlH,IAAA,OACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,OAAA,WACA,OACAT,OAAA,KACAzC,GAAA,UAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,eAIAmD,MAAA,cACArD,OAAA,QACAlH,IAAA,aACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAAuI,GACA,MAAAA,GAAAxW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,gBACArD,OAAA,QACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,8CACApB,WAAA,wBACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAAuI,GACA,MAAAA,GAAAxW,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,WAhKA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAAyX,GAAAvX,GACA,GAAAoV,GAAA,gBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAW,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,IAGAI,QAAAd,OAAA,SApBAP,QACAC,OAAA,eACAsB,QAAA,QAAAoW,GAEAA,EAAAzX,SAAA,gBCNA,WACA,YAQA,SAAAsZ,GAAApZ,GACA,GAAAoV,GAAA,wBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,cAAAiY,GAEAA,EAAAtZ,SAAA,gBCPA,WACA,YAQA,SAAAuZ,GAAA7N,EAAA9E,EAAA6Q,EAAA6B,GASA,QAAAzD,KACA4B,EAAArX,MAAA,SAAAwB,GACAiI,EAAA8N,OAAA/V,IAIA,QAAAwS,KACA,MAAAvK,GAAA+M,gBAGA0C,GAAAlZ,OAAAA,MAAAyJ,EAAA+M,aAAA,SAAAhV,GACAiI,EAAA8N,OAAA/V,IAHAiI,EAAAgM,UAhBA,GAAAhM,GAAA7F,IAEA6F,GAAA8N,UACA9N,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EAEAA,IAbA/V,QACAC,OAAA,eACAgK,WAAA,kBAAAwP,GAEAA,EAAAvZ,SAAA,SAAA,SAAA,QAAA,kBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,UACAyO,UAAA,EACA9R,OAAA,QATA5H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAyZ,GAAA1K,EAAArD,EAAAsD,EAAAC,EAAAkC,EAAAjC,EAAAI,EAAAH,GAcA,QAAAM,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAA6P,UAAA1N,GACAsD,EAAAnO,OAAA0I,EAAA6P,UAAA9J,EAAAC,GAEAP,EAAApO,KAAA2I,EAAA6P,UAAA9J,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,8BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EAjCA,GAAA9F,GAAA7F,IAEA6F,GAAA6P,UAAAxK,EACArF,EAAA4F,MAAAA,EACA5F,EAAAmJ,SAAA7B,EAAA6B,SACAnJ,EAAAkJ,SAAA5B,EAAA4B,SACAlJ,EAAA3I,KAAAA,EACA2I,EAAAqM,QAAA/G,EAAA/O,QAEA2O,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UA2BAhH,EAAA8P,WAAA,SAAAC,EAAAF,GACAE,GACAzI,EAAA0I,SAAAD,EAAA,SAAAE,GACApO,EAAAqO,OAAA,WACAL,EAAAM,QAAAF,EACAJ,EAAAO,mBAAAL,EAAAM,UAjDApa,QACAC,OAAA,eACAgK,WAAA,4BAAA0P,GAEAA,EAAAzZ,SAAA,WAAA,SAAA,eAAA,oBAAA,YAAA,SAAA,YAAA,aCPA,WACA,YAQA,SAAAma,GAAAzO,EAAAtJ,EAAA4M,EAAAjH,EAAAoJ,EAAAjC,EAAAI,EAAAH,GACA,GAAAtF,GAAA7F,IAEA6F,GAAA6P,UAAAxK,EACArF,EAAA9B,cAAAA,EAAAJ,KACAkC,EAAAmJ,SAAA7B,EAAA6B,SACAnJ,EAAAkJ,SAAA5B,EAAA4B,QAEA,IAAAgB,GAAA3R,EAAAyM,IAAA,8BAAA,SAAAhD,EAAAjK,GACAiI,EAAA6P,UAAA9X,GAEA8J,GAAAmD,IAAA,WAAAkF,GAjBAjU,QACAC,OAAA,eACAgK,WAAA,4BAAAoQ,GAEAA,EAAAna,SAAA,SAAA,aAAA,eAAA,gBAAA,YAAA,SAAA,YAAA,aCPA,WACA,YAQA,SAAAoa,GAAAnL,EAAAC,EAAAI,GAOA,QAAAG,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACAsD,EAAAlO,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAA6P,UAAAxK,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,4BAAAqQ,GAEAA,EAAApa,SAAA,oBAAA,SAAA,gBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,aACArD,OAAA,SACAlH,IAAA,aACAO,MACA4C,aAAA,cACAqH,UAAA,oCAEAC,OACAC,YACAC,YAAA,yCACApB,WAAA,sBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,aACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,oBACArD,OAAA,SACAlH,IAAA,kBACAO,MACA4C,aAAA,cACAqH,UAAA,sCAEAC,OACAC,YACAC,YAAA,+CACApB,WAAA,4BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,aACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,YAAA,SAAAF,EAAAM,GACA,MAAAA,GAAArO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,YACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,yBACArD,OAAA,mBACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,+CACApB,WAAA,4BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,YAAA,SAAAI,GACA,MAAAA,GAAArO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,iBACArD,OAAA,gBACAlH,IAAA,kBACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,+CACApB,WAAA,4BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,SAAA,SAAAC,GACA,OACAV,OAAA,KACAuL,QAAA,KACAC,mBAAA,KACAjO,GAAA,KACAwD,OAAAL,EAAAlO,KAAA+K,GAAAgD,EAAAhD,WAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,kBACArD,OAAA,YACAlH,IAAA,aACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,+CACApB,WAAA,4BACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,YAAA,SAAAI,GACA,MAAAA,GAAArO,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,YAAA,MAAA+B,OAAA,eACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,oBACArD,OAAA,gBACAlH,IAAA,2BACAO,MACA4C,aAAA,aAAA,cAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,sDACApB,WAAA,4BACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,YAAA,SAAAI,GACA,MAAAA,GAAArO,KAAA+K,GAAAgD,EAAAqL,MAAAxV,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,OAAA,mBACA,WACA/C,EAAAgB,GAAA,WAnKA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAAsP,GAAApP,GACA,GAAAoV,GAAA,oBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAW,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,IAGAI,QAAAd,OAAA,SApBAP,QACAC,OAAA,eACAsB,QAAA,YAAAiO,GAEAA,EAAAtP,SAAA,gBCNA,WACA,YAQA,SAAAsa,GAAApa,GACA,GAAAoV,GAAA,4BAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,kBAAAiZ,GAEAA,EAAAta,SAAA,gBCPA,WACA,YAQA,SAAAua,GAAA7O,EAAA9E,EAAAuK,EAAA7B,EAAAgL,GAWA,QAAAzE,KACAvG,EAAAlP,MAAA,SAAAwB,GACAiI,EAAAyJ,WAAA1R,IAIA,QAAAwS,KACA,MAAAvK,GAAA+M,gBAGA0D,GAAAla,OAAAA,MAAAyJ,EAAA+M,aAAA,SAAAhV,GACAiI,EAAAyJ,WAAA1R,IAHAiI,EAAAgM,UAlBA,GAAAhM,GAAA7F,IAEA6F,GAAAyJ,cACAzJ,EAAAkJ,SAAA5B,EAAA4B,SACAlJ,EAAAmJ,SAAA7B,EAAA6B,SACAnJ,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EAEAA,IAfA/V,QACAC,OAAA,eACAgK,WAAA,sBAAAwQ,GAEAA,EAAAva,SAAA,SAAA,SAAA,YAAA,YAAA,sBCPA,WACA,YAQA,SAAAwa,GAAAzL,EAAArD,EAAAsD,EAAAC,EAAAC,EAAA4H,GAWA,QAAArH,KACAR,EAAAS,QAAA,UAGA,QAAAxO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAA0G,MAAAvE,GACA8K,EAAA3V,OAAA0I,EAAA0G,MAAAX,EAAAC,GAEAiH,EAAA5V,KAAA2I,EAAA0G,MAAAX,EAAAC,GAIA,QAAAD,GAAAhO,GACA8J,EAAAoE,MAAA,0BAAAlO,GACAqN,EAAAc,MAAAnO,GACAiI,EAAA8F,UAAA,EAGA,QAAAE,KACAhG,EAAA8F,UAAA,EA9BA,GAAA9F,GAAA7F,IAEA6F,GAAA0G,MAAArB,EACArF,EAAA4F,MAAAA,EACA5F,EAAA3I,KAAAA,EAEA6N,EAAA,WACAjP,QAAA0C,QAAA,2BAAAqO,UAdA/Q,QACAC,OAAA,eACAgK,WAAA,wBAAAyQ,GAEAA,EAAAxa,SAAA,WAAA,SAAA,eAAA,oBAAA,SAAA,YCPA,WACA,YAQA,SAAAya,GAAA/O,EAAAtJ,EAAA4M,EAAAjH,EAAAmH,EAAA4H,GACA,GAAAjN,GAAA7F,IAEA6F,GAAA0G,MAAArB,EACArF,EAAA9B,cAAAA,EAAAJ,IAEA,IAAAoM,GAAA3R,EAAAyM,IAAA,0BAAA,SAAAhD,EAAAjK,GACAiI,EAAA0G,MAAA3O,GAEA8J,GAAAmD,IAAA,WAAAkF,GAfAjU,QACAC,OAAA,eACAgK,WAAA,wBAAA0Q,GAEAA,EAAAza,SAAA,SAAA,aAAA,eAAA,gBAAA,SAAA,YCPA,WACA,YAQA,SAAA0a,GAAAzL,EAAAC,EAAA4H,GAOA,QAAArH,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjI,GACA8K,EAAA1V,QAAA4K,GAAAA,GACA,WACAiD,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAA0G,MAAArB,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,wBAAA2Q,GAEAA,EAAA1a,SAAA,oBAAA,SAAA,YCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,SACArD,OAAA,SACAlH,IAAA,SACAO,MACA4C,aAAA,cACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,iCACApB,WAAA,kBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAGA,MAFAA,GAAAC,QAAA,SACAD,EAAAC,QAAA,UACAjJ,EAAAuG,eAIAmC,MAAA,gBACArD,OAAA,SACAlH,IAAA,cACAO,MACA4C,aAAA,cACAqH,UAAA,kCAEAC,OACAC,YACAC,YAAA,uCACApB,WAAA,wBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,YAEAsG,QAAA,eAAA,QAAA,SAAAF,EAAA8H,GACA,MAAAA,GAAA7V,KAAA+K,GAAAgD,EAAAhD,KAAAnH,WAEAkD,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,QACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,qBACArD,OAAA,eACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAA4H,GACA,MAAAA,GAAA7V,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,aACArD,OAAA,QACAlH,IAAA,OACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,OAAA,WACA,OACAT,OAAA,KACAzC,GAAA,UAIApK,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,eAIAmD,MAAA,cACArD,OAAA,QACAlH,IAAA,aACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,wBACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAA4H,GACA,MAAAA,GAAA7V,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,gBACArD,OAAA,QACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,8CACApB,WAAA,wBACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,QAAA,SAAA4H,GACA,MAAAA,GAAA7V,KAAA+K,GAAAgD,EAAAhD,KAAAnH,cAGAjD,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA,MAAA+B,OAAA,WACA,WACA/C,EAAAgB,GAAA,WAhKA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAOA,SAAA8W,GAAA5W,GACA,GAAAoV,GAAA,gBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,GACAW,KACAZ,OAAA,MACAS,kBAAA,SAAAC,GAIA,MAHAA,KACAA,EAAAjB,QAAAkB,SAAAD,IAEAA,IAGAI,QAAAd,OAAA,SApBAP,QACAC,OAAA,eACAsB,QAAA,QAAAyV,GAEAA,EAAA9W,SAAA,gBCNA,WACA,YAQA,SAAA2a,GAAAza,GACA,GAAAoV,GAAA,wBAEA,OAAApV,GAAAoV,MACAlV,OAAAC,OAAA,MAAAC,SAAA,KAVAR,QACAC,OAAA,eACAsB,QAAA,cAAAsZ,GAEAA,EAAA3a,SAAA,gBCPA,WACA,YAQA,SAAA4a,GAAAlP,EAAA9E,EAAAkQ,EAAA6D,GASA,QAAA9E,KACAiB,EAAA1W,MAAA,SAAAwB,GACAiI,EAAAmN,OAAApV,IAIA,QAAAwS,KACA,MAAAvK,GAAA+M,gBAGA+D,GAAAva,OAAAA,MAAAyJ,EAAA+M,aAAA,SAAAhV,GACAiI,EAAAmN,OAAApV,IAHAiI,EAAAgM,UAhBA,GAAAhM,GAAA7F,IAEA6F,GAAAmN,UACAnN,EAAAuK,OAAAA,EACAvK,EAAAgM,QAAAA,EAEAA,IAbA/V,QACAC,OAAA,eACAgK,WAAA,kBAAA6Q,GAEAA,EAAA5a,SAAA,SAAA,SAAA,QAAA,kBCPA,WACA,YAMA,SAAA6a,KAGA,QAAAC,GAAAC,EAAAF,GACA,GAAAG,MAAAH,GACA,MAAAE,EAEA,IAAAF,GAAA,EACA,MAAA,EAEA,IAAAE,EAAA,CACA,GAAAE,GAAAF,EAAAtV,MAAA,MACAwV,GAAApX,OAAAgX,IACAE,EAAAE,EAAAhJ,MAAA,EAAA4I,GAAAK,KAAA,KAAA,OAIA,MAAAH,GAhBA,MAAAD,GALAhb,QACAC,OAAA,eACAyJ,OAAA,QAAAqR,MCLA,WACA,YAMA,SAAAM,KAGA,QAAAC,GAAAL,EAAAM,EAAAC,GACA,GAAAN,MAAAK,GACA,MAAAN,EAEA,IAAAM,GAAA,EACA,MAAA,EAEA,IAAAN,GAAAA,EAAAlX,OAAAwX,EAAA,CAGA,GAFAN,EAAAA,EAAArQ,UAAA,EAAA2Q,GAEAC,EAOA,KAAA,MAAAP,EAAAQ,OAAAR,EAAAlX,OAAA,IACAkX,EAAAA,EAAAS,OAAA,EAAAT,EAAAlX,OAAA,OARA,CACA,GAAA4X,GAAAV,EAAAW,YAAA,IAEAD,MAAA,IACAV,EAAAA,EAAAS,OAAA,EAAAC,IAOA,MAAAV,GAAA,MAEA,MAAAA,GAzBA,MAAAK,GALAtb,QACAC,OAAA,eACAyJ,OAAA,aAAA2R,MCLA,WACA,YAMA,SAAAQ,KAUA,QAAArZ,GAAAC,EAAAC,EAAAC,EAAAmZ,GACApZ,EAAA8E,KAAA,QAAA,WACAsU,EAAA1J,KAAAzP,EAAAkZ,YAXA,GAAA/Y,IACAE,SAAA,IACAP,OAAA,EACAsZ,QAAA,UACA7Y,KAAAV,EAGA,OAAAM,GAZA9C,QACAC,OAAA,eACA6C,UAAA,WAAA+Y,MCLA,WACA,YAMA,SAAAG,KACA,GAAAlZ,IACAE,SAAA,IACAP,OACA0Q,UAAA,UACAwB,UAAA,IACAvN,SAAA,KAEA6C,WAAAgS,EACAvQ,aAAA,KACAwQ,kBAAA,EAGA,OAAApZ,GAKA,QAAAmZ,GAAArQ,EAAAuQ,GAWA,QAAAC,GAAA1Z,GACA,GAAA2Z,GAAA3Z,EAAA4Z,KAAA,kBACAC,EAAA,iBACAC,EAAA,+BACAC,EAAA,mCACAC,EAAAH,EAAA,IAAAE,EACAE,EAAAH,CACAzS,GAAA4K,YACA+H,EAAAH,EAAA,IAAAC,EACAG,EAAAF,GAEA1S,EAAA6S,eACAP,EAAAxZ,YAAA6Z,GACAL,EAAAzZ,SAAA+Z,GAGA,QAAAC,KACA,GAAAC,GAAAV,EAAAG,KAAA,kBACAC,EAAA,iBACAC,EAAA,+BACAC,EAAA,kCACAI,GAAAha,YAAA2Z,EAAA,IAAAC,GACAI,EAAAja,SAAA2Z,GAGA,QAAAnK,GAAA0K,GACAA,IAAA/S,EAAAoJ,UACApJ,EAAA4K,WAAA,EAEA5K,EAAA4K,WAAA5K,EAAA4K,UAEA5K,EAAAoJ,UAAA2J,EACAlR,EAAAqO,SACAlQ,EAAA3C,WAGA,QAAA2V,GAAAC,GACAjT,EAAA6S,eACAI,GAAA,WAAAA,EAAA,IACAjT,EAAAqS,WAAAD,EAAAG,KAAA,kBAAAU,EAAA,GAAA,OAjDA,GAAAjT,GAAA7F,IAEA6F,GAAAqS,WAAAA,EACArS,EAAA6S,aAAAA,EACA7S,EAAAqI,KAAAA,EACArI,EAAAgT,aAAAA,EAEAnR,EAAAqR,aAAA,eAAA,gBAAAlT,EAAAgT,cACAhT,EAAAgT,eA/BA/c,QACAC,OAAA,eACA6C,UAAA,SAAAkZ,GAkBAC,EAAA/b,SAAA,SAAA,eCvBA,WACA,YAMA,SAAA0V,KAQA,QAAApH,GAAAxB,GACA,GAAA,IAAAA,EAAAjJ,OACA,KAAA,IAAAmZ,OAAA,mCAIA,IAAAC,GAAAnQ,EAAArH,MAAA,KACAsQ,IAoBA,OAlBAjW,SAAAmO,QAAAgP,EAAA,SAAA9K,GACA,GAAA+K,GAAA/K,EAAA1M,MAAA,KACA,IAAA,IAAAyX,EAAArZ,OACA,KAAA,IAAAmZ,OAAA,qCAEA,IAAAxc,GAAA0c,EAAA,GAAAra,QAAA,QAAA,MAAAsa,OACAC,IACA5c,GAAAqC,QACA,GAAAwa,QAAA,uBAAA,KACA,SAAAC,EAAAC,EAAAC,EAAAC,GAAAL,EAAAG,GAAAE,GAEA,IAAAvJ,GAAAkJ,EAAAlJ,IACApU,SAAA4d,SAAAxJ,KACAA,EAAAyJ,SAAAzJ,GAEA,IAAAvM,GAAAuV,EAAA,GAAAra,QAAA,aAAA,MAAAsa,MACApH,GAAApO,GAAAuM,IAEA6B,EAjCA,GAAA5V,IACAmO,MAAAA,EAGA,OAAAnO,GAVAL,QACAC,OAAA,eACAsB,QAAA,aAAAqU,MCLA,WACA,YAMA,SAAApB,KAUA,QAAAI,GAAAxC,GACA,GAAA0L,GAAA1L,EAAAzM,MAAA,IACA,SAAAmY,EAAA/Z,OAAA,IACA,QAAAqO,EAAAzM,MAAA,KAAAwM,OAAA,GAAA,GAQA,QAAAsC,GAAAL,GACA,MAAAyJ,UAAAzJ,GAIA,QAAAM,GAAAtC,GACA,GAAA0L,GAAA1L,EAAAzM,MAAA,IAIA,OAHAmY,GAAA/Z,OAAA,GACA+Z,EAAAC,MAEAD,EAAA1C,KAAA,KA7BA,GAAA/a,IACAuU,eAAAA,EACAH,UAAAA,EACAC,eAAAA,EAGA,OAAArU,GAZAL,QACAC,OAAA,eACAsB,QAAA,iBAAAiT,MCLA,WACA,YAEA,IAAAwJ,IACA/a,SAAA,sRAKAgb,UACA7J,KAAA,IACA+B,WAAA,SACAK,aAAA,KAIAxW,SACAC,OAAA,eACAie,UAAA,eAAAF,MClBA,WACA,YAQA,SAAAzI,GAAA4I,GAWA,QAAA1I,GAAAtF,GACA,MAAAA,GACA,GAAA5B,MAAA4B,GAEA,KAIA,QAAA0I,GAAA1I,GACA,GAAAA,EAAA,CACA,GAAAiO,GAAAjO,EAAAxK,MAAA,IACA,OAAA,IAAA4I,MAAA6P,EAAA,GAAAA,EAAA,GAAA,EAAAA,EAAA,IAEA,MAAA,MAGA,QAAApF,GAAA7I,GACA,MAAAA,GACAgO,EAAA,QAAAhO,EAAA,cAEA,KAIA,QAAAkO,KACA,MAAA,aAlCA,GAAAhe,IACAoV,0BAAAA,EACAoD,2BAAAA,EACAG,yBAAAA,EACAqF,WAAAA,EAGA,OAAAhe,GAfAL,QACAC,OAAA,eACAsB,QAAA,YAAAgU,GAEAA,EAAArV,SAAA,cCPA,WACA,YAQA,SAAAmR,GAAAiN,GAWA,QAAAC,GAAAC,GACA,MAAAxe,SAAA4d,SAAAY,GAGAA,EAAAza,OAAA,GACAya,EAEAA,EAAAA,EAAA5T,UAAA,EAAA,IAAA,MAAA4T,EAAArM,OAAA,IAAA,GALA,GAQA,QAAAe,GAAAuL,GAKA,QAAAC,GAAAC,EAAAC,GACA,MAAAA,GAAAzc,QAAAwc,EAAAC,EAAA7a,OAAA4a,EAAA5a,WAAA,EAGA,QAAA8a,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAAtJ,GAAAsJ,GACA,MAAAA,GAAA1a,OAAA,EAAA,EAAA8a,EAAAJ,GAGA,QAAAK,GAAA3J,GACA,MAAAA,GAAArB,WAAA/Q,QAAA,wBAAA,KAAA,SAvBA,MAAA/C,SAAA4d,SAAAa,GA0BAK,EAAA3J,EAAAsJ,IAzBA,GA4BA,QAAAxL,GAAAmH,EAAAnZ,GACAqd,EAAAhW,KAAA,QAAA8R,EAAA,WAAAnZ,EAAA,UAGA,QAAA8Y,GAAAgF,EAAA1X,GACA,GAAA2X,GAAA,GAAAC,WACAD,GAAAE,cAAAH,GACAC,EAAAG,OAAA,SAAAC,GACA,GAAApF,GAAAoF,EAAAC,OAAAvd,OAAA4Z,OAAA0D,EAAAC,OAAAvd,OAAAK,QAAA,WAAA,UAAA4B,OACAsD,GAAA2S,IA1DA,GAAA3Z,IACAke,WAAAA,EACArL,SAAAA,EACAD,SAAAA,EACA8G,SAAAA,EAGA,OAAA1Z,GAfAL,QACAC,OAAA,eACAsB,QAAA,YAAA8P,GAEAA,EAAAnR,SAAA,cCPA,WACA,YAMA,SAAAof,KAGA,QAAAC,GAAAtE,GAKA,MAJA,QAAAA,IACAA,EAAAA,EAAAxR,cACAwR,EAAAA,EAAArQ,UAAA,EAAA,GAAA4U,cAAAvE,EAAArQ,UAAA,IAEAqQ,EAPA,MAAAsE,GALAvf,QACAC,OAAA,eACAyJ,OAAA,aAAA4V,MCLA,WAEA,YAMA,SAAAG,KAcA,QAAAC,GAAAzE,GAMA,IALA,GACA0E,GAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGApc,EAAA,EAEAA,EAAAmX,EAAAlX,QACA4b,EAAA1E,EAAAkF,WAAArc,KACA8b,EAAA3E,EAAAkF,WAAArc,KACA+b,EAAA5E,EAAAkF,WAAArc,KAEAgc,EAAAH,GAAA,EACAI,GAAA,EAAAJ,IAAA,EAAAC,GAAA,EACAI,GAAA,GAAAJ,IAAA,EAAAC,GAAA,EACAI,EAAA,GAAAJ,EAEA3E,MAAA0E,GACAI,EAAAC,EAAA,GACA/E,MAAA2E,KACAI,EAAA,IAGAC,EAAAA,EACAE,EAAA3E,OAAAqE,GACAM,EAAA3E,OAAAsE,GACAK,EAAA3E,OAAAuE,GACAI,EAAA3E,OAAAwE,EAGA,OAAAC,GAGA,QAAAG,GAAApF,GACA,GACA0E,GAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGApc,EAAA,CAKA,KAFAmX,EAAAA,EAAAlY,QAAA,sBAAA,IAEAe,EAAAmX,EAAAlX,QACA+b,EAAAM,EAAAje,QAAA8Y,EAAAQ,OAAA3X,MACAic,EAAAK,EAAAje,QAAA8Y,EAAAQ,OAAA3X,MACAkc,EAAAI,EAAAje,QAAA8Y,EAAAQ,OAAA3X,MACAmc,EAAAG,EAAAje,QAAA8Y,EAAAQ,OAAA3X,MAEA6b,EAAAG,GAAA,EAAAC,GAAA,EACAH,GAAA,GAAAG,IAAA,EAAAC,GAAA,EACAH,GAAA,EAAAG,IAAA,EAAAC,EAEAC,GAAAI,OAAAC,aAAAZ,GAEA,KAAAK,IACAE,GAAAI,OAAAC,aAAAX,IAEA,KAAAK,IACAC,GAAAI,OAAAC,aAAAV,GAIA,OAAAK,GA1EA,GAAAE,GAAA,oEAMA/f,GACAggB,OAAAA,EACAX,OAAAA,EAGA,OAAArf,GAhBAL,QACAC,OAAA,eACAsB,QAAA,SAAAke;ICNA,WACA,YAQA,SAAAzY,GAAAiO,GAYA,QAAA3M,KACA,OAAAkY,IACAA,EAAAvL,EAAA3M,MACAmY,WAAA,EACApV,YAAA,kCACApB,WAAA,kBACAyB,aAAA,KACAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,eAIA0X,EAAA1e,OAAAD,KACA6e,EACAA,IA3BA,GAAArgB,IACAiI,KAAAA,GAGAkY,EAAA,KACAE,EAAA,WACAF,EAAA,KAGA,OAAAngB,GAhBAL,QACAC,OAAA,eACAsB,QAAA,eAAAyF,GAEAA,EAAA9G,SAAA,gBCPA,WACA,YAQA,SAAAygB,GAAAre,EAAAwE,EAAAmI,EAAApI,EAAAsI,GAeA,QAAAyR,KACA7W,EAAA5D,aACAE,SAAA,KACAC,SAAA,KACAC,YAAA,GAEAwD,EAAA8W,qBAAA,EACA1R,EAAAS,QAAA,UAGA,QAAA1J,GAAA6F,GACAA,EAAA+U,iBACAja,EAAAX,OACAG,SAAA0D,EAAA1D,SACAC,SAAAyD,EAAAzD,SACAC,WAAAwD,EAAAxD,aACA1E,KAAA,WAaA,GAZAkI,EAAA8W,qBAAA,EACA1R,EAAAc,QACA,aAAAnJ,EAAAiO,QAAAlN,MAAA,aAAAf,EAAAiO,QAAAlN,MACA,gBAAAf,EAAAiO,QAAAlN,MAAA,iBAAAf,EAAAiO,QAAAlN,MACA,SAAAf,EAAAiO,QAAAlN,MACAf,EAAAgB,GAAA,WAAA+B,QAAA,IAGAvH,EAAAye,WAAA,yBAIAla,EAAAmB,mBAAA,CACA,GAAAC,GAAApB,EAAAmB,kBACAnB,GAAAqB,qBACApB,EAAAgB,GAAAG,EAAAJ,KAAAI,EAAAE,WAEAnD,MAAA,WACA+E,EAAA8W,qBAAA,IAIA,QAAAzU,KACA+C,EAAAS,QAAA,UACA9I,EAAAgB,GAAA,YAGA,QAAAkZ,KACA7R,EAAAS,QAAA,UACA9I,EAAAgB,GAAA,gBA5DA,GAAAiC,GAAA7F,IAEA6F,GAAA8W,qBAAA,EACA9W,EAAA6W,OAAAA,EACA7W,EAAA5D,eACA4D,EAAA7D,MAAAA,EACA6D,EAAAzD,SAAA,KACAyD,EAAAqC,SAAAA,EACArC,EAAAxD,YAAA,EACAwD,EAAAiX,qBAAAA,EACAjX,EAAA1D,SAAA,KAEA4I,EAAA,WAAAjP,QAAA0C,QAAA,aAAAqO,UAnBA/Q,QACAC,OAAA,eACAgK,WAAA,kBAAA0W,GAEAA,EAAAzgB,SAAA,aAAA,SAAA,WAAA,OAAA,wBCPA,WACA,YAQA,SAAA+gB,GAAA3d,EAAA7B,EAAAc,EAAA2e,GAQA,QAAAvgB,KACA,GAAA6D,GAAAlB,EAAAqB,OAEA,OADAH,GAAAC,QAAAyc,GACA1c,EAAAM,QAGA,QAAAqc,KACA,GAAA3c,GAAAlB,EAAAqB,QACA0F,EAAA9H,EAAA6e,UAAAjgB,IAAA,wBAIA,OAFAqD,GAAAC,QAAA4F,GAEA7F,EAAAM,QAnBA,GAAAzE,IACAM,OAAAA,EACAwgB,WAAAA,EAGA,OAAA9gB,GAZAL,QACAC,OAAA,eACAsB,QAAA,qBAAA0f,GAEAA,EAAA/gB,SAAA,KAAA,QAAA,aAAA,gBCPA,WACA,YAMA,SAAAmhB,KAGA,QAAAC,GAAAC,GACA,OACAC,GAAA,SACAC,GAAA,QACAC,GAAA,QACAC,GAAA,UACAC,GAAA,WACAC,GAAA,UACAC,GAAA,UACAC,GAAA,WACAC,GAAA,SACAC,GAAA,SACAC,GAAA,QACAC,GAAA,WACAC,GAAA,MACAC,GAAA,MACAC,GAAA,QACAC,GAAA,aACAC,GAAA,SACAC,QAAA,qBACAC,QAAA,YACAC,GAAA,SACAC,GAAA,UACAC,GAAA,YACAC,GAAA,UACAC,GAAA,QACAC,GAAA,SACAC,QAAA,SACAC,QAAA,QACA3B,GA/BA,MAAAD,GALAthB,QACAC,OAAA,eACAyJ,OAAA,sBAAA2X,MCLA,WACA,YAQA,SAAA8B,GAAA5gB,EAAA0e,EAAA7W,GAUA,QAAAgZ,GAAAC,GACA9gB,EAAAqG,IAAAya,GACAjZ,EAAAG,IAAA8Y,GAXA,GAAAtZ,GAAA7F,IAEA6F,GAAAqZ,eAAAA,EACArZ,EAAAuZ,UAAA,KAEArC,EAAAtgB,SAAAkB,KAAA,SAAAyhB,GACAvZ,EAAAuZ,UAAAA,IAbAtjB,QACAC,OAAA,eACAgK,WAAA,wBAAAkZ,GAEAA,EAAAjjB,SAAA,aAAA,qBAAA,uBCPA,WACA,YAEAF,SACAC,OAAA,eAMAsjB,SAAA,aACA,KACA,KACA,UCbA,WACA,YAMA,SAAAC,KASA,QAAAhhB,GAAAC,EAAAC,EAAAC,EAAA8gB,GACA/gB,EAAA4Z,KAAA,eAAAoH,KAAA,WACA,GAAAC,GAAA3jB,QAAA0C,QAAAwB,MACA0f,EAAAD,EAAArH,KAAA,sDAEAsH,GAAA7f,OAAA,GACA6f,EAAAF,KAAA,WACA,GAAAG,GAAA7jB,QAAA0C,QAAAwB,MACA4f,EAAAD,EAAAtX,KAAA,OACA9J,GAAAiD,OAAA,WACA,MAAA+d,GAAAK,GAAAC,UAAAN,EAAAK,GAAAE,QACA,SAAAC,GACAN,EAAAO,YAAA,YAAAD,SApBA,GAAAnhB,IACAE,SAAA,IACA+Y,QAAA,OACA7Y,KAAAV,EAGA,OAAAM,GAXA9C,QACAC,OAAA,eACA6C,UAAA,iBAAA0gB,MCLA,WACA,YAEAxjB,SACAC,OAAA,eACAsjB,SAAA,uBACA/M,aAAA,QCNA,WACA,YAMA,SAAA2N,KASA,QAAA3hB,GAAAC,EAAAC,EAAAC,EAAAyhB,GACAA,IAIAA,EAAAC,YAAAF,SAAA,SAAAG,GACA,MAAAF,GAAAG,SAAAD,IAAAE,EAAAF,IAAA3hB,EAAAwhB,WAIA,QAAAzF,GAAAC,EAAAC,GACA,MAAAA,GAAAzc,QAAAwc,EAAAC,EAAA7a,OAAA4a,EAAA5a,WAAA,EAGA,QAAA8a,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAA+F,GAAA/F,GACA,MAAAA,GAAA1a,OAAA,EAAA,EAAA8a,EAAAJ,GAjCA,GAAA3b,IACAE,SAAA,IACA+Y,QAAA,WACA7Y,KAAAV,EAGA,OAAAM,GAXA9C,QACAC,OAAA,eACA6C,UAAA,WAAAqhB,MCLA,WACA,YAMA,SAAAM,KASA,QAAAjiB,GAAAC,EAAAC,EAAAC,EAAAyhB,GACAA,IAIAA,EAAAC,YAAAI,SAAA,SAAAH,GACA,MAAAF,GAAAG,SAAAD,IAAAE,EAAAF,IAAA3hB,EAAA8hB,WAIA,QAAA/F,GAAAC,EAAAC,GACA,MAAAA,GAAAzc,QAAAwc,EAAAC,EAAA7a,OAAA4a,EAAA5a,WAAA,EAGA,QAAA8a,GAAAJ,GACA,MAAAC,GAAA,KAAAD,GACA,EAEAC,EAAA,IAAAD,GACA,EAEA,EAGA,QAAA+F,GAAA/F,GACA,MAAAA,GAAA1a,OAAA,EAAA,EAAA8a,EAAAJ,GAjCA,GAAA3b,IACAE,SAAA,IACA+Y,QAAA,WACA7Y,KAAAV,EAGA,OAAAM,GAXA9C,QACAC,OAAA,eACA6C,UAAA,WAAA2hB,MCLA,WACA,YAiBA,SAAAC,GAAA9Y,EAAAiK,EAAAvT,EAAAC,GAKA,QAAAoiB,GAAApO,EAAApP,EAAAlG,GACAkG,EAAAA,EAAAA,EAAAoP,EACAxM,EAAA6a,OAAAnW,KACAoH,EAAA8G,KAEAvC,KAAA,SACAyK,IAAA1d,EACAgB,OAAAlH,EACA6jB,QAAA,IACAC,MAAAlP,EAAAmP,UACAC,QAAA,GAEAlb,EAAA6a,SAhBA,GAAA7a,GAAA7F,IAEA6F,GAAA6a,SAmBA,IAAAM,GAAA5iB,EAAAyM,IAAA,wBAAA,SAAAhD,EAAAoZ,GACA,GAAArhB,EAEA,QADAiI,EAAAqZ,kBACAD,EAAAE,QAEA,IAAA,GACAV,EAAA,uBAAA,6BACA,MAEA,KAAA,KACA,GAAAW,GAAAH,EAAA1e,QAAA,uBACA8e,EAAAJ,EAAA1e,QAAA,uBACA,IAAA6e,EAAA,CACA,GAAAE,GAAAjjB,EAAAkjB,QAAA,wBAAAF,EACAZ,GAAAW,EAAAA,GAAAE,WAAAA,QACA,IAAAL,EAAAlkB,MAAAkkB,EAAAlkB,KAAAykB,YACA,IAAA5hB,EAAA,EAAAA,EAAAqhB,EAAAlkB,KAAAykB,YAAA3hB,OAAAD,IAAA,CACA,GAAA6hB,GAAAR,EAAAlkB,KAAAykB,YAAA5hB,GAEA8hB,EAAAD,EAAA7I,MAAA/Z,QAAA,WAAA,MACA8iB,EAAAtjB,EAAAkjB,QAAA,eAAAE,EAAAG,WAAA,IAAAF,EACAjB,GAAA,SAAAkB,EAAA,mBAAA,SAAAF,EAAApP,SAAAsP,UAAAA,QAEAV,GAAAlkB,MAAAkkB,EAAAlkB,KAAAsV,QACAoO,EAAAQ,EAAAlkB,KAAAsV,QAAA4O,EAAAlkB,KAAAsV,QAAA4O,EAAAlkB,MAEA0jB,EAAAQ,EAAAlkB,KAEA,MAEA,KAAA,KACA0jB,EAAA,YAAA,sBACA,MAEA,SAEAA,EADAQ,EAAAlkB,MAAAkkB,EAAAlkB,KAAAsV,QACA4O,EAAAlkB,KAAAsV,QAEAvW,QAAAiZ,OAAAkM,MAKAvZ,GAAAmD,IAAA,WAAA,WACA/O,QAAA6E,UAAAqgB,IAAA,OAAAA,IACAA,IACAnb,EAAA6a,aAnFA,GAAAmB,IACA9iB,SAAA,iQAKAgH,WAAAya,EAGA1kB,SACAC,OAAA,eACAie,UAAA,gBAAA6H,GAEArB,EAAAxkB,SAAA,SAAA,eAAA,aAAA,iBChBA,WACA,YAMA,SAAA2V,KAWA,QAAAmQ,GAAA/W,EAAAgX,EAAA1jB,GAoBA,QAAAyiB,KACA,MAAAD,GAGA,QAAApV,KACAiV,KAGA,QAAAzjB,KACA,MAAAyjB,GAGA,QAAAje,GAAAke,EAAA1c,EAAA+d,GACA,MAAAhiB,MAAAyY,KACAvC,KAAA,UACAyK,IAAAA,EACA1c,OAAAA,EACA2c,QAAAA,EACAC,MAAAA,EACAmB,SAAAA,IAIA,QAAA5P,GAAAuO,EAAA1c,EAAA+d,GACA,MAAAhiB,MAAAyY,KACAvC,KAAA,SACAyK,IAAAA,EACA1c,OAAAA,EACA2c,QAAAA,EACAC,MAAAA,EACAmB,SAAAA,IAIA,QAAAC,GAAAtB,EAAA1c,EAAA+d,GACA,MAAAhiB,MAAAyY,KACAvC,KAAA,UACAyK,IAAAA,EACA1c,OAAAA,EACA2c,QAAAA,EACAC,MAAAA,EACAmB,SAAAA,IAIA,QAAAE,GAAAvB,EAAA1c,EAAA+d,GACA,MAAAhiB,MAAAyY,KACAvC,KAAA,OACAyK,IAAAA,EACA1c,OAAAA,EACA2c,QAAAA,EACAC,MAAAA,EACAmB,SAAAA,IAIA,QAAA3kB,GAAA8kB,GACA,GAAAC,IACAlM,KAAAiM,EAAAjM,KACAyK,IAAAoB,EAAAM,YAAAF,EAAAxB,KACA3Y,GAAAma,EAAAG,QACA1B,QAAAuB,EAAAvB,QACAC,MAAAsB,EAAAtB,MACAmB,SAAAG,EAAAH,SAAAG,EAAAH,SAAA,YACAjB,OAAAoB,EAAApB,OACAhV,MAAA,SAAA2U,GACA,MAAA6B,GAAAviB,KAAAgI,GAAA0Y,IAMA,OAHA0B,GAAArB,QACAL,EAAAnW,KAAA6X,GAEAA,EAGA,QAAAI,GAAAL,EAAAM,GACAN,EAAAG,QAAAA,IACAH,EAAAxB,IAAAtiB,EAAAkjB,QAAAY,EAAAxB,IAAAwB,EAAAle,OACA,IAAAye,GAAA1iB,KACAoiB,EAAApiB,KAAA3C,QAAA8kB,EAMA,OALAA,GAAAvB,SAAAuB,EAAAvB,QAAA,GACA7V,EAAA,WACA2X,EAAAH,WAAAJ,EAAAG,QAAAG,IACAN,EAAAvB,SAEAwB,EAGA,QAAAG,GAAAva,EAAAya,GACA,GAAAE,GAAAF,EAAAA,EAAA/B,CACA,OAAAkC,GAAAD,EAAAE,IAAA,SAAA3H,GAAA,MAAAA,GAAAlT,KAAA/J,QAAA+J,GAAA2a,GAGA,QAAAC,GAAAE,EAAAH,GACA,MAAAA,GAAAI,OAAAD,EAAA,GAjHA,GAAAjC,GAAA7gB,KAAA6gB,MACAyB,EAAA,EACA5B,KACAE,EAAA,GAEA,QACAvjB,QAAAA,EACAyjB,QAAAA,EACArI,IAAA+J,EACAD,WAAAA,EACAK,kBAAAA,EACAnX,MAAAA,EACAxO,IAAAA,EACAwF,QAAAA,EACA2P,MAAAA,EACA8P,KAAAA,EACAD,QAAAA,GA3BAjiB,KAAA6gB,OAAA,EAEA7gB,KAAAgjB,KAAAlB,EAEA9hB,KAAAijB,YAAA,SAAAnC,GACA9gB,KAAA6gB,MAAAC,GAGAgB,EAAA9lB,SAAA,WAAA,OAAA,cAbAF,QACAC,OAAA,eACAmnB,SAAA,eAAAvR,MCLA,WACA,YAiBA,SAAAwR,GAAAzb,EAAAiK,GACA,GAAA9L,GAAA7F,IAEA6F,GAAA6a,OAAA/O,EAAA1U,MACAyK,EAAAmD,IAAA,WAAA,WACAhF,EAAA6a,YApBA,GAAA0C,IACArkB,SAAA,2QAKAgH,WAAAod,EAGArnB,SACAC,OAAA,eACAie,UAAA,WAAAoJ,GAEAD,EAAAnnB,SAAA,SAAA,mBChBA,WACA,YAQA,SAAAqnB,GAAAjkB,EAAAuS,GAOA,QAAA7T,GAAAA,GACA,GAAAwlB,GAAAxlB,EAAAyE,QAAA,sBAIA,OAHAzG,SAAA4d,SAAA4J,IACA3R,EAAAlP,QAAA6gB,GAAAC,MAAAzlB,EAAAyE,QAAA,0BAEAzE,EAXA,GAAA3B,IACA2B,SAAAA,EAGA,OAAA3B,GAXAL,QACAC,OAAA,eACAsB,QAAA,0BAAAgmB,GAEAA,EAAArnB,SAAA,KAAA,mBCPA,WACA,YAQA,SAAAwnB,GAAApkB,EAAAhB,GAOA,QAAAqlB,GAAA3lB,GAIA,MAHA,OAAAA,EAAAqjB,SAAA,KAAArjB,EAAAf,MAAAe,EAAAf,KAAAyJ,MAAA,IAAA1I,EAAAf,KAAAyJ,KAAAvI,QAAA,kBACAG,EAAA0N,MAAA,wBAAAhO,GAEAsB,EAAAyF,OAAA/G,GAVA,GAAA3B,IACAsnB,cAAAA,EAGA,OAAAtnB,GAXAL,QACAC,OAAA,eACAsB,QAAA,0BAAAmmB,GAEAA,EAAAxnB,SAAA,KAAA,iBCPA,WACA,YASA,SAAA0nB,GAAAtlB,EAAAgB,EAAAukB,GAOA,QAAAF,GAAA3lB,GAGA,GAAA,MAAAA,EAAAqjB,QAAArlB,QAAA6E,UAAA7C,EAAAf,KAAAyJ,OAAA1I,EAAAf,KAAAyJ,KAAAvI,QAAA,mBAAA,EAAA,CACA,GAAA0E,GAAAghB,EAAA1mB,IAAA,QACA2mB,EAAAxlB,EAAAqF,QACAQ,EAAA7F,EAAA+F,aACAxB,GAAAD,SACA,iBAAAkhB,EAAAjgB,MACAhB,EAAAuB,mBAAA0f,EAAAjgB,KAAAM,EAEA,IAAAnB,GAAA6gB,EAAA1mB,IAAA,eACA6F,GAAAsB,OAEA,MAAAhF,GAAAyF,OAAA/G,GApBA,GAAA3B,IACAsnB,cAAAA,EAGA,OAAAtnB,GAZAL,QACAC,OAAA,eACAsB,QAAA,yBAAAqmB,GAGAA,EAAA1nB,SAAA,aAAA,KAAA,gBCRA,WACA,YAQA,SAAAJ,GAAAwC,EAAAgc,EAAAxX,EAAAvE,GAMA,QAAAxC,KAEA,GAAAgoB,GAAAzlB,EAAAyM,IAAA,0BAAA,WACAiZ,KAGA1lB,GAAAyM,IAAA,WAAA,WACA/O,QAAA6E,UAAAkjB,IAAA,OAAAA,GACAA,MAUA,QAAAC,GAAAC,IACAA,GAAAnhB,EAAA8P,SAAA3V,MAAA6F,EAAA8P,SAAA3V,KAAAiK,YACA+c,EAAAnhB,EAAA8P,SAAA3V,KAAAiK,WAEA3I,EAAA0lB,GAAA,gBAAApmB,KAAA,SAAA4K,GACA6R,EAAA9L,SAAA/F,MAAAA,IA5BA,OACA1M,WAAAA,EACAioB,YAAAA,GATAhoB,QACAC,OAAA,eACAsB,QAAA,qBAAAzB,GAEAA,EAAAI,SAAA,aAAA,UAAA,SAAA,iBCPA,WACA,YASA,SAAAL,GAAAyC,EAAAwE,EAAAC,EAAAxE,EAAA0e,EAAAnhB,EAAAwe,EACAzX,EAAAxD,EAAA6kB,GAKA,QAAAnoB,KACAuC,EAAA4lB,QAAAA,CAEA,IAAAC,GAAA7lB,EAAAyM,IAAA,oBAAA,SAAAhD,EAAApE,EAAAU,EAAAN,GACAzF,EAAAqF,QAAAA,EACArF,EAAA+F,cAAAA,EACA/F,EAAAyF,UAAAA,EAGAJ,EAAAygB,WACArc,EAAA+U,iBACAxC,EAAAhW,KAAAX,EAAAjH,IAAA,UAGA2C,EAAA6B,sBACA2B,EAAAY,YAKAwZ,EAAAE,aAAAtf,KAAA,SAAAwI,GACA9H,EAAAqG,IAAAyB,OAKAge,EAAA/lB,EAAAyM,IAAA,sBAAA,SAAAhD,EAAApE,EAAA2gB,EAAAvgB,EAAAwgB,GACA,GAAAN,GAAA,cAGAtgB,GAAA1G,KAAAiK,YACA+c,EAAAtgB,EAAA1G,KAAAiK,WAEApL,EAAAkoB,YAAAC,IAGA3lB,GAAAyM,IAAA,WAAA,WACA/O,QAAA6E,UAAAsjB,IAAA,OAAAA,GACAA,IAEAnoB,QAAA6E,UAAAwjB,IAAA,OAAAA,GACAA,MA7CA,OACAtoB,WAAAA,GAVAC,QACAC,OAAA,eACAsB,QAAA,eAAA1B,GAEAA,EAAAK,SAAA,aAAA,SAAA,kBAAA,aAAA,qBAAA,qBAAA,UACA,OAAA,YAAA,cCRA,WACA,YAQA,SAAAsoB,GAAAC,EAAA3S,GACA2S,EAAAjS,aAAAV,EAAAU,aACAiS,EAAAC,QAAA,EACAD,EAAAE,eAAA,EACAF,EAAAG,UAAA,IACAH,EAAAI,aAAA,IACAJ,EAAAK,SAAA,IACAL,EAAAM,SAAA,IAbA/oB,QACAC,OAAA,eACAwL,OAAA+c,GAEAA,EAAAtoB,SAAA,sBAAA,0BCPA,WACA,YAQA,SAAA8oB,GAAAC,EAAAnT,GACAmT,EAAAzS,aAAAV,EAAAU,aACAyS,EAAAJ,aAAA,IACAI,EAAAH,SAAA,IATA9oB,QACAC,OAAA,eACAwL,OAAAud,GAEAA,EAAA9oB,SAAA,iBAAA,0BCPA,WACA,YAQA,SAAAgpB,GAAAC,EAAAC,EAAAlI,GAMA,QAAA/f,GAAA0G,GAKA,MAJAqZ,GAAA/e,QAAAgnB,EAAAE,UAAAxhB,OAAA,IACAuhB,EAAAhD,KAAA,sCAAA+C,EAAAE,UAAAxhB,GAAA,+BACAshB,EAAAG,UAAAzhB,EAAA,OAEAshB,EAAAE,UAAAxhB,GAGA,QAAA0hB,GAAA1hB,EAAAgM,GACAsV,EAAAG,UAAAzhB,EAAAgM,GAdA,OACA1S,IAAAA,EACAooB,IAAAA,GATAvpB,QACAC,OAAA,eACAsB,QAAA,6BAAA2nB,GAEAA,EAAAhpB,SAAA,WAAA,OAAA,gBCPA,WACA,YAQA,SAAAspB,GAAAC,EAAAC,GAEAD,EAAAE,UAAA,2BACAC,YAAA,4BAGAH,EAAAI,kBAAA,MACAJ,EAAAK,WAAA,8BACAL,EAAAM,yBAAA,WACAN,EAAAO,iBAAA,wCAEAN,EAAAO,sBAAA,qCACAP,EAAAQ,mBACAR,EAAAS,WAAA,yBAnBAnqB,QACAC,OAAA,eACAwL,OAAA+d,GAEAA,EAAAtpB,SAAA,qBAAA,+BCPA,WACA,YAQA,SAAAkqB,GAAAC,EAAAC,GACAD,EAAAE,aAAA,QACAD,EAAAC,aAAA,QARAvqB,QACAC,OAAA,eACAwL,OAAA2e,GAEAA,EAAAlqB,SAAA,wBAAA,8BCPA,WACA,YAQA,SAAAsqB,GAAAC,EAAAC,EAAAC,EAAAC,GAEAD,EAAAE,cAAA,UAAA,kBAAA,GAEAJ,EAAAK,UAAA,KAEAJ,EAAAK,aAAAtc,KAAA,2BACAic,EAAAK,aAAAtc,KAAA,0BACAic,EAAAK,aAAAtc,KAAA,2BAGAmc,EAAAxQ,KAAA,WACAvS,KAAA,UACAwY,OAAA,SAAA2K,GAAA,MAAAA,MAAA,GAAA,SAAAA,GACAtL,OAAA,SAAAsL,GAAA,MAAAA,GAAA,EAAA,GACAC,OAAA,SAAAxZ,EAAAC,GAAA,MAAAxN,MAAAgnB,GAAAzZ,IAAAA,IAAAC,GACAwZ,GAAA,SAAAF,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA7oB,QAAA6oB,IAAA,GACAG,QAAA,kBAvBAnrB,QACAC,OAAA,eACAwL,OAAA+e,GAEAA,EAAAtqB,SAAA,qBAAA,gBAAA,4CAAA,iCCPA,WACA,YAQA,SAAAkrB,GAAAC,EAAAC,GAEAD,EAAAE,iBAAAD,GARAtrB,QACAC,OAAA,eACAwL,OAAA2f,GAEAA,EAAAlrB,SAAA,mBAAA,yBCPA,WACA,YAQA,SAAAsrB,GAAAC,GAEAA,EAAAtE,aAAA,GARAnnB,QACAC,OAAA,eACAwL,OAAA+f,GAEAA,EAAAtrB,SAAA,2BCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,OACAyO,UAAA,EACAvO,OACAugB,WACArgB,YAAA,iCACApB,WAAA,mBACAyB,aAAA,OAGAjH,SACAgD,WAAA,OACA,SAAAZ,GACA,MAAAA,GAAAY,cAGAoN,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GACAA,EAAAC,QAAA,eAvBAxL,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAEAF,SACAC,OAAA,eACAsjB,SAAA,UAAA,kBACAA,SAAA,sBAAA,MCNA,WACA,YAQA,SAAAoI,GAAAzc,EAAAC,EAAAC,EAAAjP,EAAA8gB,GAcA,QAAAtR,KACAR,EAAAS,QAAA,UAGA,QAAAE,GAAAhO,GACAiI,EAAA8F,UAAA,EACAV,EAAAc,MAAAnO,GAGA,QAAAiO,KACAhG,EAAA8F,UAAA,EAGA,QAAAzO,KACA2I,EAAA8F,UAAA,EACA,OAAA9F,EAAAyG,KAAAtE,GACA/L,EAAAkB,OAAA0I,EAAAyG,KAAAV,EAAAC,GAEA5P,EAAAiB,KAAA2I,EAAAyG,KAAAV,EAAAC,GA/BA,GAAAhG,GAAA7F,IAEA6F,GAAAlG,aAAA,YAAA,cACAkG,EAAA4F,MAAAA,EACA5F,EAAAuZ,UAAA,KACAvZ,EAAA3I,KAAAA,EACA2I,EAAAyG,KAAApB,EAGA6R,EAAAtgB,SAAAkB,KAAA,SAAAyhB,GACAvZ,EAAAuZ,UAAAA,IAjBAtjB,QACAC,OAAA,eACAgK,WAAA,iCAAA0hB,GAEAA,EAAAzrB,SAAA,eAAA,oBAAA,SAAA,OAAA,yBCPA,WACA,YAQA,SAAA0rB,GAAA1a,EAAAC,EAAAjC,EAAAkC,EAAAC,EAAAlR,GAgCA,QAAA0rB,GAAA3lB,GACA/F,EAAAgB,KAAA+E,MAAAA,GAAA,SAAApE,GACAiI,EAAAyG,KAAA1O,IAIA,QAAAgqB,GAAAC,EAAAC,EAAAC,GACAD,EAAAA,GAAA,GACAC,EAAAA,GAAA,GAKA,KAAA,GAHAC,GAAAC,KAAAJ,GACAK,KAEAC,EAAA,EAAAA,EAAAH,EAAAnoB,OAAAsoB,GAAAJ,EAAA,CAIA,IAAA,GAHA9Z,GAAA+Z,EAAA/Z,MAAAka,EAAAA,EAAAJ,GAEAK,EAAA,GAAAC,OAAApa,EAAApO,QACAD,EAAA,EAAAA,EAAAqO,EAAApO,OAAAD,IACAwoB,EAAAxoB,GAAAqO,EAAAgO,WAAArc,EAGA,IAAA0oB,GAAA,GAAAC,YAAAH,EAEAF,GAAA3d,KAAA+d,GAGA,GAAAE,GAAA,GAAAC,MAAAP,GAAAhS,KAAA4R,GACA,OAAAU,GAGA,QAAA7a,KACA,GAAA+a,GAAA,YACAnb,EAAAe,SAAAG,cAAA,IACAH,UAAAC,KAAAC,YAAAjB,GACAA,EAAAob,MAAA,eACA,IAAA9rB,GAAAZ,EAAAY,OAAAmF,MAAA6D,EAAAyG,KAAAtK,OACAnF,GAAAgE,SAAAlD,KAAA,SAAAC,GACA,GAAAid,GAAA+M,EAAAhqB,EAAAoY,QAAApY,EAAAqY,oBAEA2S,EAAAC,OAAAC,IAAAC,gBAAAlO,EACAtN,GAAA9G,KAAAmiB,EACArb,EAAAmB,SAAAga,EACAnb,EAAAqB,UAIA,QAAAE,KACA5B,EAAAtJ,KA9EA,GAAAiC,GAAA7F,IAEA6F,GAAA8hB,KAAAA,EACA9hB,EAAAyG,QACAzG,EAAA8H,SAAAA,EACA9H,EAAAiJ,KAAAA,EACAjJ,EAAAmjB,yBAAA,6BACAnjB,EAAAojB,wBAAA,EACApjB,EAAAsJ,KAAA,SAAAnH,GACA,GAAAoH,GAAApC,EAAAqC,MACArC,GAAAqC,KAAArH,GACAiF,IAEAD,EAAAqC,KAAAD,IAEAvJ,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,IAGA5J,EAAA8hB,KAAA3c,EAAAhJ,OACA6D,EAAAjJ,QAAAX,EAAAW,SAAAoF,MAAAgJ,EAAAhJ,QACA6D,EAAAtJ,UAAAN,EAAAM,WAAAyF,MAAAgJ,EAAAhJ,QACA6D,EAAAlJ,gBAAAV,EAAAU,iBAAAqF,MAAAgJ,EAAAhJ,QApCAlG,QACAC,OAAA,eACAgK,WAAA,iCAAA2hB,GAEAA,EAAA1rB,SAAA,YAAA,gBAAA,eAAA,iBAAA,YAAA,WCPA,WACA,YAQA,SAAAktB,GAAAje,EAAAC,EAAAjP,GAOA,QAAAwP,KACAR,EAAAS,QAAA,UAGA,QAAAuE,GAAAjO,GACA/F,EAAAmB,QAAA4E,MAAAA,GACA,WACAiJ,EAAAc,OAAA,KAbA,GAAAlG,GAAA7F,IAEA6F,GAAAyG,KAAApB,EACArF,EAAA4F,MAAAA,EACA5F,EAAAoK,cAAAA,EAXAnU,QACAC,OAAA,eACAgK,WAAA,iCAAAmjB,GAEAA,EAAAltB,SAAA,oBAAA,SAAA,WCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EACAC,MAAA,mBACArD,OAAA,MACAlH,IAAA,mBACAO,MACA4C,aAAA,aACAqH,UAAA,6BAEAC,OACAC,YACAC,YAAA,iDACApB,WAAA,2BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,mBACAjJ,EAAAuG,eAIAmC,MAAA,0BACArD,OAAA,kBACAlH,IAAA,eACAO,MACA4C,aAAA,aACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,wDACApB,WAAA,iCACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,mBACAjJ,EAAAuG,YAEAb,eAAA,SAAA,SAAAnB,GACA,GAAAgO,IACAjN,KAAAf,EAAAiO,QAAAlN,MAAA,kBACAM,OAAArB,EAAAqB,OACAzH,IAAAoG,EAAA6D,KAAA7D,EAAAiO,QAAAlN,KAAAf,EAAAqB,QAEA,OAAA2M,QAIA7J,MAAA,uBACArD,OAAA,kBACAlH,IAAA,OACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,wDACApB,WAAA,iCACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,OAAA,WACA,OACAlD,GAAA,KAAAhG,MAAA,KAAAqM,UAAA,KAAAZ,SAAA,KAAA0b,MAAA,KACAC,WAAA,EAAAzkB,QAAA,KAAA0kB,UAAA,KAAAC,YAAA,KACAC,eAAA,KAAAC,iBAAA,KAAAC,UAAA,KACAC,SAAA,KAAA/pB,YAAA,UAIA/B,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,kBAAA,MAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,yBAIAmD,MAAA,wBACArD,OAAA,kBACAlH,IAAA,gBACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,wDACApB,WAAA,iCACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,OAAA,SAAAjP,GACA,MAAAA,GAAAgB,KAAA+E,MAAAgJ,EAAAhJ,aAGApE,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,kBAAA,MAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,+BACArD,OAAA,yBACAlH,IAAA,eACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,wDACApB,WAAA,iCACAyB,aAAA,KACAwJ,SAAA,SACAC,KAAA,KACA1Q,SACA2K,QAAA,OAAA,SAAAjP,GACA,MAAAA,GAAAgB,KAAA+E,MAAAgJ,EAAAhJ,aAGApE,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,QAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WAIAmD,MAAA,0BACArD,OAAA,kBACAlH,IAAA,kBACAO,MACA4C,aAAA,eAEAmR,SAAA,eAAA,SAAA,YAAA,SAAA9F,EAAApI,EAAAmO,GACAA,EAAA3M,MACA+C,YAAA,+DACApB,WAAA,iCACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACA2K,QAAA,OAAA,SAAAjP,GACA,MAAAA,GAAAgB,KAAA+E,MAAAgJ,EAAAhJ,aAGApE,OAAAD,KAAA,WACAiF,EAAAgB,GAAA,kBAAA,MAAA+B,QAAA,KACA,WACA/C,EAAAgB,GAAA,WA9JA9H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA2tB,GAAA3c,EAAAC,EAAA9N,EAAAlD,EAAAyV,EAAAC,EAAA/O,EAAAma,GA2CA,QAAAlL,KACA5V,EAAAQ,UAAAqV,EAAAK,GAGA,QAAAL,GAAA/U,EAAAwF,GAEA,IAAA,GAAA3C,KAAA7C,GACA,kBAAAA,EAAA6C,GAAA,OACA7C,EAAAgmB,OAAAnjB,EAAA,EAGAiG,GAAAoN,MAAAlW,EAGA,QAAAoV,GAAAC,GACAT,EAAAS,MAAAA,EAAArV,KAAAsV,SAzDA,GAAAxM,GAAA7F,IAEA6F,GAAAlG,aAAA,YAAA,cACAkG,EAAA+jB,eAAA,KACA/jB,EAAAgM,QAAAA,EACAhM,EAAAoN,SACApN,EAAAsJ,KAAA,SAAAnH,GACA,GAAAoH,GAAApC,EAAAqC,MACArC,GAAAqC,KAAArH,GACAiF,IAEAD,EAAAqC,KAAAD,IAGAvJ,EAAA0J,IAAA,SAAAC,EAAAC,GAEA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,WAAA/Q,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAAAA,QAAA,KAAA,KAFA,OAAA/C,QAAA+T,SAAAL,KAIAA,EAAAE,EAAA5T,QAAAgU,UAAA,GAAAN,IACAC,EAAAC,EAAA5T,QAAAgU,UAAA,GAAAL,IAEAD,EAAAvR,QAAAwR,MAAA,IAGA5J,EAAAgM,UAKA1S,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAA+jB,eAAAvpB,IAtCAvE,QACAC,OAAA,eACAgK,WAAA,2BAAA4jB,GAEAA,EAAA3tB,SAAA,YAAA,gBAAA,YAAA,OAAA,aAAA,eAAA,SAAA,yBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,eACArD,OAAA,QACAlH,IAAA,WACAO,MACA4C,aAAA,cACAqH,UAAA,iBAEAC,OACAC,YACAC,YAAA,iCACApB,WAAA,iCACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,WACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA6tB,GAAAzrB,EAAAb,GAQA,QAAAusB,KACA,MAAAvsB,GAAAN,IAAA,+BAAAU,KAAA,SAAAG,GACA,MAAAA,GAAAf,OAIA,QAAAgtB,KACA,MAAAxsB,GAAAN,IAAA,mBAAAU,KAAA,SAAAG,GACA,MAAAA,GAAAf,OAfA,GAAAZ,IACA2tB,WAAAA,EACAC,WAAAA,EAGA,OAAA5tB,GAZAL,QACAC,OAAA,eACAsB,QAAA,oBAAAwsB,GAEAA,EAAA7tB,SAAA,aAAA,YCPA,WACA,YAQA,SAAAguB,GAAA/e,EAAA8e,GA2BA,QAAArN,KACAzR,EAAAS,QAAA,UAGA,QAAAue,GAAAC,GACA,MAAA,aAAAA,EACA,gBACA,YAAAA,EACA,aACA,kBAAAA,EACA,gBACA,YAAAA,EACA,eADA,OArCA,GAAArkB,GAAA7F,IAEA6F,GAAA6W,OAAAA,EACA7W,EAAAokB,cAAAA,EACApkB,EAAAkkB,WAAAA,EACAlkB,EAAAskB,cAAA,EACAtkB,EAAAukB,kBAAA,EACAvkB,EAAAwkB,mBAAA,EACAxkB,EAAAykB,uBAAA,EACAzkB,EAAA0kB,kBAAA,EAEAzuB,QAAAmO,QAAA8f,EAAA,SAAApa,GACA,aAAAA,EAAAua,YACArkB,EAAAwkB,oBAAA,EACA,YAAA1a,EAAAua,YACArkB,EAAA0kB,mBAAA,EACA,kBAAA5a,EAAAua,YACArkB,EAAAykB,wBAAA,EACA,YAAA3a,EAAAua,cACArkB,EAAAukB,mBAAA,KAIAvkB,EAAAskB,cAAAtkB,EAAAwkB,mBAAAxkB,EAAA0kB,kBACA1kB,EAAAykB,uBAAAzkB,EAAAukB,kBA/BAtuB,QACAC,OAAA,eACAgK,WAAA,sCAAAikB,GAEAA,EAAAhuB,SAAA,oBAAA,iBCPA,WACA,YAQA,SAAAwuB,GAAA9iB,EAAAmiB,EAAA9Y,GAiCA,QAAAnM,KACAiB,EAAA4kB,iBAAA,EACAZ,EAAAC,aAAAnsB,KAAA,SAAAiD,GACAiF,EAAA6kB,QAAA9pB,EACAiF,EAAA4kB,iBAAA,GACA,SAAA7pB,GACAiF,EAAA6kB,QAAA9pB,EAAA7D,KACA8I,EAAA4kB,iBAAA,IAIA,QAAAE,KACAd,EAAAE,aAAApsB,KAAA,SAAAZ,GACAgU,EAAA3M,MACA+C,YAAA,uCACApB,WAAA,sCACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACAwpB,WAAA,WACA,MAAAhtB,SApDA,GAAA8I,GAAA7F,IAEA6F,GAAA+kB,eACA/kB,EAAA6kB,WACA7kB,EAAAjB,QAAAA,EACAiB,EAAA8kB,sBAAAA,EACA9kB,EAAAglB,iBACAhlB,EAAA4kB,iBAAA,EAEA5kB,EAAAjB,UAEA8C,EAAAlG,OAAA,aAAA,SAAAspB,GACAjlB,EAAAglB,iBACAhlB,EAAA+kB,eACA9uB,QAAAmO,QAAA6gB,EAAAC,OAAA,SAAApb,EAAA1M,GAIA,GAHAA,EAAAhF,QAAA,eAAA,GAAAgF,EAAAhF,QAAA,cAAA,IACA4H,EAAAglB,cAAA5nB,GAAA0M,GAEA1M,EAAAhF,QAAA,2BAAA,EAAA,CAEA,GAAA6kB,GAAA7f,EAAAyU,YAAA,KACAsT,EAAA/nB,EAAAuU,OAAA,EAAAsL,EAGAjd,GAAA+kB,YAAAI,IACArnB,KAAAqnB,EACArb,MAAAA,QAjCA7T,QACAC,OAAA,eACAgK,WAAA,iCAAAykB,GAEAA,EAAAxuB,SAAA,SAAA,oBAAA,gBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,QACArD,OAAA,QACAlH,IAAA,QACAO,MACA4C,aAAA,cACAqH,UAAA,cAEAC,OACAC,YACAC,YAAA,2BACApB,WAAA,iBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,QACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAivB,GAAA/uB,GACA,GAAAC,GAAAD,EAAA,+BACAgvB,SAAA7uB,OAAA,MAAAC,SAAA,GACA6uB,aAAA9uB,OAAA,QAGA,OAAAF,GAZAL,QACAC,OAAA,eACAsB,QAAA,cAAA4tB,GAEAA,EAAAjvB,SAAA,gBCPA,WACA,YAQA,SAAAovB,GAAAH,GAMA,QAAAE,GAAAxnB,EAAA0nB,GACAJ,EAAAE,aAAAxnB,KAAAA,EAAA0nB,MAAAA,GAAA,WACAxlB,EAAAylB,QAAAL,EAAAC,YAPA,GAAArlB,GAAA7F,IAEA6F,GAAAslB,YAAAA,EACAtlB,EAAAylB,QAAAL,EAAAC,UAVApvB,QACAC,OAAA,eACAgK,WAAA,iBAAAqlB,GAEAA,EAAApvB,SAAA,kBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,cACArD,OAAA,QACAlH,IAAA,UACAO,MACA4C,aAAA,cACAqH,UAAA,gBAEAC,OACAC,YACAC,YAAA,+BACApB,WAAA,2BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,UACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAuvB,GAAAntB,EAAAb,GAWA,QAAAiuB,KACA,MAAAjuB,GAAAN,IAAA,qBAAAU,KAAA,SAAAG,GACA,MAAAA,GAAAf,OAIA,QAAA0uB,GAAA1uB,GACA,GAAAe,KAEA,OADA4tB,GAAA5tB,EAAA,KAAAf,GACAe,EAGA,QAAA6tB,GAAAhoB,GACA,GAAAA,EAAA,CACA,GAAAlC,GAAAkC,EAAAlC,MAAA,IACA,OAAAA,GAAA,IAIA,QAAAmqB,GAAAjoB,GACA,GAAAA,EAAA,CACA,GAAAlC,GAAAkC,EAAAlC,MAAA,IACAA,GAAAshB,OAAA,EAAA,EACA,IAAA8I,GAAApqB,EAAAyV,KAAA,IACA,OAAA2U,GAAA,MAAAA,EAAA,IAKA,QAAAH,GAAA9tB,EAAA4I,EAAAzJ,GAWA,MAVAjB,SAAAmO,QAAAlN,EAAA,SAAA4S,EAAA1M,GACA6oB,EAAAnc,KACAoc,EAAApc,IACAqc,EAAApuB,GAAA,EAAA+R,EAAAsc,EAAAzlB,EAAAvD,IACAyoB,EAAA9tB,EAAAquB,EAAAzlB,EAAAvD,GAAA0M,IAEAqc,EAAApuB,GAAA,EAAA+R,EAAAsc,EAAAzlB,EAAAvD,OAIArF,EAGA,QAAAouB,GAAApuB,EAAAsuB,EAAAC,EAAAxoB,GAEA,GAAAyoB,IACAzoB,KAAAA,GAEA0oB,KACAC,GAAA,CAsBA,OApBAxwB,SAAAmO,QAAAkiB,EAAA,SAAAxc,EAAA1M,GACA,WAAAA,GAAA,UAAAA,EACAmpB,EAAAnpB,GAAA0M,EAEAmc,EAAAnc,KACA0c,EAAAppB,GAAA0M,EACA2c,GAAA,KAMAA,GACAxwB,QAAAywB,OAAAH,GAAAC,QAAAA,KAIAH,GAAAI,GAAAF,EAAAha,QACAxU,EAAA2M,KAAA6hB,GAEAA,EAGA,QAAAH,GAAAzlB,EAAA7C,GACA,GAAA/F,EAUA,OARAA,GADA4I,GAAA7C,EACA6C,EAAAgmB,EAAA7oB,EACA6C,EACAA,EACA7C,EACAA,EAEA,GAKA,QAAAooB,GAAAI,GACA,GAAAvuB,IAAA,CAMA,OALA9B,SAAAmO,QAAAkiB,EAAA,SAAAxc,GACAA,GAAAA,EAAAwR,SACAvjB,GAAA,KAGAA,EAGA,QAAAkuB,GAAAK,GACA,GAAAvuB,IAAA,CAMA,OALA9B,SAAAmO,QAAAkiB,EAAA,SAAAxc,EAAA1M,GACA,WAAAA,IACArF,GAAA,KAGAA,EAnHA,GAAA4uB,GAAA,IACArwB,GACAqvB,YAAAA,EACAC,oBAAAA,EACAE,YAAAA,EACAC,iBAAAA,EAGA,OAAAzvB,GAfAL,QACAC,OAAA,eACAsB,QAAA,mBAAAkuB,GAEAA,EAAAvvB,SAAA,aAAA,YCPA,WACA,YAOA,SAAAywB,GAAAxhB,EAAAyhB,EAAAC,EAAAC,GAQA,QAAAlQ,KACAzR,EAAAS,QAAA,UARA,GAAA7F,GAAA7F,IAEA6F,GAAA6W,OAAAA,EACA7W,EAAA6mB,cAAAA,EACA7mB,EAAA8mB,SAAAA,EACA9mB,EAAA+mB,cAAAA,EAXA9wB,QAAAC,OAAA,eACAgK,WAAA,wBAAA0mB,GAEAA,EAAAzwB,SAAA,oBAAA,gBAAA,WAAA,oBCNA,WACA,YAQA,SAAA6wB,GAAAtB,EAAAxa,GAYA,QAAAkZ,GAAA6C,GACA,MAAA,OAAAA,EACA,gBAEA,eAIA,QAAAloB,KACAiB,EAAAknB,gBAAA,EACAxB,EAAAC,cAAA7tB,KAAA,SAAAG,GACA+H,EAAAumB,WAAAb,EAAAE,oBAAA3tB,GACA+H,EAAAknB,gBAAA,GACA,SAAAjvB,GACA+H,EAAAumB,WAAAb,EAAAE,oBAAA3tB,EAAAf,MACA8I,EAAAknB,gBAAA,IAIA,QAAAC,GAAAC,GACAlc,EAAA3M,MACA+C,YAAA,qCACApB,WAAA,wBACAyB,aAAA,KACAyJ,KAAA,KACA1Q,SACAmsB,cAAA,WACA,MAAAO,IAEAN,SAAA,WACA,MAAA9mB,GAAA8mB,UAEAC,cAAA,WACA,MAAA/mB,GAAA+mB,kBA5CA,GAAA/mB,GAAA7F,IAEA6F,GAAAknB,gBAAA,EACAlnB,EAAAokB,cAAAA,EACApkB,EAAAjB,QAAAA,EACAiB,EAAAmnB,WAAAA,EACAnnB,EAAA8mB,SAAApB,EAAAI,YACA9lB,EAAA+mB,cAAArB,EAAAK,iBAEA/lB,EAAAjB,UAhBA9I,QACAC,OAAA,eACAgK,WAAA,2BAAA8mB,GAEAA,EAAA7wB,SAAA,mBAAA,gBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,QACArD,OAAA,QACAlH,IAAA,QACAO,MACA4C,aAAA,cACAqH,UAAA,6BAEAC,OACAC,YACAC,YAAA,6BAGA5G,SACAoQ,wBAAA,aAAA,SAAAtS,GACA,MAAAA,GAAAuG,eArBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,qBACArD,OAAA,QACAlH,IAAA,iBACAO,MACA4C,aAAA,cACAqH,UAAA,uBAEAC,OACAC,YACAC,YAAA,6CACApB,WAAA,6BACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,iBACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAkxB,GAAAjT,EAAA1c,GAQA,QAAAN,KAGA,QAAAkwB,GAAArvB,GACA,GAAAsvB,KACAtxB,SAAAmO,QAAAnM,EAAAf,KAAA,SAAAA,GACAqwB,EAAA7iB,KAAAxN,IAEA,IAAAswB,GAAApT,EAAA,UACA,OAAAoT,GAAAD,EAAA,UARA,MAAA7vB,GAAAN,IAAA,0BAAAU,KAAAwvB,GAYA,QAAAG,KAGA,QAAAC,GAAAzvB,GACA,GAAAsvB,KAQA,OAPAtxB,SAAAmO,QAAAnM,EAAAf,KAAA,SAAA+pB,EAAA7jB,GACA,GAAAuqB,KACA1xB,SAAAmO,QAAA6c,EAAA,SAAA2G,EAAAC,GACAF,EAAAjjB,MAAAtH,IAAAyqB,EAAA5G,IAAA2G,MAEAL,EAAAnqB,GAAAuqB,IAEAJ,EAXA,MAAA7vB,GAAAN,IAAA,kBAAAU,KAAA4vB,GArBA,GAAApxB,IACAc,IAAAA,EACAqwB,OAAAA,EAGA,OAAAnxB,GAZAL,QACAC,OAAA,eACAsB,QAAA,0BAAA6vB,GAEAA,EAAAlxB,SAAA,UAAA,YCPA,WACA,YAQA,SAAA2xB,GAAAnoB,EAAA0nB,GACA,GAAArnB,GAAA7F,IAEA6F,GAAA+nB,iBAAA,KACA/nB,EAAAgoB,cAAA,KAEAX,EAAAjwB,MAAAU,KAAA,SAAAkwB,GACAhoB,EAAAgoB,cAAAA,IAEAX,EAAAI,SAAA3vB,KAAA,SAAAkwB,GACAhoB,EAAA+nB,iBAAAC,IAhBA/xB,QACAC,OAAA,eACAgK,WAAA,6BAAA4nB,GAEAA,EAAA3xB,SAAA,UAAA,8BCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,UACArD,OAAA,QACAlH,IAAA,UACAO,MACA4C,aAAA,cACAqH,UAAA,gBAEAC,OACAC,YACAC,YAAA,+BACApB,WAAA,mBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,UACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA8xB,GAAA5xB,GACA,GAAAC,GAAAD,EAAA,qCACAe,KACAZ,OAAA,MACAC,SAAA,GAEAF,OACAC,OAAA,MACAC,SAAA,EACA2H,QAAA8pB,SAAA,KAAAC,OAAA,QAIA,OAAA7xB,GAnBAL,QACAC,OAAA,eACAsB,QAAA,gBAAAywB,GAEAA,EAAA9xB,SAAA,gBCPA,WACA,YAQA,SAAAiyB,GAAAhU,EAAA6T,EAAApc,GAkBA,QAAAwc,KACA,GAAAC,GAAA,aACAJ,EAAA9T,EAAA,QAAApU,EAAAkoB,SAAAI,GACAH,EAAA/T,EAAA,QAAApU,EAAAmoB,OAAAG,EAEAL,GAAA1xB,OAAA8T,KAAArK,EAAAqK,KAAA,EAAAe,KAAA,GAAA8c,SAAAA,EAAAC,OAAAA,GAAA,SAAApwB,EAAA2E,GACAsD,EAAAuoB,OAAAxwB,EACAiI,EAAAkM,MAAAL,EAAApH,MAAA/H,EAAA,SACAsD,EAAAmM,WAAAzP,EAAA,mBAKA,QAAA4G,KAEA,GAAAA,GAAA,GAAAkB,KACAxE,GAAAmoB,OAAA,GAAA3jB,MAAAlB,EAAAklB,cAAAllB,EAAAmlB,WAAAnlB,EAAAolB,UAAA,GAGA,QAAAC,KACA,GAAAT,GAAA,GAAA1jB,KAEA0jB,GADA,IAAAA,EAAAO,WACA,GAAAjkB,MAAA0jB,EAAAM,cAAA,EAAA,GAAAN,EAAAQ,WAEA,GAAAlkB,MAAA0jB,EAAAM,cAAAN,EAAAO,WAAA,EAAAP,EAAAQ,WAGA1oB,EAAAkoB,SAAAA,EAGA,QAAAxb,GAAArC,GACArK,EAAAqK,KAAAA,EACArK,EAAAqoB,eAjDA,GAAAroB,GAAA7F,IAEA6F,GAAAuoB,OAAA,KACAvoB,EAAAkoB,SAAA,KACAloB,EAAAkM,MAAA,KACAlM,EAAA0M,SAAAA,EACA1M,EAAAqoB,aAAAA,EACAroB,EAAAqK,KAAA,EACArK,EAAA2oB,cAAAA,EACA3oB,EAAAmoB,OAAA,KACAnoB,EAAAsD,MAAAA,EACAtD,EAAAmM,WAAA,KAEAnM,EAAAsD,QACAtD,EAAA2oB,gBACA3oB,EAAAqoB,eAtBApyB,QACAC,OAAA,eACAgK,WAAA,mBAAAkoB,GAEAA,EAAAjyB,SAAA,UAAA,gBAAA,iBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,SACAyO,UAAA,EACA9R,OAAA,QATA5H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,YACArD,OAAA,UACAlH,IAAA,YACAO,MACA4C,aAAA,aACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,qBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,YACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAyyB,GAAAtvB,EAAAwD,EAAAoa,EAAA1e,GA0BA,QAAAnB,KACAyF,EAAAuC,cAAAW,EAAA6oB,iBAAA/wB,KAAA,WACAkI,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,KACAtD,EAAAI,UAAA,GAAA5B,KAAA,SAAA0C,GACAwF,EAAA6oB,gBAAAC,EAAAtuB,KAEA0c,EAAAE,aAAAtf,KAAA,SAAAkT,GACAhL,EAAA6oB,gBAAA/pB,UAAAkM,GACAxS,EAAAqG,IAAAmB,EAAA6oB,gBAAA/pB,aAGA7D,MAAA,WACA+E,EAAApD,QAAA,KACAoD,EAAAuM,MAAA,UAvCA,GAAAvM,GAAA7F,IAEA6F,GAAAuM,MAAA,KACAvM,EAAA3I,KAAAA,EACA2I,EAAA6oB,gBAAA,KACA7oB,EAAApD,QAAA,IAKA,IAAAksB,GAAA,SAAAtuB,GACA,OACA+oB,UAAA/oB,EAAA+oB,UACAD,MAAA9oB,EAAA8oB,MACA9a,UAAAhO,EAAAgO,UACA1J,QAAAtE,EAAAsE,QACA8I,SAAApN,EAAAoN,SACAzL,MAAA3B,EAAA2B,OAIA7C,GAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAA6oB,gBAAAC,EAAAtuB,KA7BAvE,QACAC,OAAA,eACAgK,WAAA,qBAAA0oB,GAEAA,EAAAzyB,SAAA,YAAA,OAAA,qBAAA,iBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,YACArD,OAAA,UACAlH,IAAA,YACAO,MACA4C,aAAA,aACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,qBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,YACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAA4yB,GAAA3vB,EAAAE,GAcA,QAAA0vB,GAAAC,GACA7vB,EAAA7B,QAAA0xB,OAAA5sB,mBAAA4sB,IACA,WACAjpB,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,KACAoD,EAAAkpB,SAAA9vB,EAAAxC,UAEA,WACAoJ,EAAApD,QAAA,KACAoD,EAAAuM,MAAA,UAtBA,GAAAvM,GAAA7F,IAEA6F,GAAAxF,QAAA,KACAwF,EAAAuM,MAAA,KACAvM,EAAAgpB,WAAAA,EACAhpB,EAAAkpB,SAAA9vB,EAAAxC,SACAoJ,EAAApD,QAAA,KAGAtD,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,IAjBAvE,QACAC,OAAA,eACAgK,WAAA,qBAAA6oB,GAEAA,EAAA5yB,SAAA,WAAA,gBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,gBACArD,OAAA,UACAlH,IAAA,iBACAO,MACA4C,gBAEAsH,OACAC,YACAC,YAAA,+CACApB,WAAA,yBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,eAvBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAgzB,GAAAjkB,EAAApI,GAWA,QAAAssB,KAEAppB,EAAAuM,MAAA,KACAvM,EAAAqpB,oBAAA,KAEAvsB,EAAAqC,kBAAAa,EAAAspB,aAAAhG,OAAAxrB,KAAA,WACAkI,EAAApD,QAAA,OACA3B,MAAA,SAAAhD,GACA+H,EAAApD,QAAA,KACA,MAAA3E,EAAAqjB,QAAA,kCAAArjB,EAAAf,KACA8I,EAAAqpB,oBAAA,QAEArpB,EAAAuM,MAAA;GAtBA,GAAAvM,GAAA7F,IAEA6F,GAAAuM,MAAA,KACAvM,EAAAqpB,oBAAA,KACArpB,EAAAopB,aAAAA,EACAppB,EAAAspB,gBACAtpB,EAAApD,QAAA,KAEAsI,EAAA,WAAAjP,QAAA0C,QAAA,UAAAqO,UAfA/Q,QACAC,OAAA,eACAgK,WAAA,yBAAAipB,GAEAA,EAAAhzB,SAAA,WAAA,WCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,eACArD,OAAA,UACAlH,IAAA,oBACAO,MACA4C,gBAEAsH,OACAC,YACAC,YAAA,6CACApB,WAAA,wBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,SACAjJ,EAAAuG,eAvBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAozB,GAAApkB,EAAAD,EAAApI,EAAAG,GAcA,QAAAusB,KACAxpB,EAAAypB,WAAA,KACAzpB,EAAAuM,MAAA,KACAvM,EAAAspB,aAAA/sB,WAAAyD,EAAA0pB,gBACA1pB,EAAAypB,WAAA,QAEA3sB,EAAAmC,qBAAA7B,IAAA+H,EAAA/H,IAAAsB,YAAAsB,EAAAspB,aAAA/sB,WAAAzE,KAAA,WACAkI,EAAApD,QAAA,OACA3B,MAAA,WACA+E,EAAApD,QAAA,KACAoD,EAAAuM,MAAA,UAvBA,GAAAvM,GAAA7F,IAEA6F,GAAA2pB,WAAA1zB,QAAA2B,YAAAuN,EAAA/H,KACA4C,EAAA0pB,gBAAA,KACA1pB,EAAAypB,WAAA,KACAzpB,EAAAuM,MAAA,KACAvM,EAAAwpB,YAAAA,EACAxpB,EAAA7D,MAAAc,EAAAsB,KACAyB,EAAAspB,gBACAtpB,EAAApD,QAAA,KAEAsI,EAAA,WAAAjP,QAAA0C,QAAA,aAAAqO,UAlBA/Q,QACAC,OAAA,eACAgK,WAAA,wBAAAqpB,GAEAA,EAAApzB,SAAA,eAAA,WAAA,OAAA,mBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,YACArD,OAAA,UACAlH,IAAA,YACAO,MACA4C,eACAqH,UAAA,kBAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,qBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,YACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YASA,SAAAyzB,GAAApxB,EAAA0M,EAAApI,EAAAG,GAaA,QAAAoF,KACArC,EAAA6pB,gBAAAttB,WAAAyD,EAAA0pB,gBACA1pB,EAAAypB,WAAA,SAEAzpB,EAAA6pB,gBAAA/qB,QAAAtG,EAAAqG,MACAmB,EAAAypB,WAAA,KACAzpB,EAAAuM,MAAA,KACAvM,EAAA8pB,gBAAA,KACA9pB,EAAA+pB,iBAAA,KAEAjtB,EAAA6B,cAAAqB,EAAA6pB,iBAAA/xB,KAAA,WACAkI,EAAApD,QAAA,OACA3B,MAAA,SAAAhD,GACA+H,EAAApD,QAAA,KACA,MAAA3E,EAAAqjB,QAAA,yBAAArjB,EAAAf,KACA8I,EAAA8pB,gBAAA,QACA,MAAA7xB,EAAAqjB,QAAA,kCAAArjB,EAAAf,KACA8I,EAAA+pB,iBAAA,QAEA/pB,EAAAuM,MAAA,WA/BA,GAAAvM,GAAA7F,IAEA6F,GAAAypB,WAAA,KACAzpB,EAAAuM,MAAA,KACAvM,EAAA8pB,gBAAA,KACA9pB,EAAA7D,MAAAc,EAAAsB,KACAyB,EAAAqC,SAAAA,EACArC,EAAA6pB,mBACA7pB,EAAApD,QAAA,KAEAsI,EAAA,WAAAjP,QAAA0C,QAAA,UAAAqO,UAlBA/Q,QACAC,OAAA,eACAgK,WAAA,qBAAA0pB,GAGAA,EAAAzzB,SAAA,aAAA,WAAA,OAAA,mBCPA,WACA,YAMA,SAAA6zB,KAoBA,QAAAvxB,GAAAC,EAAAuxB,GACA,GAAAC,IACAC,QAAA,OAAA,OAAA,OAAA,OAAA,QACAC,eAAA,SAAA9hB,GAEA,GAAA+hB,GAAA,EACAC,EAAA,yBAEAC,EAAA,SAAAC,KAAAliB,GACAmiB,EAAA,SAAAD,KAAAliB,GACAoiB,EAAA,SAAAF,KAAAliB,GACAqiB,EAAAL,EAAAE,KAAAliB,GAEAsiB,GAAAL,EAAAE,EAAAC,EAAAC,GACAE,EAAAC,EAAAC,KAAAH,EAAA,SAAA/S,GACA,MAAAA,MAAA,IACA7d,MAaA,OAXAqwB,IAAA,EAAA/hB,EAAAtO,QAAAsO,EAAAtO,QAAA,GAAA,EAAA,GACAqwB,GAAA,GAAAQ,EAGAR,EAAA/hB,EAAAtO,QAAA,EAAAgxB,KAAAC,IAAAZ,EAAA,IAAAA,EAGAA,EAAA,IAAAQ,EAAAG,KAAAC,IAAAZ,EAAA,IAAAA,EACAA,EAAA,IAAAQ,EAAAG,KAAAC,IAAAZ,EAAA,IAAAA,EACAA,EAAA,IAAAQ,EAAAG,KAAAC,IAAAZ,EAAA,IAAAA,GAKAa,SAAA,SAAAC,GAEA,GAAAC,EAiBA,OAfAA,GADAD,GAAA,GACA,EAEAA,GAAA,GACA,EAEAA,GAAA,GACA,EAEAA,GAAA,GACA,EAGA,GAGAC,IAAAA,EAAA,EAAAC,IAAAlxB,KAAAgwB,OAAAiB,KAGA1yB,GAAAiD,OAAA,kBAAA,SAAAY,GACA,GAAAA,EAAA,CACA,GAAA+uB,GAAApB,EAAAgB,SAAAhB,EAAAE,eAAA7tB,GACA0tB,GAAAnxB,YAAA,WACAmxB,EAAA1X,KAAA,MAAAgZ,SAAA,MACAC,KAAAC,mBAAA,SACArjB,MAAA,EAAAkjB,EAAAF,KACAI,KAAAC,mBAAAH,EAAAD,SAhFA,GAAAtyB,IACAC,SAAA,EACAC,SAAA,IACAC,SAAA,yQAMAR,OACAgzB,gBAAA,KAEAvyB,KAAAV,EAGA,OAAAM,GApBA9C,QACAC,OAAA,eACA6C,UAAA,sBAAAixB,MCNA,WACA,YAQA,SAAAhpB,GAAAC,GACAA,EAAAC,MAAA,YACArD,OAAA,UACAlH,IAAA,YACAO,MACA4C,aAAA,aACAqH,UAAA,gCAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,qBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,YACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAw1B,GAAA7uB,EAAAxD,GAYA,QAAAmF,KACAuB,EAAAzD,WAAAyD,EAAA0pB,iBACA1pB,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,KACAoD,EAAAypB,WAAA,UAEAzpB,EAAAypB,WAAA,KACA3sB,EAAA2B,eAAAuB,EAAAzD,UAAAzE,KAAA,WACAkI,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,OACA3B,MAAA,WACA+E,EAAApD,QAAA,KACAoD,EAAAuM,MAAA,WAvBA,GAAAvM,GAAA7F,IAEA6F,GAAAvB,eAAAA,EACAuB,EAAAypB,WAAA,KACAzpB,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,KAEAtD,EAAAI,WAAA5B,KAAA,SAAA0C,GACAwF,EAAAxF,QAAAA,IAfAvE,QACAC,OAAA,eACAgK,WAAA,qBAAAyrB,GAEAA,EAAAx1B,SAAA,OAAA,gBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,YACArD,OAAA,UACAlH,IAAA,gBACAO,MACA4C,eACAqH,UAAA,kBAEAC,OACAC,YACAC,YAAA,qCACApB,WAAA,uBACAyB,aAAA,OAGAjH,SACAoQ,wBAAA,aAAA,0BAAA,SAAAtS,EAAAgJ,GAEA,MADAA,GAAAC,QAAA,YACAjJ,EAAAuG,eAxBA9I,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBCPA,WACA,YAQA,SAAAy1B,GAAAzmB,EAAArI,EAAAG,GACA,GAAA+C,GAAA7F,IAEA2C,GAAAK,iBAAAC,IAAA+H,EAAA/H,MAAAtF,KAAA,WACAkI,EAAAuM,MAAA,KACAvM,EAAApD,QAAA,OACA3B,MAAA,WACA+E,EAAApD,QAAA,KACAoD,EAAAuM,MAAA,UAGAvM,EAAA7D,MAAAc,EAAAsB,KAjBAtI,QACAC,OAAA,eACAgK,WAAA,uBAAA0rB,GAEAA,EAAAz1B,SAAA,eAAA,OAAA,mBCPA,WACA,YAQA,SAAA6K,GAAAC,GACAA,EAAAC,MAAA,WACAyO,UAAA,EACA9R,OAAA,QATA5H,QACAC,OAAA,eACAwL,OAAAV,GAEAA,EAAA7K,SAAA,qBASA,WAAAF,QAAAC,OAAA,eAAAL,KAAA,iBAAA,SAAAg2B,GAAAA,EAAArM,IAAA,qBAAA,y1ECy4OAqM,EAAerM,IAAI,qCAAqC,qjBACxDqM,EAAerM,IAAI,qCAAqC,i7FACxDqM,EAAerM,IAAI,qCAAqC,+vLACxDqM,EAAerM,IAAI,qCAAqC,0jCACxDqM,EAAerM,IAAI,qCAAqC,+1HACxDqM,EAAerM,IAAI,+BAA+B,ozDAClDqM,EAAerM,IAAI,6CAA6C,6jDAChEqM,EAAerM,IAAI,2BAA2B,2JAC9CqM,EAAerM,IAAI,+BAA+B,ojCAClDqM,EAAerM,IAAI,qCAAqC,0nCACxDqM,EAAerM,IAAI,2BAA2B,4pDAC9CqM,EAAerM,IAAI,iCAAiC;AACpDqM,EAAerM,IAAI,uCAAuC,smFAC1DqM,EAAerM,IAAI,+DAA+D,i7BAClFqM,EAAerM,IAAI,wDAAwD,i5OAC3EqM,EAAerM,IAAI,wDAAwD,8/HAC3EqM,EAAerM,IAAI,iDAAiD,8sEACpEqM,EAAerM,IAAI,kCAAkC,m4DACrDqM,EAAerM,IAAI,8CAA8C,o9BACjEqM,EAAerM,IAAI,uCAAuC,8tBAC1DqM,EAAerM,IAAI,uCAAuC,0+CAC1DqM,EAAerM,IAAI,iCAAiC,qrEACpDqM,EAAerM,IAAI,sDAAsD,o+BACzEqM,EAAerM,IAAI,+CAA+C,4uCAClEqM,EAAerM,IAAI,+CAA+C,m1GAClEqM,EAAerM,IAAI,yCAAyC;AAC5DqM,EAAerM,IAAI,8CAA8C,g9BACjEqM,EAAerM,IAAI,uCAAuC,8tBAC1DqM,EAAerM,IAAI,uCAAuC,0+CAC1DqM,EAAerM,IAAI,iCAAiC,qrEACpDqM,EAAerM,IAAI,kDAAkD,g+BACrEqM,EAAerM,IAAI,2CAA2C,s9CAC9DqM,EAAerM,IAAI,2CAA2C,8zIAC9DqM,EAAerM,IAAI,qCAAqC,yvHACxDqM,EAAerM,IAAI,gDAAgD,o9BACnEqM,EAAerM,IAAI,yCAAyC,42QAC5DqM,EAAerM,IAAI,yCAAyC,wuEAC5DqM,EAAerM,IAAI,mCAAmC,mhEACtDqM,EAAerM,IAAI,4DAA4D,4+BAC/EqM,EAAerM,IAAI,qDAAqD;AACxEqM,EAAerM,IAAI,qDAAqD,wjHACxEqM,EAAerM,IAAI,+CAA+C,8vHAClEqM,EAAerM,IAAI,gDAAgD,o9BACnEqM,EAAerM,IAAI,yCAAyC,urNAC5DqM,EAAerM,IAAI,yCAAyC,wpJAC5DqM,EAAerM,IAAI,mCAAmC,mtHACtDqM,EAAerM,IAAI,sCAAsC,2TACzDqM,EAAerM,IAAI,+BAA+B,wSAClDqM,EAAerM,IAAI,iCAAiC;AACpDqM,EAAerM,IAAI,6CAA6C,k4GAChEqM,EAAerM,IAAI,+CAA+C","file":"app/app-a7b16c0814.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'angularUtils.directives.dirPagination',\n            'ui.calendar',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'ct.ui.router.extras',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'membresia': { method: 'GET', isArray: true, url: 'api/users/:login/membresia'},\n            'getAll': {method: 'GET', isArray: true, url:'api/users'},\n            'getEvents': {method: 'GET', isArray: true, url:'api/users/events'},\n            'participaciones': {method: 'GET', isArray: true, url:'api/users/:login/participaciones'},\n            //'getOthersEvents': {method: 'GET', isArray: true, url:'api/users/othersEvents'},\n            'resumen': {method: 'GET', isArray: true, url: 'api/users/:login/resumen'},\n            'excel': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }, url: 'api/users/:login/excel'\n            },\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Sessions', Sessions);\n\n    Sessions.$inject = ['$resource'];\n\n    function Sessions ($resource) {\n        return $resource('api/account/sessions/:series', {}, {\n            'getAll': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage' ];\n\n    function AuthServerProvider ($http, $localStorage ) {\n        var service = {\n            getToken: getToken,\n            hasValidToken: hasValidToken,\n            login: login,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            var token = $localStorage.authenticationToken;\n            return token;\n        }\n\n        function hasValidToken () {\n            var token = this.getToken();\n            return !!token;\n        }\n\n        function login (credentials) {\n            var data = 'j_username=' + encodeURIComponent(credentials.username) +\n                '&j_password=' + encodeURIComponent(credentials.password) +\n                '&remember-me=' + credentials.rememberMe + '&submit=Login';\n\n            return $http.post('api/authentication', data, {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }\n            }).success(function (response) {\n                return response;\n            });\n        }\n\n        function logout () {\n\n            \n            // logout from the server\n            $http.post('api/logout').success(function (response) {\n                delete $localStorage.authenticationToken;\n                // to get a new csrf token call the api\n                $http.get('api/account');\n                return response;\n            });\n            \n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('noAccents', noAccents);\n\n    function noAccents() {\n        return function(data) {\n            return data.toLowerCase()\n                     .replace(/á/g, 'a')\n                     .replace(/â/g, 'a')\n                     .replace(/é/g, 'e')\n                     .replace(/è/g, 'e')\n                     .replace(/ê/g, 'e')\n                     .replace(/í/g, 'i')\n                     .replace(/ï/g, 'i')\n                     .replace(/ì/g, 'i')\n                     .replace(/ó/g, 'o')\n                     .replace(/ô/g, 'o')\n                     .replace(/ú/g, 'u')\n                     .replace(/ü/g, 'u')\n                     .replace(/ç/g, 'c')\n                     .replace(/ß/g, 's');\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService'];\n\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        ProfileService.getProfileInfo().then(function(response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        vm.login = login;\n        vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        function login() {\n            collapseNavbar();\n            LoginService.open();\n        }\n\n        function logout() {\n            collapseNavbar();\n            Auth.logout();\n            $state.go('home', {}, {reload: true});\n        }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('activeLink', activeLink);\n\n    function activeLink() {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var clazz = attrs.activeLink;\n            var path = attrs.href;\n            path = path.substring(1); //hack because path does bot return including hashbang\n            scope.location = location;\n            scope.$watch('location.path()', function(newPath) {\n                if (path === newPath) {\n                    element.addClass(clazz);\n                } else {\n                    element.removeClass(clazz);\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', '$compile', 'Principal', 'LoginService', '$state', 'User'];\n\n    function HomeController ($scope, $compile, Principal, LoginService, $state, User) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.eventClick = eventClick;\n        vm.events = [];\n        vm.eventRender = function( event, element, view ) {\n                element.attr({'uib-tooltip': event.title,\n                             'uib-tooltip-append-to-body': true});\n                $compile(element)($scope);\n            };\n        vm.calendarConfig = {\n            calendar: {\n                allDaySlot: false,\n                //timezone: 'local',\n                editable: false,\n                //locale: 'es',\n                firstDay: 1,\n                header: {\n                    left:   'title',\n                    center: '',\n                    right:  'today prev,next'\n                },\n                buttonText: {\n                    today: moment().format(\"DD/MM/YY\")\n                },\n                timeFormat: 'HH:mm',\n                titleFormat: '[Sesiones de ] MMMM YYYY',\n                eventClick: vm.eventClick,\n                eventResizeStop: $scope.alertResize,\n                eventDragStop: $scope.alertDrag,\n                eventRender: vm.eventRender,\n                dayClick: $scope.dayClick\n            }\n        };\n\n\n\n        function eventClick (event, jsEvent, view) {\n            $state.go(\"sesion-detail\", {id: event.id});\n        }\n\n         vm.myevents = function(start, end, timezone, callback) {\n\n\n            User.getEvents($scope, function(response) {\n\n                  //  $rootScope.myobject = data;\n\n\n                    vm.events = [];\n\n\n                    angular.forEach(response,function(event){\n                        console.log(event.primeraConvocatoria);\n                        console.log(new Date(Date.parse(event.primeraConvocatoria)));\n                        vm.events.push({\n                            id: event.id,\n                            title: event.organo.nombre,\n                            start: new Date(Date.parse(event.primeraConvocatoria)),\n                            color: event.numero == 1 ? '#c7007d' : 'grey'\n                        });\n                    });\n                    callback(vm.events);\n            });\n\n//            User.getOthersEvents($scope, function(response2) {\n//\n//                angular.forEach(response2,function(event2){\n//                    console.log(event2.primeraConvocatoria);\n//                    console.log(new Date(Date.parse(event2.primeraConvocatoria)));\n//                    vm.events.push({\n//                        id: 2,//event2.id,\n//                        title: \"bla\",//event2.organo.nombre,\n//                        start: new Date(Date.parse(event2.segundaConvocatoria))\n//                    });\n//                });\n//                callback(vm.events);\n//            });\n\n        }\n\n\n        vm.eventSources = [vm.events,vm.myevents];\n\n        $scope.$on('authenticationSuccess', function() {\n            getAccount();\n        });\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n        function register () {\n            $state.go('register');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDialogController', SesionDialogController);\n\n    SesionDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Principal', 'Sesion', 'Organo', 'Participante', 'Documento'];\n\n    function SesionDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Principal, Sesion, Organo, Participante, Documento) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.admin = false;\n\n        vm.sesion = entity;\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        Organo.miembros({ id : $stateParams.id }).$promise.then( function(data) {\n             if (vm.isAuthenticated) {\n                if (!vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                    if (!vm.admin) {\n                        $uibModalInstance.dismiss('cancel');\n                    }\n                }\n             }\n        });\n\n        if (vm.sesion.numero === null) {\n            vm.last = false;\n            vm.lastSesion = Organo.getLastSesion({id : $stateParams.id}, onLastSesionSuccess);\n        }\n\n        function onLastSesionSuccess (result) {\n            if (result.id) {\n                vm.sesion.numero = result.numero + 1;\n            } else {\n                vm.sesion.numero = 1;\n            }\n        }\n\n        vm.clear = clear;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n        vm.organos = Organo.query();\n        vm.participantes = Participante.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.sesion.id !== null) {\n                Sesion.update(vm.sesion, onSaveSuccess, onSaveError);\n            } else {\n                Sesion.save(vm.sesion, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:sesionUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.datePickerOpenStatus.primeraConvocatoria = false;\n        vm.datePickerOpenStatus.segundaConvocatoria = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDetailController', SesionDetailController);\n\n    SesionDetailController.$inject = ['$location', '$anchorScroll', '$scope', '$rootScope', '$stateParams', '$previousState', 'previousState', 'DataUtils', 'entity', 'Principal', 'Sesion', 'Organo', 'Participante', 'Documento'];\n\n    function SesionDetailController($location, $anchorScroll, $scope, $rootScope, $stateParams, $previousState, previousState, DataUtils, entity, Principal, Sesion, Organo, Participante, Documento) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.sesion = entity;\n        vm.openFile = DataUtils.openFile;\n        vm.byteSize = DataUtils.byteSize;\n        vm.notificar = notificar;\n        vm.exportar = exportar;\n        vm.back = back;\n        vm.marcarAsistencia = marcarAsistencia;\n        vm.admin = false;\n        vm.previousState = $previousState.get();\n        vm.marcando = false;\n        vm.predicate = 'user.lastName|noAccents';\n        vm.reverse = true;\n\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        Organo.miembros({ id : vm.sesion.organo.id }).$promise.then( function(data) {\n             if (vm.isAuthenticated) {\n                if (vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    vm.admin = true;\n                } else {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                }\n             }\n        });\n\n        vm.documentos = Sesion.documentos({ id: $stateParams.id })\n        vm.participantes = Sesion.participantes({ id: $stateParams.id });\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        function marcarAsistencia () {\n            if (vm.marcando) {\n                vm.marcando = false;\n                Sesion.marcarAsistencia(vm.participantes);\n            } else {\n                vm.marcando = true;\n            }\n        }\n\n        function byname (a, b) {\n            return a.user.lastName.localeCompare(b.user.lastName);\n\n        }\n\n        function exportar () {\n            var i;\n            var cabecera = \"Relación de asistentes a la sesión número \" + vm.sesion.numero + \" del órgano \" + vm.sesion.organo.nombre;\n            var asistentes = \"\\n\\nAsiste:\";\n            var disculpas = \"\\n\\nDisculpa:\";\n            var faltas = \"\\n\\nFalta:\";\n            vm.copiaparticipantes = vm.participantes.slice(0);\n            for (i in vm.copiaparticipantes.sort(byname)) {\n                var p = vm.participantes[i];\n                if (p.asistencia == \"asiste\") {\n                    asistentes += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                } else if (p.asistencia == \"disculpa\") {\n                    disculpas += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                } else if (p.asistencia == \"falta\") {\n                    faltas += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                }\n            }\n            var a = document.body.appendChild(\n                    document.createElement(\"a\")\n                );\n            a.download = \"participacion.txt\";\n            a.href = \"data:text/plain;base64,\" + btoa(cabecera + asistentes + disculpas + faltas);\n            a.click()\n        }\n\n        function notificar () {\n            Sesion.notificar(vm.sesion);\n        }\n\n        function back () {\n            $previousState.go();\n        }\n\n        var unsubscribe = $rootScope.$on('reunionsApp:sesionUpdate', function(event, result) {\n            vm.sesion = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDeleteController',SesionDeleteController);\n\n    SesionDeleteController.$inject = ['$uibModalInstance', 'entity', 'Sesion'];\n\n    function SesionDeleteController($uibModalInstance, entity, Sesion) {\n        var vm = this;\n\n        vm.sesion = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Sesion.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('sesion', {\n            parent: 'entity',\n            url: '/sesion?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.sesion.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/sesion/sesions.html',\n                    controller: 'SesionController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sesion');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('sesion-detail', {\n            parent: 'organo',\n            url: '/sesion/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.sesion.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/sesion/sesion-detail.html',\n                    controller: 'SesionDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sesion');\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    $translatePartialLoader.addPart('documento');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Sesion', function($stateParams, Sesion) {\n                    return Sesion.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'sesion',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('sesion-detail.edit', {\n            parent: 'sesion-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.new', {\n            parent: 'organo-detail',\n            url: '/nuevaSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function (Organo) {\n                            return {\n                                numero: null,\n                                primeraConvocatoria: null,\n                                segundaConvocatoria: null,\n                                lugar: null,\n                                descripcion: null,\n                                id: null,\n                                organo: Organo.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.edit', {\n            parent: 'organo-detail',\n            url: '/{ids}/editarSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.ids}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.delete', {\n            parent: 'organo-detail',\n            url: '/{ids}/eliminarSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-delete-dialog.html',\n                    controller: 'SesionDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.ids}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Sesion', Sesion);\n\n    Sesion.$inject = ['$resource', 'DateUtils'];\n\n    function Sesion ($resource, DateUtils) {\n        var resourceUrl =  'api/sesions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'participantes': { method: 'GET', isArray: true, url: 'api/sesions/:id/participantes'},\n            'documentos': {method: 'GET', isArray: true, url: 'api/sesions/:id/documentos'},\n            'notificar': { method: 'POST', url: 'api/sesions/notificar' },\n            'marcarAsistencia': { method: 'PUT', url: 'api/sesions/marcarAsistencia'},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.primeraConvocatoria = DateUtils.convertDateTimeFromServer(data.primeraConvocatoria);\n                        data.segundaConvocatoria = DateUtils.convertDateTimeFromServer(data.segundaConvocatoria);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('SesionSearch', SesionSearch);\n\n    SesionSearch.$inject = ['$resource'];\n\n    function SesionSearch($resource) {\n        var resourceUrl =  'api/_search/sesions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionController', SesionController);\n\n    SesionController.$inject = ['$scope', '$state', 'Sesion', 'SesionSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function SesionController ($scope, $state, Sesion, SesionSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                SesionSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Sesion.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.sesions = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDialogController', ParticipanteDialogController);\n\n    ParticipanteDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Participante', 'Sesion', 'Cargo', 'User'];\n\n    function ParticipanteDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Participante, Sesion, Cargo, User) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.sesions = Sesion.query();\n        vm.cargos = Cargo.query();\n        vm.users = User.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.participante.id !== null) {\n                Participante.update(vm.participante, onSaveSuccess, onSaveError);\n            } else {\n                Participante.save(vm.participante, onSaveSuccess, onSaveError);\n            }\n        }\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:participanteUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDetailController', ParticipanteDetailController);\n\n    ParticipanteDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Participante', 'Sesion', 'Cargo', 'User'];\n\n    function ParticipanteDetailController($scope, $rootScope, $stateParams, previousState, entity, Participante, Sesion, Cargo, User) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:participanteUpdate', function(event, result) {\n            vm.participante = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDeleteController',ParticipanteDeleteController);\n\n    ParticipanteDeleteController.$inject = ['$uibModalInstance', 'entity', 'Participante'];\n\n    function ParticipanteDeleteController($uibModalInstance, entity, Participante) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Participante.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('participante', {\n            parent: 'entity',\n            url: '/participante?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.participante.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/participante/participantes.html',\n                    controller: 'ParticipanteController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('participante-detail', {\n            parent: 'entity',\n            url: '/participante/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.participante.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/participante/participante-detail.html',\n                    controller: 'ParticipanteDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Participante', function($stateParams, Participante) {\n                    return Participante.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'participante',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('participante-detail.edit', {\n            parent: 'participante-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.new', {\n            parent: 'sesion-detail',\n            url: '/nuevoParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function (Sesion) {\n                            return {\n                                asistencia: null,\n                                observaciones: null,\n                                id: null,\n                                sesion: Sesion.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.edit', {\n            parent: 'sesion-detail',\n            url: '/{idp}/editarParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.idp}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.delete', {\n            parent: 'sesion-detail',\n            url: '/{idp}/eliminarParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-delete-dialog.html',\n                    controller: 'ParticipanteDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.idp}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Participante', Participante);\n\n    Participante.$inject = ['$resource'];\n\n    function Participante ($resource) {\n        var resourceUrl =  'api/participantes/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ParticipanteSearch', ParticipanteSearch);\n\n    ParticipanteSearch.$inject = ['$resource'];\n\n    function ParticipanteSearch($resource) {\n        var resourceUrl =  'api/_search/participantes/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteController', ParticipanteController);\n\n    ParticipanteController.$inject = ['$scope', '$state', 'Participante', 'ParticipanteSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function ParticipanteController ($scope, $state, Participante, ParticipanteSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                ParticipanteSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Participante.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.participantes = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDialogController', OrganoDialogController);\n\n    OrganoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Organo', 'Grupo', 'Miembro', 'Sesion'];\n\n    function OrganoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Organo, Grupo, Miembro, Sesion) {\n        var vm = this;\n\n        vm.organo = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.grupos = Grupo.query();\n        vm.miembros = Miembro.query();\n        vm.sesions = Sesion.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.organo.id !== null) {\n                Organo.update(vm.organo, onSaveSuccess, onSaveError);\n            } else {\n                Organo.save(vm.organo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:organoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDetailController', OrganoDetailController);\n\n    OrganoDetailController.$inject = ['$location', '$anchorScroll', '$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Principal', 'Organo', 'Grupo', 'Miembro', 'Sesion', 'ParseLinks'];\n\n    function OrganoDetailController($location, $anchorScroll, $scope, $rootScope, $stateParams, previousState, entity, Principal, Organo, Grupo, Miembro, Sesion, ParseLinks) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.organo = entity;\n        vm.admin = false;\n        vm.predicate = 'user.lastName|noAccents';\n        vm.reverse = true;\n        vm.predicateAnteriores = 'user.lastName|noAccents';\n        vm.reverseAnteriores = true;\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        vm.previousState = previousState.name;\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        vm.miembrosAnteriores = Organo.miembrosAnteriores({ id : $stateParams.id });\n        Organo.miembros({ id : $stateParams.id }).$promise.then( function(data) {\n             vm.miembros = data;\n             if (vm.isAuthenticated) {\n                if (vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    vm.admin = true;\n                } else {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                }\n             }\n        });\n\n        //vm.miembros = Organo.miembros({ id : $stateParams.id });\n        vm.sesiones = Organo.sesiones({ id: $stateParams.id });\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        var unsubscribe = $rootScope.$on('reunionsApp:organoUpdate', function(event, result) {\n            vm.organo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDeleteController',OrganoDeleteController);\n\n    OrganoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Organo'];\n\n    function OrganoDeleteController($uibModalInstance, entity, Organo) {\n        var vm = this;\n\n        vm.organo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Organo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('organo', {\n            parent: 'app',\n            url: '/organo',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.organo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/organo/organos.html',\n                    controller: 'OrganoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('organo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('organo-detail', {\n            parent: 'organo',\n            url: '/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.organo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/organo/organo-detail.html',\n                    controller: 'OrganoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('organo');\n                    $translatePartialLoader.addPart('miembro');\n                    $translatePartialLoader.addPart('sesion');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Organo', function($stateParams, Organo) {\n                    return Organo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'organo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('organo-detail.edit', {\n            parent: 'organo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('organo.new', {\n            parent: 'organo',\n            url: '',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                descripcion: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('organo');\n                });\n            }]\n        })\n        .state('organo.edit', {\n            parent: 'organo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('organo.delete', {\n            parent: 'organo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-delete-dialog.html',\n                    controller: 'OrganoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Organo', Organo);\n\n    Organo.$inject = ['$resource', 'DateUtils'];\n\n    function Organo ($resource, DateUtils) {\n        var resourceUrl =  'api/organos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'miembros': { method: 'GET', isArray: true, url: 'api/organos/:id/miembros'},\n            'miembrosAnteriores': { method: 'GET', isArray: true, url:'api/organos/:id/miembrosAnteriores'},\n            'sesiones': { method: 'GET', isArray: true, url: 'api/organos/:id/sesiones'},\n            'getLastSesion': {\n                method: 'GET',\n                url: 'api/organos/:id/lastSesion',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.primeraConvocatoria = DateUtils.convertDateTimeFromServer(data.primeraConvocatoria);\n                        data.segundaConvocatoria = DateUtils.convertDateTimeFromServer(data.segundaConvocatoria);\n                    }\n                    return data;\n                }\n            },\n            'getAll': { method: 'GET', isArray: true, url:'api/organos'},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('OrganoSearch', OrganoSearch);\n\n    OrganoSearch.$inject = ['$resource'];\n\n    function OrganoSearch($resource) {\n        var resourceUrl =  'api/_search/organos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoController', OrganoController);\n\n    OrganoController.$inject = ['$scope', '$state', '$location', '$anchorScroll', 'Organo', 'OrganoSearch', 'ParseLinks', 'AlertService'];\n\n    function OrganoController ($scope, $state, $location, $anchorScroll, Organo, OrganoSearch, ParseLinks, AlertService) {\n        var vm = this;\n\n//        vm.loadPage = loadPage;\n//        vm.predicate = pagingParams.predicate;\n//        vm.reverse = pagingParams.ascending;\n//        vm.transition = transition;\n//        vm.itemsPerPage = paginationConstants.itemsPerPage;\n//        vm.clear = clear;\n//        vm.search = search;\n        vm.goUp = function(id) {\n                  var old = $location.hash();\n                  $location.hash(id);\n                  $anchorScroll();\n                  //reset to old to keep any additional routing logic from kicking in\n                  $location.hash(old);\n                  };\n        vm.organos = Organo.getAll();\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n        //vm.loadAll = loadAll;\n//        vm.searchQuery = pagingParams.search;\n//        vm.currentSearch = pagingParams.search;\n\n        //loadAll();\n\n//        function loadAll () {\n//            if (pagingParams.search) {\n//                OrganoSearch.query({\n//                    query: pagingParams.search,\n//                    page: pagingParams.page - 1,\n//                    size: vm.itemsPerPage,\n//                    sort: sort()\n//                }, onSuccess, onError);\n//            } else {\n//                Organo.query({\n//                    page: pagingParams.page - 1,\n//                    size: vm.itemsPerPage,\n//                    sort: sort()\n//                }, onSuccess, onError);\n//            }\n//            function sort() {\n//                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n//                if (vm.predicate !== 'id') {\n//                    result.push('id');\n//                }\n//                return result;\n//            }\n//            function onSuccess(data, headers) {\n//                vm.links = ParseLinks.parse(headers('link'));\n//                vm.totalItems = headers('X-Total-Count');\n//                vm.queryCount = vm.totalItems;\n//                vm.organos = data;\n//                vm.page = pagingParams.page;\n//            }\n//            function onError(error) {\n//                AlertService.error(error.data.message);\n//            }\n//        }\n//\n//        function loadPage (page) {\n//            vm.page = page;\n//            vm.transition();\n//        }\n//\n//        function transition () {\n//            $state.transitionTo($state.$current, {\n//                page: vm.page,\n//                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n//                search: vm.currentSearch\n//            });\n//        }\n//\n//        function search (searchQuery) {\n//            if (!searchQuery){\n//                return vm.clear();\n//            }\n//            vm.links = null;\n//            vm.page = 1;\n//            vm.predicate = '_score';\n//            vm.reverse = false;\n//            vm.currentSearch = searchQuery;\n//            vm.transition();\n//        }\n//\n//        function clear () {\n//            vm.links = null;\n//            vm.page = 1;\n//            vm.predicate = 'id';\n//            vm.reverse = true;\n//            vm.currentSearch = null;\n//            vm.transition();\n//        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDialogController', MiembroDialogController);\n\n    MiembroDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Miembro', 'Organo', 'Cargo', 'User'];\n\n    function MiembroDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Miembro, Organo, Cargo, User) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.clear = clear;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n        vm.cargos = Cargo.query();\n        vm.users = User.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.miembro.id !== null) {\n                Miembro.update(vm.miembro, onSaveSuccess, onSaveError);\n            } else {\n                Miembro.save(vm.miembro, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:miembroUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.datePickerOpenStatus.fechaAlta = false;\n        vm.datePickerOpenStatus.fechaBaja = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDetailController', MiembroDetailController);\n\n    MiembroDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Miembro', 'Organo', 'Cargo', 'User'];\n\n    function MiembroDetailController($scope, $rootScope, $stateParams, previousState, entity, Miembro, Organo, Cargo, User) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:miembroUpdate', function(event, result) {\n            vm.miembro = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDeleteController',MiembroDeleteController);\n\n    MiembroDeleteController.$inject = ['$uibModalInstance', 'entity', 'Miembro'];\n\n    function MiembroDeleteController($uibModalInstance, entity, Miembro) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete () {\n            vm.miembro.fechaBaja = new Date();\n            Miembro.update(vm.miembro,\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('miembro', {\n            parent: 'entity',\n            url: '/miembro?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.miembro.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/miembro/miembros.html',\n                    controller: 'MiembroController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('miembro');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('miembro-detail', {\n            parent: 'entity',\n            url: '/miembro/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.miembro.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/miembro/miembro-detail.html',\n                    controller: 'MiembroDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('miembro');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Miembro', function($stateParams, Miembro) {\n                    return Miembro.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'miembro',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('miembro-detail.edit', {\n            parent: 'organo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.new', {\n            parent: 'organo-detail',\n            url: '/nuevoMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function (Organo) {\n                            return {\n                                fechaAlta: new Date(),\n                                fechaBaja: null,\n                                observaciones: null,\n                                id: null,\n                                organo: Organo.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.edit', {\n            parent: 'organo-detail',\n            url: '/{idm}/editarMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.idm}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.delete', {\n            parent: 'organo-detail',\n            url: '/{idm}/eliminarMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-delete-dialog.html',\n                    controller: 'MiembroDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.idm}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Miembro', Miembro);\n\n    Miembro.$inject = ['$resource', 'DateUtils'];\n\n    function Miembro ($resource, DateUtils) {\n        var resourceUrl =  'api/miembros/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.fechaAlta = DateUtils.convertLocalDateFromServer(data.fechaAlta);\n                        data.fechaBaja = DateUtils.convertLocalDateFromServer(data.fechaBaja);\n                    }\n                    return data;\n                }\n            },\n            'update': {\n                method: 'PUT',\n                transformRequest: function (data) {\n                    var copy = angular.copy(data);\n                    copy.fechaAlta = DateUtils.convertLocalDateToServer(copy.fechaAlta);\n                    copy.fechaBaja = DateUtils.convertLocalDateToServer(copy.fechaBaja);\n                    return angular.toJson(copy);\n                }\n            },\n            'save': {\n                method: 'POST',\n                transformRequest: function (data) {\n                    var copy = angular.copy(data);\n                    copy.fechaAlta = DateUtils.convertLocalDateToServer(copy.fechaAlta);\n                    copy.fechaBaja = DateUtils.convertLocalDateToServer(copy.fechaBaja);\n                    return angular.toJson(copy);\n                }\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('MiembroSearch', MiembroSearch);\n\n    MiembroSearch.$inject = ['$resource'];\n\n    function MiembroSearch($resource) {\n        var resourceUrl =  'api/_search/miembros/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroController', MiembroController);\n\n    MiembroController.$inject = ['$scope', '$state', 'Miembro', 'MiembroSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function MiembroController ($scope, $state, Miembro, MiembroSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                MiembroSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Miembro.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.miembros = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDialogController', GrupoDialogController);\n\n    GrupoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Grupo', 'Organo'];\n\n    function GrupoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Grupo, Organo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.organos = Organo.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.grupo.id !== null) {\n                Grupo.update(vm.grupo, onSaveSuccess, onSaveError);\n            } else {\n                Grupo.save(vm.grupo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:grupoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDetailController', GrupoDetailController);\n\n    GrupoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Grupo', 'Organo'];\n\n    function GrupoDetailController($scope, $rootScope, $stateParams, previousState, entity, Grupo, Organo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:grupoUpdate', function(event, result) {\n            vm.grupo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDeleteController',GrupoDeleteController);\n\n    GrupoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Grupo'];\n\n    function GrupoDeleteController($uibModalInstance, entity, Grupo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Grupo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('grupo', {\n            parent: 'entity',\n            url: '/grupo',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.grupo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/grupo/grupos.html',\n                    controller: 'GrupoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('grupo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('grupo-detail', {\n            parent: 'entity',\n            url: '/grupo/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.grupo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/grupo/grupo-detail.html',\n                    controller: 'GrupoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('grupo');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Grupo', function($stateParams, Grupo) {\n                    return Grupo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'grupo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('grupo-detail.edit', {\n            parent: 'grupo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('grupo.new', {\n            parent: 'grupo',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('grupo');\n                });\n            }]\n        })\n        .state('grupo.edit', {\n            parent: 'grupo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('grupo.delete', {\n            parent: 'grupo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-delete-dialog.html',\n                    controller: 'GrupoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Grupo', Grupo);\n\n    Grupo.$inject = ['$resource'];\n\n    function Grupo ($resource) {\n        var resourceUrl =  'api/grupos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('GrupoSearch', GrupoSearch);\n\n    GrupoSearch.$inject = ['$resource'];\n\n    function GrupoSearch($resource) {\n        var resourceUrl =  'api/_search/grupos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoController', GrupoController);\n\n    GrupoController.$inject = ['$scope', '$state', 'Grupo', 'GrupoSearch'];\n\n    function GrupoController ($scope, $state, Grupo, GrupoSearch) {\n        var vm = this;\n        \n        vm.grupos = [];\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Grupo.query(function(result) {\n                vm.grupos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            GrupoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.grupos = result;\n            });\n        }    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDialogController', DocumentoDialogController);\n\n    DocumentoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'DataUtils', 'entity', 'Documento', 'Sesion'];\n\n    function DocumentoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, DataUtils, entity, Documento, Sesion) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.clear = clear;\n        vm.byteSize = DataUtils.byteSize;\n        vm.openFile = DataUtils.openFile;\n        vm.save = save;\n        vm.sesions = Sesion.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.documento.id !== null) {\n                Documento.update(vm.documento, onSaveSuccess, onSaveError);\n            } else {\n                Documento.save(vm.documento, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:documentoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        vm.setArchivo = function ($file, documento) {\n            if ($file) {\n                DataUtils.toBase64($file, function(base64Data) {\n                    $scope.$apply(function() {\n                        documento.archivo = base64Data;\n                        documento.archivoContentType = $file.type;\n                    });\n                });\n            }\n        };\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDetailController', DocumentoDetailController);\n\n    DocumentoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'DataUtils', 'entity', 'Documento', 'Sesion'];\n\n    function DocumentoDetailController($scope, $rootScope, $stateParams, previousState, DataUtils, entity, Documento, Sesion) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.previousState = previousState.name;\n        vm.byteSize = DataUtils.byteSize;\n        vm.openFile = DataUtils.openFile;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:documentoUpdate', function(event, result) {\n            vm.documento = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDeleteController',DocumentoDeleteController);\n\n    DocumentoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Documento'];\n\n    function DocumentoDeleteController($uibModalInstance, entity, Documento) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Documento.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('documento', {\n            parent: 'entity',\n            url: '/documento',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.documento.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/documento/documentos.html',\n                    controller: 'DocumentoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('documento');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('documento-detail', {\n            parent: 'entity',\n            url: '/documento/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.documento.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/documento/documento-detail.html',\n                    controller: 'DocumentoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('documento');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Documento', function($stateParams, Documento) {\n                    return Documento.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'documento',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('documento-detail.edit', {\n            parent: 'documento-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.new', {\n            parent: 'sesion-detail',\n            url: '/nuevoDocumento',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function (Sesion) {\n                            return {\n                                nombre: null,\n                                archivo: null,\n                                archivoContentType: null,\n                                id: null,\n                                sesion: Sesion.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.edit', {\n            parent: 'documento',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('documento', null, { reload: 'documento' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.delete', {\n            parent: 'sesion-detail',\n            url: '/{idd}/eliminarDocumento',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-delete-dialog.html',\n                    controller: 'DocumentoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.idd}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Documento', Documento);\n\n    Documento.$inject = ['$resource'];\n\n    function Documento ($resource) {\n        var resourceUrl =  'api/documentos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DocumentoSearch', DocumentoSearch);\n\n    DocumentoSearch.$inject = ['$resource'];\n\n    function DocumentoSearch($resource) {\n        var resourceUrl =  'api/_search/documentos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoController', DocumentoController);\n\n    DocumentoController.$inject = ['$scope', '$state', 'DataUtils', 'Documento', 'DocumentoSearch'];\n\n    function DocumentoController ($scope, $state, DataUtils, Documento, DocumentoSearch) {\n        var vm = this;\n        \n        vm.documentos = [];\n        vm.openFile = DataUtils.openFile;\n        vm.byteSize = DataUtils.byteSize;\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Documento.query(function(result) {\n                vm.documentos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            DocumentoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.documentos = result;\n            });\n        }    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDialogController', CargoDialogController);\n\n    CargoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Cargo'];\n\n    function CargoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.clear = clear;\n        vm.save = save;\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.cargo.id !== null) {\n                Cargo.update(vm.cargo, onSaveSuccess, onSaveError);\n            } else {\n                Cargo.save(vm.cargo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:cargoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDetailController', CargoDetailController);\n\n    CargoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Cargo'];\n\n    function CargoDetailController($scope, $rootScope, $stateParams, previousState, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:cargoUpdate', function(event, result) {\n            vm.cargo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDeleteController',CargoDeleteController);\n\n    CargoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Cargo'];\n\n    function CargoDeleteController($uibModalInstance, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Cargo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('cargo', {\n            parent: 'entity',\n            url: '/cargo',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.cargo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/cargo/cargos.html',\n                    controller: 'CargoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('cargo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('cargo-detail', {\n            parent: 'entity',\n            url: '/cargo/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.cargo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/cargo/cargo-detail.html',\n                    controller: 'CargoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('cargo');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Cargo', function($stateParams, Cargo) {\n                    return Cargo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'cargo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('cargo-detail.edit', {\n            parent: 'cargo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('cargo.new', {\n            parent: 'cargo',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('cargo');\n                });\n            }]\n        })\n        .state('cargo.edit', {\n            parent: 'cargo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('cargo.delete', {\n            parent: 'cargo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-delete-dialog.html',\n                    controller: 'CargoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n","(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Cargo', Cargo);\n\n    Cargo.$inject = ['$resource'];\n\n    function Cargo ($resource) {\n        var resourceUrl =  'api/cargos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('CargoSearch', CargoSearch);\n\n    CargoSearch.$inject = ['$resource'];\n\n    function CargoSearch($resource) {\n        var resourceUrl =  'api/_search/cargos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoController', CargoController);\n\n    CargoController.$inject = ['$scope', '$state', 'Cargo', 'CargoSearch'];\n\n    function CargoController ($scope, $state, Cargo, CargoSearch) {\n        var vm = this;\n        \n        vm.cargos = [];\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Cargo.query(function(result) {\n                vm.cargos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            CargoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.cargos = result;\n            });\n        }    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            \n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('characters', characters);\n        \n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n","(function(){\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils ($filter) {\n\n        var service = {\n            convertDateTimeFromServer : convertDateTimeFromServer,\n            convertLocalDateFromServer : convertLocalDateFromServer,\n            convertLocalDateToServer : convertLocalDateToServer,\n            dateformat : dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer (date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer (date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer (date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat () {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset' ||\n                    $state.current.name === 'home') {\n                    $state.go('home', {}, {reload: true});\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is succesful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'tr': 'Türkçe',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'gl',\n            'en',\n            'es'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('reunionsApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var errorHeader = httpResponse.headers('X-reunionsApp-error');\n                var entityKey = httpResponse.headers('X-reunionsApp-params');\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('reunionsApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var alertKey = response.headers('X-reunionsApp-alert');\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers('X-reunionsApp-params')});\n            }\n            return response;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('reunionsApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    \n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            // If we have an unauthorized request we redirect to the login page\n            // Don't do this check on the account API to avoid infinite loop\n            if (response.status === 401 && angular.isDefined(response.data.path) && response.data.path.indexOf('/api/account') === -1) {\n                var Auth = $injector.get('Auth');\n                var to = $rootScope.toState;\n                var params = $rootScope.toStateParams;\n                Auth.logout();\n                if (to.name !== 'accessdenied') {\n                    Auth.storePreviousState(to.name, params);\n                }\n                var LoginService = $injector.get('LoginService');\n                LoginService.open();\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precendence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                \n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n                \n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to prefered language \"gl\"');\n                $cookies.putObject(name, 'gl');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('gl');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n        \n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('reunionsApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$location', '$anchorScroll', '$stateParams', '$previousState', 'DataUtils', 'User'];\n\n    function UserManagementDetailController ($location, $anchorScroll, $stateParams, $previousState, DataUtils, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n        vm.exportar = exportar;\n        vm.back = back;\n        vm.predicateParticipaciones = 'sesion.primeraConvocatoria';\n        vm.reverseParticipaciones = false;\n        vm.goUp = function(id) {\n                                  var old = $location.hash();\n                                  $location.hash(id);\n                                  $anchorScroll();\n                                  //reset to old to keep any additional routing logic from kicking in\n                                  $location.hash(old);\n                                  };\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.load($stateParams.login);\n        vm.resumen = User.resumen({ login: $stateParams.login});\n        vm.membresia = User.membresia({ login: $stateParams.login});\n        vm.participaciones = User.participaciones({ login: $stateParams.login});\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n\n        function b64toBlob(b64Data, contentType, sliceSize) {\n          contentType = contentType || '';\n          sliceSize = sliceSize || 512;\n\n          var byteCharacters = atob(b64Data);\n          var byteArrays = [];\n\n          for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n            var byteNumbers = new Array(slice.length);\n            for (var i = 0; i < slice.length; i++) {\n              byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            var byteArray = new Uint8Array(byteNumbers);\n\n            byteArrays.push(byteArray);\n          }\n\n          var blob = new Blob(byteArrays, {type: contentType});\n          return blob;\n        }\n\n        function exportar () {\n            var filename = \"test.xlsx\"\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            var excel = User.excel({login: vm.user.login});\n            excel.$promise.then( function(result) {\n                var file = b64toBlob(result.archivo, result.archivoContentType);\n                //var blobUrl = URL.createObjectURL(blob);\n                var fileURL = window.URL.createObjectURL(file);\n                a.href = fileURL;\n                a.download = filename;\n                a.click();\n            });\n        }\n\n        function back () {\n            $previousState.go();\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'app',\n            url: '/user-management',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/user/:login',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'user-management',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('user-management.new', {\n            parent: 'user-management',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            parent: 'user-management',\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail.edit', {\n                    parent: 'user-management-detail',\n                    url: '/detail/edit',\n                    data: {\n                        authorities: ['ROLE_ADMIN']\n                    },\n                    onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                        $uibModal.open({\n                            templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                            controller: 'UserManagementDialogController',\n                            controllerAs: 'vm',\n                            backdrop: 'static',\n                            size: 'lg',\n                            resolve: {\n                                entity: ['User', function(User) {\n                                    return User.get({login : $stateParams.login});\n                                }]\n                            }\n                        }).result.then(function() {\n                            $state.go('^', {}, { reload: false });\n                        }, function() {\n                            $state.go('^');\n                        });\n                    }]\n                })\n        .state('user-management.delete', {\n            parent: 'user-management',\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['$location', '$anchorScroll', 'Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'JhiLanguageService'];\n\n    function UserManagementController($location, $anchorScroll, Principal, User, ParseLinks, AlertService, $state, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.loadAll = loadAll;\n        vm.users = [];\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.loadAll();\n\n//        JhiLanguageService.getAll().then(function (languages) {\n//            vm.languages = languages;\n//        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n//        function setActive (user, isActivated) {\n//            user.activated = isActivated;\n//            User.update(user, function () {\n//                vm.loadAll();\n//                vm.clear();\n//            });\n//        }\n\n        function loadAll () {\n            User.getAll({ }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            //hide anonymous user from user management: it's a required user for Spring Security\n            for (var i in data) {\n                if (data[i]['login'] === 'anonymoususer') {\n                    data.splice(i, 1);\n                }\n            }\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n//        function clear () {\n//            vm.user = {\n//                id: null, login: null, firstName: null, lastName: null, email: null,\n//                activated: null, langKey: null, createdBy: null, createdDate: null,\n//                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n//                resetKey: null, authorities: null\n//            };\n//        }\n//\n//        function loadPage (page) {\n//            vm.page = page;\n//            vm.transition();\n//        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/jhipster/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.cachesStats = {};\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            vm.cachesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n                if (key.indexOf('net.sf.ehcache.Cache') !== -1) {\n                    // remove gets or puts\n                    var index = key.lastIndexOf('.');\n                    var newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    vm.cachesStats[newKey] = {\n                        'name': newKey,\n                        'value': value\n                    };\n                }\n            });\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/jhipster/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular.module('reunionsApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/jhipster/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('sessions', {\n            parent: 'account',\n            url: '/sessions',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.sessions'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/sessions/sessions.html',\n                    controller: 'SessionsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sessions');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SessionsController', SessionsController);\n\n    SessionsController.$inject = ['Sessions', 'Principal'];\n\n    function SessionsController (Sessions, Principal) {\n        var vm = this;\n\n        vm.account = null;\n        vm.error = null;\n        vm.invalidate = invalidate;\n        vm.sessions = Sessions.getAll();\n        vm.success = null;\n\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function invalidate (series) {\n            Sessions.delete({series: encodeURIComponent(series)},\n                function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                    vm.sessions = Sessions.getAll();\n                },\n                function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'e-mail address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'e-mail address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n","/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penality (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penality (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'angularUtils.directives.dirPagination',\n            'ui.calendar',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'ct.ui.router.extras',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'membresia': { method: 'GET', isArray: true, url: 'api/users/:login/membresia'},\n            'getAll': {method: 'GET', isArray: true, url:'api/users'},\n            'getEvents': {method: 'GET', isArray: true, url:'api/users/events'},\n            'participaciones': {method: 'GET', isArray: true, url:'api/users/:login/participaciones'},\n            //'getOthersEvents': {method: 'GET', isArray: true, url:'api/users/othersEvents'},\n            'resumen': {method: 'GET', isArray: true, url: 'api/users/:login/resumen'},\n            'excel': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }, url: 'api/users/:login/excel'\n            },\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Sessions', Sessions);\n\n    Sessions.$inject = ['$resource'];\n\n    function Sessions ($resource) {\n        return $resource('api/account/sessions/:series', {}, {\n            'getAll': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage' ];\n\n    function AuthServerProvider ($http, $localStorage ) {\n        var service = {\n            getToken: getToken,\n            hasValidToken: hasValidToken,\n            login: login,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            var token = $localStorage.authenticationToken;\n            return token;\n        }\n\n        function hasValidToken () {\n            var token = this.getToken();\n            return !!token;\n        }\n\n        function login (credentials) {\n            var data = 'j_username=' + encodeURIComponent(credentials.username) +\n                '&j_password=' + encodeURIComponent(credentials.password) +\n                '&remember-me=' + credentials.rememberMe + '&submit=Login';\n\n            return $http.post('api/authentication', data, {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }\n            }).success(function (response) {\n                return response;\n            });\n        }\n\n        function logout () {\n\n            \n            // logout from the server\n            $http.post('api/logout').success(function (response) {\n                delete $localStorage.authenticationToken;\n                // to get a new csrf token call the api\n                $http.get('api/account');\n                return response;\n            });\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('noAccents', noAccents);\n\n    function noAccents() {\n        return function(data) {\n            return data.toLowerCase()\n                     .replace(/á/g, 'a')\n                     .replace(/â/g, 'a')\n                     .replace(/é/g, 'e')\n                     .replace(/è/g, 'e')\n                     .replace(/ê/g, 'e')\n                     .replace(/í/g, 'i')\n                     .replace(/ï/g, 'i')\n                     .replace(/ì/g, 'i')\n                     .replace(/ó/g, 'o')\n                     .replace(/ô/g, 'o')\n                     .replace(/ú/g, 'u')\n                     .replace(/ü/g, 'u')\n                     .replace(/ç/g, 'c')\n                     .replace(/ß/g, 's');\n        };\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService'];\n\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        ProfileService.getProfileInfo().then(function(response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        vm.login = login;\n        vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        function login() {\n            collapseNavbar();\n            LoginService.open();\n        }\n\n        function logout() {\n            collapseNavbar();\n            Auth.logout();\n            $state.go('home', {}, {reload: true});\n        }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('activeLink', activeLink);\n\n    function activeLink() {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var clazz = attrs.activeLink;\n            var path = attrs.href;\n            path = path.substring(1); //hack because path does bot return including hashbang\n            scope.location = location;\n            scope.$watch('location.path()', function(newPath) {\n                if (path === newPath) {\n                    element.addClass(clazz);\n                } else {\n                    element.removeClass(clazz);\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', '$compile', 'Principal', 'LoginService', '$state', 'User'];\n\n    function HomeController ($scope, $compile, Principal, LoginService, $state, User) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.eventClick = eventClick;\n        vm.events = [];\n        vm.eventRender = function( event, element, view ) {\n                element.attr({'uib-tooltip': event.title,\n                             'uib-tooltip-append-to-body': true});\n                $compile(element)($scope);\n            };\n        vm.calendarConfig = {\n            calendar: {\n                allDaySlot: false,\n                //timezone: 'local',\n                editable: false,\n                //locale: 'es',\n                firstDay: 1,\n                header: {\n                    left:   'title',\n                    center: '',\n                    right:  'today prev,next'\n                },\n                buttonText: {\n                    today: moment().format(\"DD/MM/YY\")\n                },\n                timeFormat: 'HH:mm',\n                titleFormat: '[Sesiones de ] MMMM YYYY',\n                eventClick: vm.eventClick,\n                eventResizeStop: $scope.alertResize,\n                eventDragStop: $scope.alertDrag,\n                eventRender: vm.eventRender,\n                dayClick: $scope.dayClick\n            }\n        };\n\n\n\n        function eventClick (event, jsEvent, view) {\n            $state.go(\"sesion-detail\", {id: event.id});\n        }\n\n         vm.myevents = function(start, end, timezone, callback) {\n\n\n            User.getEvents($scope, function(response) {\n\n                  //  $rootScope.myobject = data;\n\n\n                    vm.events = [];\n\n\n                    angular.forEach(response,function(event){\n                        console.log(event.primeraConvocatoria);\n                        console.log(new Date(Date.parse(event.primeraConvocatoria)));\n                        vm.events.push({\n                            id: event.id,\n                            title: event.organo.nombre,\n                            start: new Date(Date.parse(event.primeraConvocatoria)),\n                            color: event.numero == 1 ? '#c7007d' : 'grey'\n                        });\n                    });\n                    callback(vm.events);\n            });\n\n//            User.getOthersEvents($scope, function(response2) {\n//\n//                angular.forEach(response2,function(event2){\n//                    console.log(event2.primeraConvocatoria);\n//                    console.log(new Date(Date.parse(event2.primeraConvocatoria)));\n//                    vm.events.push({\n//                        id: 2,//event2.id,\n//                        title: \"bla\",//event2.organo.nombre,\n//                        start: new Date(Date.parse(event2.segundaConvocatoria))\n//                    });\n//                });\n//                callback(vm.events);\n//            });\n\n        }\n\n\n        vm.eventSources = [vm.events,vm.myevents];\n\n        $scope.$on('authenticationSuccess', function() {\n            getAccount();\n        });\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n        function register () {\n            $state.go('register');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDialogController', SesionDialogController);\n\n    SesionDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Principal', 'Sesion', 'Organo', 'Participante', 'Documento'];\n\n    function SesionDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Principal, Sesion, Organo, Participante, Documento) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.admin = false;\n\n        vm.sesion = entity;\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        Organo.miembros({ id : $stateParams.id }).$promise.then( function(data) {\n             if (vm.isAuthenticated) {\n                if (!vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                    if (!vm.admin) {\n                        $uibModalInstance.dismiss('cancel');\n                    }\n                }\n             }\n        });\n\n        if (vm.sesion.numero === null) {\n            vm.last = false;\n            vm.lastSesion = Organo.getLastSesion({id : $stateParams.id}, onLastSesionSuccess);\n        }\n\n        function onLastSesionSuccess (result) {\n            if (result.id) {\n                vm.sesion.numero = result.numero + 1;\n            } else {\n                vm.sesion.numero = 1;\n            }\n        }\n\n        vm.clear = clear;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n        vm.organos = Organo.query();\n        vm.participantes = Participante.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.sesion.id !== null) {\n                Sesion.update(vm.sesion, onSaveSuccess, onSaveError);\n            } else {\n                Sesion.save(vm.sesion, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:sesionUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.datePickerOpenStatus.primeraConvocatoria = false;\n        vm.datePickerOpenStatus.segundaConvocatoria = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDetailController', SesionDetailController);\n\n    SesionDetailController.$inject = ['$location', '$anchorScroll', '$scope', '$rootScope', '$stateParams', '$previousState', 'previousState', 'DataUtils', 'entity', 'Principal', 'Sesion', 'Organo', 'Participante', 'Documento'];\n\n    function SesionDetailController($location, $anchorScroll, $scope, $rootScope, $stateParams, $previousState, previousState, DataUtils, entity, Principal, Sesion, Organo, Participante, Documento) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.sesion = entity;\n        vm.openFile = DataUtils.openFile;\n        vm.byteSize = DataUtils.byteSize;\n        vm.notificar = notificar;\n        vm.exportar = exportar;\n        vm.back = back;\n        vm.marcarAsistencia = marcarAsistencia;\n        vm.admin = false;\n        vm.previousState = $previousState.get();\n        vm.marcando = false;\n        vm.predicate = 'user.lastName|noAccents';\n        vm.reverse = true;\n\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        Organo.miembros({ id : vm.sesion.organo.id }).$promise.then( function(data) {\n             if (vm.isAuthenticated) {\n                if (vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    vm.admin = true;\n                } else {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                }\n             }\n        });\n\n        vm.documentos = Sesion.documentos({ id: $stateParams.id })\n        vm.participantes = Sesion.participantes({ id: $stateParams.id });\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        function marcarAsistencia () {\n            if (vm.marcando) {\n                vm.marcando = false;\n                Sesion.marcarAsistencia(vm.participantes);\n            } else {\n                vm.marcando = true;\n            }\n        }\n\n        function byname (a, b) {\n            return a.user.lastName.localeCompare(b.user.lastName);\n\n        }\n\n        function exportar () {\n            var i;\n            var cabecera = \"Relación de asistentes a la sesión número \" + vm.sesion.numero + \" del órgano \" + vm.sesion.organo.nombre;\n            var asistentes = \"\\n\\nAsiste:\";\n            var disculpas = \"\\n\\nDisculpa:\";\n            var faltas = \"\\n\\nFalta:\";\n            vm.copiaparticipantes = vm.participantes.slice(0);\n            for (i in vm.copiaparticipantes.sort(byname)) {\n                var p = vm.participantes[i];\n                if (p.asistencia == \"asiste\") {\n                    asistentes += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                } else if (p.asistencia == \"disculpa\") {\n                    disculpas += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                } else if (p.asistencia == \"falta\") {\n                    faltas += \"\\n\\t\" + p.user.lastName + \", \" + p.user.firstName;\n                }\n            }\n            var a = document.body.appendChild(\n                    document.createElement(\"a\")\n                );\n            a.download = \"participacion.txt\";\n            a.href = \"data:text/plain;base64,\" + btoa(cabecera + asistentes + disculpas + faltas);\n            a.click()\n        }\n\n        function notificar () {\n            Sesion.notificar(vm.sesion);\n        }\n\n        function back () {\n            $previousState.go();\n        }\n\n        var unsubscribe = $rootScope.$on('reunionsApp:sesionUpdate', function(event, result) {\n            vm.sesion = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionDeleteController',SesionDeleteController);\n\n    SesionDeleteController.$inject = ['$uibModalInstance', 'entity', 'Sesion'];\n\n    function SesionDeleteController($uibModalInstance, entity, Sesion) {\n        var vm = this;\n\n        vm.sesion = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Sesion.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('sesion', {\n            parent: 'entity',\n            url: '/sesion?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.sesion.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/sesion/sesions.html',\n                    controller: 'SesionController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sesion');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('sesion-detail', {\n            parent: 'organo',\n            url: '/sesion/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.sesion.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/sesion/sesion-detail.html',\n                    controller: 'SesionDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sesion');\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    $translatePartialLoader.addPart('documento');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Sesion', function($stateParams, Sesion) {\n                    return Sesion.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'sesion',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('sesion-detail.edit', {\n            parent: 'sesion-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.new', {\n            parent: 'organo-detail',\n            url: '/nuevaSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function (Organo) {\n                            return {\n                                numero: null,\n                                primeraConvocatoria: null,\n                                segundaConvocatoria: null,\n                                lugar: null,\n                                descripcion: null,\n                                id: null,\n                                organo: Organo.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.edit', {\n            parent: 'organo-detail',\n            url: '/{ids}/editarSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-dialog.html',\n                    controller: 'SesionDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.ids}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('sesion.delete', {\n            parent: 'organo-detail',\n            url: '/{ids}/eliminarSesion',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/sesion/sesion-delete-dialog.html',\n                    controller: 'SesionDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Sesion', function(Sesion) {\n                            return Sesion.get({id : $stateParams.ids}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Sesion', Sesion);\n\n    Sesion.$inject = ['$resource', 'DateUtils'];\n\n    function Sesion ($resource, DateUtils) {\n        var resourceUrl =  'api/sesions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'participantes': { method: 'GET', isArray: true, url: 'api/sesions/:id/participantes'},\n            'documentos': {method: 'GET', isArray: true, url: 'api/sesions/:id/documentos'},\n            'notificar': { method: 'POST', url: 'api/sesions/notificar' },\n            'marcarAsistencia': { method: 'PUT', url: 'api/sesions/marcarAsistencia'},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.primeraConvocatoria = DateUtils.convertDateTimeFromServer(data.primeraConvocatoria);\n                        data.segundaConvocatoria = DateUtils.convertDateTimeFromServer(data.segundaConvocatoria);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('SesionSearch', SesionSearch);\n\n    SesionSearch.$inject = ['$resource'];\n\n    function SesionSearch($resource) {\n        var resourceUrl =  'api/_search/sesions/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SesionController', SesionController);\n\n    SesionController.$inject = ['$scope', '$state', 'Sesion', 'SesionSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function SesionController ($scope, $state, Sesion, SesionSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                SesionSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Sesion.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.sesions = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDialogController', ParticipanteDialogController);\n\n    ParticipanteDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Participante', 'Sesion', 'Cargo', 'User'];\n\n    function ParticipanteDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Participante, Sesion, Cargo, User) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.sesions = Sesion.query();\n        vm.cargos = Cargo.query();\n        vm.users = User.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.participante.id !== null) {\n                Participante.update(vm.participante, onSaveSuccess, onSaveError);\n            } else {\n                Participante.save(vm.participante, onSaveSuccess, onSaveError);\n            }\n        }\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:participanteUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDetailController', ParticipanteDetailController);\n\n    ParticipanteDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Participante', 'Sesion', 'Cargo', 'User'];\n\n    function ParticipanteDetailController($scope, $rootScope, $stateParams, previousState, entity, Participante, Sesion, Cargo, User) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:participanteUpdate', function(event, result) {\n            vm.participante = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteDeleteController',ParticipanteDeleteController);\n\n    ParticipanteDeleteController.$inject = ['$uibModalInstance', 'entity', 'Participante'];\n\n    function ParticipanteDeleteController($uibModalInstance, entity, Participante) {\n        var vm = this;\n\n        vm.participante = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Participante.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('participante', {\n            parent: 'entity',\n            url: '/participante?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.participante.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/participante/participantes.html',\n                    controller: 'ParticipanteController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('participante-detail', {\n            parent: 'entity',\n            url: '/participante/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.participante.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/participante/participante-detail.html',\n                    controller: 'ParticipanteDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('participante');\n                    $translatePartialLoader.addPart('asistencia');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Participante', function($stateParams, Participante) {\n                    return Participante.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'participante',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('participante-detail.edit', {\n            parent: 'participante-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.new', {\n            parent: 'sesion-detail',\n            url: '/nuevoParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function (Sesion) {\n                            return {\n                                asistencia: null,\n                                observaciones: null,\n                                id: null,\n                                sesion: Sesion.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.edit', {\n            parent: 'sesion-detail',\n            url: '/{idp}/editarParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-dialog.html',\n                    controller: 'ParticipanteDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.idp}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('participante.delete', {\n            parent: 'sesion-detail',\n            url: '/{idp}/eliminarParticipante',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/participante/participante-delete-dialog.html',\n                    controller: 'ParticipanteDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Participante', function(Participante) {\n                            return Participante.get({id : $stateParams.idp}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Participante', Participante);\n\n    Participante.$inject = ['$resource'];\n\n    function Participante ($resource) {\n        var resourceUrl =  'api/participantes/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ParticipanteSearch', ParticipanteSearch);\n\n    ParticipanteSearch.$inject = ['$resource'];\n\n    function ParticipanteSearch($resource) {\n        var resourceUrl =  'api/_search/participantes/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ParticipanteController', ParticipanteController);\n\n    ParticipanteController.$inject = ['$scope', '$state', 'Participante', 'ParticipanteSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function ParticipanteController ($scope, $state, Participante, ParticipanteSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                ParticipanteSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Participante.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.participantes = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDialogController', OrganoDialogController);\n\n    OrganoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Organo', 'Grupo', 'Miembro', 'Sesion'];\n\n    function OrganoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Organo, Grupo, Miembro, Sesion) {\n        var vm = this;\n\n        vm.organo = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.grupos = Grupo.query();\n        vm.miembros = Miembro.query();\n        vm.sesions = Sesion.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.organo.id !== null) {\n                Organo.update(vm.organo, onSaveSuccess, onSaveError);\n            } else {\n                Organo.save(vm.organo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:organoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDetailController', OrganoDetailController);\n\n    OrganoDetailController.$inject = ['$location', '$anchorScroll', '$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Principal', 'Organo', 'Grupo', 'Miembro', 'Sesion', 'ParseLinks'];\n\n    function OrganoDetailController($location, $anchorScroll, $scope, $rootScope, $stateParams, previousState, entity, Principal, Organo, Grupo, Miembro, Sesion, ParseLinks) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.organo = entity;\n        vm.admin = false;\n        vm.predicate = 'user.lastName|noAccents';\n        vm.reverse = true;\n        vm.predicateAnteriores = 'user.lastName|noAccents';\n        vm.reverseAnteriores = true;\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        vm.previousState = previousState.name;\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n\n        vm.miembrosAnteriores = Organo.miembrosAnteriores({ id : $stateParams.id });\n        Organo.miembros({ id : $stateParams.id }).$promise.then( function(data) {\n             vm.miembros = data;\n             if (vm.isAuthenticated) {\n                if (vm.account.authorities.includes(\"ROLE_ADMIN\")) {\n                    vm.admin = true;\n                } else {\n                    data.forEach(function(element) {\n                         if (element.user.login == vm.account.login && element.cargo.id < 3) vm.admin = true;\n                    });\n                }\n             }\n        });\n\n        //vm.miembros = Organo.miembros({ id : $stateParams.id });\n        vm.sesiones = Organo.sesiones({ id: $stateParams.id });\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        var unsubscribe = $rootScope.$on('reunionsApp:organoUpdate', function(event, result) {\n            vm.organo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoDeleteController',OrganoDeleteController);\n\n    OrganoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Organo'];\n\n    function OrganoDeleteController($uibModalInstance, entity, Organo) {\n        var vm = this;\n\n        vm.organo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Organo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('organo', {\n            parent: 'app',\n            url: '/organo',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.organo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/organo/organos.html',\n                    controller: 'OrganoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('organo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('organo-detail', {\n            parent: 'organo',\n            url: '/{id}',\n            data: {\n                authorities: [],\n                pageTitle: 'reunionsApp.organo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/organo/organo-detail.html',\n                    controller: 'OrganoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('organo');\n                    $translatePartialLoader.addPart('miembro');\n                    $translatePartialLoader.addPart('sesion');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Organo', function($stateParams, Organo) {\n                    return Organo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'organo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('organo-detail.edit', {\n            parent: 'organo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('organo.new', {\n            parent: 'organo',\n            url: '',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                descripcion: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('organo');\n                });\n            }]\n        })\n        .state('organo.edit', {\n            parent: 'organo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-dialog.html',\n                    controller: 'OrganoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('organo.delete', {\n            parent: 'organo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/organo/organo-delete-dialog.html',\n                    controller: 'OrganoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Organo', function(Organo) {\n                            return Organo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('organo', null, { reload: 'organo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Organo', Organo);\n\n    Organo.$inject = ['$resource', 'DateUtils'];\n\n    function Organo ($resource, DateUtils) {\n        var resourceUrl =  'api/organos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'miembros': { method: 'GET', isArray: true, url: 'api/organos/:id/miembros'},\n            'miembrosAnteriores': { method: 'GET', isArray: true, url:'api/organos/:id/miembrosAnteriores'},\n            'sesiones': { method: 'GET', isArray: true, url: 'api/organos/:id/sesiones'},\n            'getLastSesion': {\n                method: 'GET',\n                url: 'api/organos/:id/lastSesion',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.primeraConvocatoria = DateUtils.convertDateTimeFromServer(data.primeraConvocatoria);\n                        data.segundaConvocatoria = DateUtils.convertDateTimeFromServer(data.segundaConvocatoria);\n                    }\n                    return data;\n                }\n            },\n            'getAll': { method: 'GET', isArray: true, url:'api/organos'},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('OrganoSearch', OrganoSearch);\n\n    OrganoSearch.$inject = ['$resource'];\n\n    function OrganoSearch($resource) {\n        var resourceUrl =  'api/_search/organos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('OrganoController', OrganoController);\n\n    OrganoController.$inject = ['$scope', '$state', '$location', '$anchorScroll', 'Organo', 'OrganoSearch', 'ParseLinks', 'AlertService'];\n\n    function OrganoController ($scope, $state, $location, $anchorScroll, Organo, OrganoSearch, ParseLinks, AlertService) {\n        var vm = this;\n\n//        vm.loadPage = loadPage;\n//        vm.predicate = pagingParams.predicate;\n//        vm.reverse = pagingParams.ascending;\n//        vm.transition = transition;\n//        vm.itemsPerPage = paginationConstants.itemsPerPage;\n//        vm.clear = clear;\n//        vm.search = search;\n        vm.goUp = function(id) {\n                  var old = $location.hash();\n                  $location.hash(id);\n                  $anchorScroll();\n                  //reset to old to keep any additional routing logic from kicking in\n                  $location.hash(old);\n                  };\n        vm.organos = Organo.getAll();\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n        //vm.loadAll = loadAll;\n//        vm.searchQuery = pagingParams.search;\n//        vm.currentSearch = pagingParams.search;\n\n        //loadAll();\n\n//        function loadAll () {\n//            if (pagingParams.search) {\n//                OrganoSearch.query({\n//                    query: pagingParams.search,\n//                    page: pagingParams.page - 1,\n//                    size: vm.itemsPerPage,\n//                    sort: sort()\n//                }, onSuccess, onError);\n//            } else {\n//                Organo.query({\n//                    page: pagingParams.page - 1,\n//                    size: vm.itemsPerPage,\n//                    sort: sort()\n//                }, onSuccess, onError);\n//            }\n//            function sort() {\n//                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n//                if (vm.predicate !== 'id') {\n//                    result.push('id');\n//                }\n//                return result;\n//            }\n//            function onSuccess(data, headers) {\n//                vm.links = ParseLinks.parse(headers('link'));\n//                vm.totalItems = headers('X-Total-Count');\n//                vm.queryCount = vm.totalItems;\n//                vm.organos = data;\n//                vm.page = pagingParams.page;\n//            }\n//            function onError(error) {\n//                AlertService.error(error.data.message);\n//            }\n//        }\n//\n//        function loadPage (page) {\n//            vm.page = page;\n//            vm.transition();\n//        }\n//\n//        function transition () {\n//            $state.transitionTo($state.$current, {\n//                page: vm.page,\n//                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n//                search: vm.currentSearch\n//            });\n//        }\n//\n//        function search (searchQuery) {\n//            if (!searchQuery){\n//                return vm.clear();\n//            }\n//            vm.links = null;\n//            vm.page = 1;\n//            vm.predicate = '_score';\n//            vm.reverse = false;\n//            vm.currentSearch = searchQuery;\n//            vm.transition();\n//        }\n//\n//        function clear () {\n//            vm.links = null;\n//            vm.page = 1;\n//            vm.predicate = 'id';\n//            vm.reverse = true;\n//            vm.currentSearch = null;\n//            vm.transition();\n//        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDialogController', MiembroDialogController);\n\n    MiembroDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Miembro', 'Organo', 'Cargo', 'User'];\n\n    function MiembroDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Miembro, Organo, Cargo, User) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.clear = clear;\n        vm.datePickerOpenStatus = {};\n        vm.openCalendar = openCalendar;\n        vm.save = save;\n        vm.cargos = Cargo.query();\n        vm.users = User.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.miembro.id !== null) {\n                Miembro.update(vm.miembro, onSaveSuccess, onSaveError);\n            } else {\n                Miembro.save(vm.miembro, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:miembroUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.datePickerOpenStatus.fechaAlta = false;\n        vm.datePickerOpenStatus.fechaBaja = false;\n\n        function openCalendar (date) {\n            vm.datePickerOpenStatus[date] = true;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDetailController', MiembroDetailController);\n\n    MiembroDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Miembro', 'Organo', 'Cargo', 'User'];\n\n    function MiembroDetailController($scope, $rootScope, $stateParams, previousState, entity, Miembro, Organo, Cargo, User) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:miembroUpdate', function(event, result) {\n            vm.miembro = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroDeleteController',MiembroDeleteController);\n\n    MiembroDeleteController.$inject = ['$uibModalInstance', 'entity', 'Miembro'];\n\n    function MiembroDeleteController($uibModalInstance, entity, Miembro) {\n        var vm = this;\n\n        vm.miembro = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete () {\n            vm.miembro.fechaBaja = new Date();\n            Miembro.update(vm.miembro,\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('miembro', {\n            parent: 'entity',\n            url: '/miembro?page&sort&search',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.miembro.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/miembro/miembros.html',\n                    controller: 'MiembroController',\n                    controllerAs: 'vm'\n                }\n            },\n            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                },\n                search: null\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort),\n                        search: $stateParams.search\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('miembro');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('miembro-detail', {\n            parent: 'entity',\n            url: '/miembro/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.miembro.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/miembro/miembro-detail.html',\n                    controller: 'MiembroDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('miembro');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Miembro', function($stateParams, Miembro) {\n                    return Miembro.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'miembro',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('miembro-detail.edit', {\n            parent: 'organo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.new', {\n            parent: 'organo-detail',\n            url: '/nuevoMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Organo', function (Organo) {\n                            return {\n                                fechaAlta: new Date(),\n                                fechaBaja: null,\n                                observaciones: null,\n                                id: null,\n                                organo: Organo.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.edit', {\n            parent: 'organo-detail',\n            url: '/{idm}/editarMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-dialog.html',\n                    controller: 'MiembroDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.idm}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('miembro.delete', {\n            parent: 'organo-detail',\n            url: '/{idm}/eliminarMiembro',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/miembro/miembro-delete-dialog.html',\n                    controller: 'MiembroDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Miembro', function(Miembro) {\n                            return Miembro.get({id : $stateParams.idm}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'organo-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Miembro', Miembro);\n\n    Miembro.$inject = ['$resource', 'DateUtils'];\n\n    function Miembro ($resource, DateUtils) {\n        var resourceUrl =  'api/miembros/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                        data.fechaAlta = DateUtils.convertLocalDateFromServer(data.fechaAlta);\n                        data.fechaBaja = DateUtils.convertLocalDateFromServer(data.fechaBaja);\n                    }\n                    return data;\n                }\n            },\n            'update': {\n                method: 'PUT',\n                transformRequest: function (data) {\n                    var copy = angular.copy(data);\n                    copy.fechaAlta = DateUtils.convertLocalDateToServer(copy.fechaAlta);\n                    copy.fechaBaja = DateUtils.convertLocalDateToServer(copy.fechaBaja);\n                    return angular.toJson(copy);\n                }\n            },\n            'save': {\n                method: 'POST',\n                transformRequest: function (data) {\n                    var copy = angular.copy(data);\n                    copy.fechaAlta = DateUtils.convertLocalDateToServer(copy.fechaAlta);\n                    copy.fechaBaja = DateUtils.convertLocalDateToServer(copy.fechaBaja);\n                    return angular.toJson(copy);\n                }\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('MiembroSearch', MiembroSearch);\n\n    MiembroSearch.$inject = ['$resource'];\n\n    function MiembroSearch($resource) {\n        var resourceUrl =  'api/_search/miembros/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('MiembroController', MiembroController);\n\n    MiembroController.$inject = ['$scope', '$state', 'Miembro', 'MiembroSearch', 'ParseLinks', 'AlertService', 'pagingParams', 'paginationConstants'];\n\n    function MiembroController ($scope, $state, Miembro, MiembroSearch, ParseLinks, AlertService, pagingParams, paginationConstants) {\n        var vm = this;\n        \n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.transition = transition;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.clear = clear;\n        vm.search = search;\n        vm.loadAll = loadAll;\n        vm.searchQuery = pagingParams.search;\n        vm.currentSearch = pagingParams.search;\n\n        loadAll();\n\n        function loadAll () {\n            if (pagingParams.search) {\n                MiembroSearch.query({\n                    query: pagingParams.search,\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            } else {\n                Miembro.query({\n                    page: pagingParams.page - 1,\n                    size: vm.itemsPerPage,\n                    sort: sort()\n                }, onSuccess, onError);\n            }\n            function sort() {\n                var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n                if (vm.predicate !== 'id') {\n                    result.push('id');\n                }\n                return result;\n            }\n            function onSuccess(data, headers) {\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n                vm.queryCount = vm.totalItems;\n                vm.miembros = data;\n                vm.page = pagingParams.page;\n            }\n            function onError(error) {\n                AlertService.error(error.data.message);\n            }\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n\n        function search (searchQuery) {\n            if (!searchQuery){\n                return vm.clear();\n            }\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = '_score';\n            vm.reverse = false;\n            vm.currentSearch = searchQuery;\n            vm.transition();\n        }\n\n        function clear () {\n            vm.links = null;\n            vm.page = 1;\n            vm.predicate = 'id';\n            vm.reverse = true;\n            vm.currentSearch = null;\n            vm.transition();\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDialogController', GrupoDialogController);\n\n    GrupoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Grupo', 'Organo'];\n\n    function GrupoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Grupo, Organo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.clear = clear;\n        vm.save = save;\n        vm.organos = Organo.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.grupo.id !== null) {\n                Grupo.update(vm.grupo, onSaveSuccess, onSaveError);\n            } else {\n                Grupo.save(vm.grupo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:grupoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDetailController', GrupoDetailController);\n\n    GrupoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Grupo', 'Organo'];\n\n    function GrupoDetailController($scope, $rootScope, $stateParams, previousState, entity, Grupo, Organo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:grupoUpdate', function(event, result) {\n            vm.grupo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoDeleteController',GrupoDeleteController);\n\n    GrupoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Grupo'];\n\n    function GrupoDeleteController($uibModalInstance, entity, Grupo) {\n        var vm = this;\n\n        vm.grupo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Grupo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('grupo', {\n            parent: 'entity',\n            url: '/grupo',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.grupo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/grupo/grupos.html',\n                    controller: 'GrupoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('grupo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('grupo-detail', {\n            parent: 'entity',\n            url: '/grupo/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.grupo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/grupo/grupo-detail.html',\n                    controller: 'GrupoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('grupo');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Grupo', function($stateParams, Grupo) {\n                    return Grupo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'grupo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('grupo-detail.edit', {\n            parent: 'grupo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('grupo.new', {\n            parent: 'grupo',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('grupo');\n                });\n            }]\n        })\n        .state('grupo.edit', {\n            parent: 'grupo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-dialog.html',\n                    controller: 'GrupoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('grupo.delete', {\n            parent: 'grupo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/grupo/grupo-delete-dialog.html',\n                    controller: 'GrupoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Grupo', function(Grupo) {\n                            return Grupo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('grupo', null, { reload: 'grupo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Grupo', Grupo);\n\n    Grupo.$inject = ['$resource'];\n\n    function Grupo ($resource) {\n        var resourceUrl =  'api/grupos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('GrupoSearch', GrupoSearch);\n\n    GrupoSearch.$inject = ['$resource'];\n\n    function GrupoSearch($resource) {\n        var resourceUrl =  'api/_search/grupos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('GrupoController', GrupoController);\n\n    GrupoController.$inject = ['$scope', '$state', 'Grupo', 'GrupoSearch'];\n\n    function GrupoController ($scope, $state, Grupo, GrupoSearch) {\n        var vm = this;\n        \n        vm.grupos = [];\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Grupo.query(function(result) {\n                vm.grupos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            GrupoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.grupos = result;\n            });\n        }    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDialogController', DocumentoDialogController);\n\n    DocumentoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'DataUtils', 'entity', 'Documento', 'Sesion'];\n\n    function DocumentoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, DataUtils, entity, Documento, Sesion) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.clear = clear;\n        vm.byteSize = DataUtils.byteSize;\n        vm.openFile = DataUtils.openFile;\n        vm.save = save;\n        vm.sesions = Sesion.query();\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.documento.id !== null) {\n                Documento.update(vm.documento, onSaveSuccess, onSaveError);\n            } else {\n                Documento.save(vm.documento, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:documentoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n        vm.setArchivo = function ($file, documento) {\n            if ($file) {\n                DataUtils.toBase64($file, function(base64Data) {\n                    $scope.$apply(function() {\n                        documento.archivo = base64Data;\n                        documento.archivoContentType = $file.type;\n                    });\n                });\n            }\n        };\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDetailController', DocumentoDetailController);\n\n    DocumentoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'DataUtils', 'entity', 'Documento', 'Sesion'];\n\n    function DocumentoDetailController($scope, $rootScope, $stateParams, previousState, DataUtils, entity, Documento, Sesion) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.previousState = previousState.name;\n        vm.byteSize = DataUtils.byteSize;\n        vm.openFile = DataUtils.openFile;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:documentoUpdate', function(event, result) {\n            vm.documento = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoDeleteController',DocumentoDeleteController);\n\n    DocumentoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Documento'];\n\n    function DocumentoDeleteController($uibModalInstance, entity, Documento) {\n        var vm = this;\n\n        vm.documento = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Documento.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('documento', {\n            parent: 'entity',\n            url: '/documento',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.documento.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/documento/documentos.html',\n                    controller: 'DocumentoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('documento');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('documento-detail', {\n            parent: 'entity',\n            url: '/documento/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.documento.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/documento/documento-detail.html',\n                    controller: 'DocumentoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('documento');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Documento', function($stateParams, Documento) {\n                    return Documento.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'documento',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('documento-detail.edit', {\n            parent: 'documento-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.new', {\n            parent: 'sesion-detail',\n            url: '/nuevoDocumento',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Sesion', function (Sesion) {\n                            return {\n                                nombre: null,\n                                archivo: null,\n                                archivoContentType: null,\n                                id: null,\n                                sesion: Sesion.get({id : $stateParams.id})\n                            };\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.edit', {\n            parent: 'documento',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-dialog.html',\n                    controller: 'DocumentoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('documento', null, { reload: 'documento' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('documento.delete', {\n            parent: 'sesion-detail',\n            url: '/{idd}/eliminarDocumento',\n            data: {\n                authorities: ['ROLE_ADMIN', 'ROLE_USER']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/documento/documento-delete-dialog.html',\n                    controller: 'DocumentoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Documento', function(Documento) {\n                            return Documento.get({id : $stateParams.idd}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: 'sesion-detail' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Documento', Documento);\n\n    Documento.$inject = ['$resource'];\n\n    function Documento ($resource) {\n        var resourceUrl =  'api/documentos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DocumentoSearch', DocumentoSearch);\n\n    DocumentoSearch.$inject = ['$resource'];\n\n    function DocumentoSearch($resource) {\n        var resourceUrl =  'api/_search/documentos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('DocumentoController', DocumentoController);\n\n    DocumentoController.$inject = ['$scope', '$state', 'DataUtils', 'Documento', 'DocumentoSearch'];\n\n    function DocumentoController ($scope, $state, DataUtils, Documento, DocumentoSearch) {\n        var vm = this;\n        \n        vm.documentos = [];\n        vm.openFile = DataUtils.openFile;\n        vm.byteSize = DataUtils.byteSize;\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Documento.query(function(result) {\n                vm.documentos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            DocumentoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.documentos = result;\n            });\n        }    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDialogController', CargoDialogController);\n\n    CargoDialogController.$inject = ['$timeout', '$scope', '$stateParams', '$uibModalInstance', 'entity', 'Cargo'];\n\n    function CargoDialogController ($timeout, $scope, $stateParams, $uibModalInstance, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.clear = clear;\n        vm.save = save;\n\n        $timeout(function (){\n            angular.element('.form-group:eq(1)>input').focus();\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.cargo.id !== null) {\n                Cargo.update(vm.cargo, onSaveSuccess, onSaveError);\n            } else {\n                Cargo.save(vm.cargo, onSaveSuccess, onSaveError);\n            }\n        }\n\n        function onSaveSuccess (result) {\n            $scope.$emit('reunionsApp:cargoUpdate', result);\n            $uibModalInstance.close(result);\n            vm.isSaving = false;\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDetailController', CargoDetailController);\n\n    CargoDetailController.$inject = ['$scope', '$rootScope', '$stateParams', 'previousState', 'entity', 'Cargo'];\n\n    function CargoDetailController($scope, $rootScope, $stateParams, previousState, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.previousState = previousState.name;\n\n        var unsubscribe = $rootScope.$on('reunionsApp:cargoUpdate', function(event, result) {\n            vm.cargo = result;\n        });\n        $scope.$on('$destroy', unsubscribe);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoDeleteController',CargoDeleteController);\n\n    CargoDeleteController.$inject = ['$uibModalInstance', 'entity', 'Cargo'];\n\n    function CargoDeleteController($uibModalInstance, entity, Cargo) {\n        var vm = this;\n\n        vm.cargo = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n        \n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (id) {\n            Cargo.delete({id: id},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('cargo', {\n            parent: 'entity',\n            url: '/cargo',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.cargo.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/cargo/cargos.html',\n                    controller: 'CargoController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('cargo');\n                    $translatePartialLoader.addPart('global');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('cargo-detail', {\n            parent: 'entity',\n            url: '/cargo/{id}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'reunionsApp.cargo.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/entities/cargo/cargo-detail.html',\n                    controller: 'CargoDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('cargo');\n                    return $translate.refresh();\n                }],\n                entity: ['$stateParams', 'Cargo', function($stateParams, Cargo) {\n                    return Cargo.get({id : $stateParams.id}).$promise;\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'cargo',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('cargo-detail.edit', {\n            parent: 'cargo-detail',\n            url: '/detail/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('^', {}, { reload: false });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('cargo.new', {\n            parent: 'cargo',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                nombre: null,\n                                id: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('cargo');\n                });\n            }]\n        })\n        .state('cargo.edit', {\n            parent: 'cargo',\n            url: '/{id}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-dialog.html',\n                    controller: 'CargoDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('cargo.delete', {\n            parent: 'cargo',\n            url: '/{id}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/entities/cargo/cargo-delete-dialog.html',\n                    controller: 'CargoDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['Cargo', function(Cargo) {\n                            return Cargo.get({id : $stateParams.id}).$promise;\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('cargo', null, { reload: 'cargo' });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('reunionsApp')\n        .factory('Cargo', Cargo);\n\n    Cargo.$inject = ['$resource'];\n\n    function Cargo ($resource) {\n        var resourceUrl =  'api/cargos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    if (data) {\n                        data = angular.fromJson(data);\n                    }\n                    return data;\n                }\n            },\n            'update': { method:'PUT' }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('CargoSearch', CargoSearch);\n\n    CargoSearch.$inject = ['$resource'];\n\n    function CargoSearch($resource) {\n        var resourceUrl =  'api/_search/cargos/:id';\n\n        return $resource(resourceUrl, {}, {\n            'query': { method: 'GET', isArray: true}\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('CargoController', CargoController);\n\n    CargoController.$inject = ['$scope', '$state', 'Cargo', 'CargoSearch'];\n\n    function CargoController ($scope, $state, Cargo, CargoSearch) {\n        var vm = this;\n        \n        vm.cargos = [];\n        vm.search = search;\n        vm.loadAll = loadAll;\n\n        loadAll();\n\n        function loadAll() {\n            Cargo.query(function(result) {\n                vm.cargos = result;\n            });\n        }\n\n        function search () {\n            if (!vm.searchQuery) {\n                return vm.loadAll();\n            }\n            CargoSearch.query({query: vm.searchQuery}, function(result) {\n                vm.cargos = result;\n            });\n        }    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            \n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('characters', characters);\n        \n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n\n(function(){\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils ($filter) {\n\n        var service = {\n            convertDateTimeFromServer : convertDateTimeFromServer,\n            convertLocalDateFromServer : convertLocalDateFromServer,\n            convertLocalDateToServer : convertLocalDateToServer,\n            dateformat : dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer (date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer (date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer (date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat () {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset' ||\n                    $state.current.name === 'home') {\n                    $state.go('home', {}, {reload: true});\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is succesful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'tr': 'Türkçe',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'gl',\n            'en',\n            'es'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('reunionsApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var errorHeader = httpResponse.headers('X-reunionsApp-error');\n                var entityKey = httpResponse.headers('X-reunionsApp-params');\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('reunionsApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('reunionsApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var alertKey = response.headers('X-reunionsApp-alert');\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers('X-reunionsApp-params')});\n            }\n            return response;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('reunionsApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    \n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            // If we have an unauthorized request we redirect to the login page\n            // Don't do this check on the account API to avoid infinite loop\n            if (response.status === 401 && angular.isDefined(response.data.path) && response.data.path.indexOf('/api/account') === -1) {\n                var Auth = $injector.get('Auth');\n                var to = $rootScope.toState;\n                var params = $rootScope.toStateParams;\n                Auth.logout();\n                if (to.name !== 'accessdenied') {\n                    Auth.storePreviousState(to.name, params);\n                }\n                var LoginService = $injector.get('LoginService');\n                LoginService.open();\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precendence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                \n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n                \n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to prefered language \"gl\"');\n                $cookies.putObject(name, 'gl');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('gl');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n        \n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('reunionsApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$location', '$anchorScroll', '$stateParams', '$previousState', 'DataUtils', 'User'];\n\n    function UserManagementDetailController ($location, $anchorScroll, $stateParams, $previousState, DataUtils, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n        vm.exportar = exportar;\n        vm.back = back;\n        vm.predicateParticipaciones = 'sesion.primeraConvocatoria';\n        vm.reverseParticipaciones = false;\n        vm.goUp = function(id) {\n                                  var old = $location.hash();\n                                  $location.hash(id);\n                                  $anchorScroll();\n                                  //reset to old to keep any additional routing logic from kicking in\n                                  $location.hash(old);\n                                  };\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.load($stateParams.login);\n        vm.resumen = User.resumen({ login: $stateParams.login});\n        vm.membresia = User.membresia({ login: $stateParams.login});\n        vm.participaciones = User.participaciones({ login: $stateParams.login});\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n\n        function b64toBlob(b64Data, contentType, sliceSize) {\n          contentType = contentType || '';\n          sliceSize = sliceSize || 512;\n\n          var byteCharacters = atob(b64Data);\n          var byteArrays = [];\n\n          for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n            var byteNumbers = new Array(slice.length);\n            for (var i = 0; i < slice.length; i++) {\n              byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            var byteArray = new Uint8Array(byteNumbers);\n\n            byteArrays.push(byteArray);\n          }\n\n          var blob = new Blob(byteArrays, {type: contentType});\n          return blob;\n        }\n\n        function exportar () {\n            var filename = \"test.xlsx\"\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            var excel = User.excel({login: vm.user.login});\n            excel.$promise.then( function(result) {\n                var file = b64toBlob(result.archivo, result.archivoContentType);\n                //var blobUrl = URL.createObjectURL(blob);\n                var fileURL = window.URL.createObjectURL(file);\n                a.href = fileURL;\n                a.download = filename;\n                a.click();\n            });\n        }\n\n        function back () {\n            $previousState.go();\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'app',\n            url: '/user-management',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/user/:login',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }],\n                previousState: [\"$state\", function ($state) {\n                    var currentStateData = {\n                        name: $state.current.name || 'user-management',\n                        params: $state.params,\n                        url: $state.href($state.current.name, $state.params)\n                    };\n                    return currentStateData;\n                }]\n            }\n        })\n        .state('user-management.new', {\n            parent: 'user-management',\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            parent: 'user-management',\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail.edit', {\n                    parent: 'user-management-detail',\n                    url: '/detail/edit',\n                    data: {\n                        authorities: ['ROLE_ADMIN']\n                    },\n                    onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                        $uibModal.open({\n                            templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                            controller: 'UserManagementDialogController',\n                            controllerAs: 'vm',\n                            backdrop: 'static',\n                            size: 'lg',\n                            resolve: {\n                                entity: ['User', function(User) {\n                                    return User.get({login : $stateParams.login});\n                                }]\n                            }\n                        }).result.then(function() {\n                            $state.go('^', {}, { reload: false });\n                        }, function() {\n                            $state.go('^');\n                        });\n                    }]\n                })\n        .state('user-management.delete', {\n            parent: 'user-management',\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['$location', '$anchorScroll', 'Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'JhiLanguageService'];\n\n    function UserManagementController($location, $anchorScroll, Principal, User, ParseLinks, AlertService, $state, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.loadAll = loadAll;\n        vm.users = [];\n        vm.goUp = function(id) {\n                          var old = $location.hash();\n                          $location.hash(id);\n                          $anchorScroll();\n                          //reset to old to keep any additional routing logic from kicking in\n                          $location.hash(old);\n                          };\n\n        vm.qFn = function(actual, expected) {\n            if (angular.isObject(actual)) return false;\n            function removeAccents(value) {\n              return value.toString().replace(/á/g, 'a').replace(/é/g, 'e').replace(/í/g, 'i').replace(/ó/g, 'o').replace(/ú/g, 'u').replace(/ñ/g, 'n');\n            }\n            actual = removeAccents(angular.lowercase('' + actual));\n            expected = removeAccents(angular.lowercase('' + expected));\n\n            return actual.indexOf(expected) !== -1;\n        }\n\n        vm.loadAll();\n\n//        JhiLanguageService.getAll().then(function (languages) {\n//            vm.languages = languages;\n//        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n//        function setActive (user, isActivated) {\n//            user.activated = isActivated;\n//            User.update(user, function () {\n//                vm.loadAll();\n//                vm.clear();\n//            });\n//        }\n\n        function loadAll () {\n            User.getAll({ }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            //hide anonymous user from user management: it's a required user for Spring Security\n            for (var i in data) {\n                if (data[i]['login'] === 'anonymoususer') {\n                    data.splice(i, 1);\n                }\n            }\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n//        function clear () {\n//            vm.user = {\n//                id: null, login: null, firstName: null, lastName: null, email: null,\n//                activated: null, langKey: null, createdBy: null, createdDate: null,\n//                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n//                resetKey: null, authorities: null\n//            };\n//        }\n//\n//        function loadPage (page) {\n//            vm.page = page;\n//            vm.transition();\n//        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/jhipster/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.cachesStats = {};\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            vm.cachesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n                if (key.indexOf('net.sf.ehcache.Cache') !== -1) {\n                    // remove gets or puts\n                    var index = key.lastIndexOf('.');\n                    var newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    vm.cachesStats[newKey] = {\n                        'name': newKey,\n                        'value': value\n                    };\n                }\n            });\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/jhipster/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('reunionsApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/jhipster/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('sessions', {\n            parent: 'account',\n            url: '/sessions',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.sessions'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/sessions/sessions.html',\n                    controller: 'SessionsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('sessions');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('SessionsController', SessionsController);\n\n    SessionsController.$inject = ['Sessions', 'Principal'];\n\n    function SessionsController (Sessions, Principal) {\n        var vm = this;\n\n        vm.account = null;\n        vm.error = null;\n        vm.invalidate = invalidate;\n        vm.sessions = Sessions.getAll();\n        vm.success = null;\n\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function invalidate (series) {\n            Sessions.delete({series: encodeURIComponent(series)},\n                function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                    vm.sessions = Sessions.getAll();\n                },\n                function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'e-mail address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'e-mail address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n\n/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penality (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penality (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('reunionsApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n(function(){angular.module('reunionsApp').run(['$templateCache', function($templateCache) {$templateCache.put('app/home/home.html','<div ng-cloak><div id=\"my_calendar\" class=\"calendar\" ng-model=\"vm.eventSources\" calendar=\"my_calendar\" ui-calendar=\"vm.calendarConfig.calendar\"></div><div class=\"row\"><div class=\"col-md-4\"></div><div class=\"col-md-8\"><!--<h1 data-translate=\"home.title\">Welcome, Java Hipster!</h1>--><!--<p class=\"lead\" data-translate=\"home.subtitle\">This is your homepage</p>--><!--<div ng-switch=\"vm.isAuthenticated()\">--><!--<div class=\"alert alert-success\" ng-switch-when=\"true\" data-translate=\"home.logged.message\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">--><!--You are logged in as user \"{{vm.account.login}}\".--><!--</div>--><!--<div class=\"alert alert-warning\" ng-switch-when=\"false\" data-translate=\"global.messages.info.authenticated\" translate-compile>--><!--If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").--><!--</div>--><!--<div class=\"alert alert-warning\" ng-switch-when=\"false\" data-translate=\"global.messages.info.register\" translate-compile>--><!--You don\\'t have an account yet? <a class=\"alert-link\" ui-sref=\"register\">Register a new account</a>--><!--</div>--><!--</div>--><!--<p data-translate=\"home.question\">--><!--If you have any question on JHipster:--><!--</p>--><!--<ul>--><!--<li><a href=\"http://jhipster.github.io/\" target=\"_blank\" data-translate=\"home.link.homepage\">JHipster homepage</a></li>--><!--<li><a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\" data-translate=\"home.link.stackoverflow\">JHipster on Stack Overflow</a></li>--><!--<li><a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\" data-translate=\"home.link.bugtracker\">JHipster bug tracker</a></li>--><!--<li><a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" data-translate=\"home.link.chat\">JHipster public chat room</a></li>--><!--<li><a href=\"https://twitter.com/java_hipster\" target=\"_blank\"  data-translate=\"home.link.follow\">follow @java_hipster on Twitter</a></li>--><!--</ul>--><!--<p>--><!--<span data-translate=\"home.like\">If you like JHipster, don\\'t forget to give us a star on </span>&nbsp;<a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" data-translate=\"home.github\">Github</a>!--><!--</p>--></div></div></div>');\n$templateCache.put('app/account/activate/activate.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"activate.title\">Activation</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"activate.messages.success\" translate-compile><strong>Your user has been activated.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"activate.messages.error\"><strong>Your user could not be activated.</strong> Please use the registration form to sign up.</div></div></div></div>');\n$templateCache.put('app/account/password/password.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"password.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Password for [<b>{{vm.account.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"password.messages.success\"><strong>Password changed!</strong></div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"password.messages.error\"><strong>An error has occurred!</strong> The password could not be changed.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.changePassword()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"password.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/account/register/register.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"register.title\">Registration</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"register.messages.success\"><strong>Registration saved!</strong> Please check your email for confirmation.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"register.messages.error.fail\"><strong>Registration failed!</strong> Please try again later.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorUserExists\" data-translate=\"register.messages.error.userexists\"><strong>Login name already registered!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorEmailExists\" data-translate=\"register.messages.error.emailexists\"><strong>E-mail is already in use!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div></div><div class=\"col-md-8 col-md-offset-2\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.register()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"login\" data-translate=\"global.form.username\">Username</label><input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.login\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\" required><div ng-show=\"form.login.$dirty && form.login.$invalid\"><p class=\"help-block\" ng-show=\"form.login.$error.required\" data-translate=\"register.messages.validate.login.required\">Your username is required.</p><p class=\"help-block\" ng-show=\"form.login.$error.minlength\" data-translate=\"register.messages.validate.login.minlength\">Your username is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.login.$error.maxlength\" data-translate=\"register.messages.validate.login.maxlength\">Your username cannot be longer than 50 characters.</p><p class=\"help-block\" ng-show=\"form.login.$error.pattern\" data-translate=\"register.messages.validate.login.pattern\">Your username can only contain lower-case letters and digits.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">E-mail</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your e-mail is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your e-mail is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your e-mail is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your e-mail cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.registerAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"register.form.button\">Register</button></form><p></p><div class=\"alert alert-warning\" data-translate=\"global.messages.info.authenticated\" translate-compile>If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br>- Administrator (login=\"admin\" and password=\"admin\")<br>- User (login=\"user\" and password=\"user\").</div></div></div></div>');\n$templateCache.put('app/account/sessions/sessions.html','<div><h2 data-translate=\"sessions.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Active sessions for [<b>{{vm.account.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"sessions.messages.success\"><strong>Session invalidated!</strong></div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"sessions.messages.error\"><strong>An error has occured!</strong> The session could not be invalidated.</div><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"sessions.table.ipaddress\">IP Address</th><th data-translate=\"sessions.table.useragent\">User agent</th><th data-translate=\"sessions.table.date\">Date</th><th></th></tr></thead><tbody><tr ng-repeat=\"session in vm.sessions\"><td>{{session.ipAddress}}</td><td>{{session.userAgent}}</td><td>{{session.tokenDate | date:\\'longDate\\'}}</td><td><button type=\"submit\" class=\"btn btn-primary\" ng-click=\"vm.invalidate(session.series)\" data-translate=\"sessions.table.button\">Invalidate</button></td></tr></tbody></table></div></div>');\n$templateCache.put('app/account/settings/settings.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"settings.title\" translate-values=\"{username: \\'{{vm.settingsAccount.login}}\\'}\">User settings for [<b>{{vm.settingsAccount.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"settings.messages.success\"><strong>Settings saved!</strong></div><jhi-alert-error></jhi-alert-error><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"firstName\" data-translate=\"settings.form.firstname\">First Name</label><input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"{{\\'settings.form.firstname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.firstName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.firstName.$dirty && form.firstName.$invalid\"><p class=\"help-block\" ng-show=\"form.firstName.$error.required\" data-translate=\"settings.messages.validate.firstname.required\">Your first name is required.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.minlength\" data-translate=\"settings.messages.validate.firstname.minlength\">Your first name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.maxlength\" data-translate=\"settings.messages.validate.firstname.maxlength\">Your first name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"lastName\" data-translate=\"settings.form.lastname\">Last Name</label><input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"{{\\'settings.form.lastname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.lastName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.lastName.$dirty && form.lastName.$invalid\"><p class=\"help-block\" ng-show=\"form.lastName.$error.required\" data-translate=\"settings.messages.validate.lastname.required\">Your last name is required.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.minlength\" data-translate=\"settings.messages.validate.lastname.minlength\">Your last name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.maxlength\" data-translate=\"settings.messages.validate.lastname.maxlength\">Your last name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">E-mail</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required maxlength=\"100\"><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your e-mail is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your e-mail is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your e-mail is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your e-mail cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label for=\"langKey\" data-translate=\"settings.form.language\">Language</label><select id=\"langKey\" name=\"langKey\" class=\"form-control\" ng-model=\"vm.settingsAccount.langKey\" ng-controller=\"JhiLanguageController as languageVm\" ng-options=\"code as (code | findLanguageFromKey) for code in languageVm.languages\"></select></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"settings.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/admin/audits/audits.html','<div><h2 data-translate=\"audits.title\">Audits</h2><div class=\"row\"><div class=\"col-md-5\"><h4 data-translate=\"audits.filter.title\">Filter by date</h4><p class=\"input-group\"><span class=\"input-group-addon\" data-translate=\"audits.filter.from\">from</span> <input type=\"date\" class=\"input-sm form-control\" name=\"start\" ng-model=\"vm.fromDate\" ng-change=\"vm.onChangeDate()\" required> <span class=\"input-group-addon\" data-translate=\"audits.filter.to\">to</span> <input type=\"date\" class=\"input-sm form-control\" name=\"end\" ng-model=\"vm.toDate\" ng-change=\"vm.onChangeDate()\" required></p></div></div><table class=\"table table-condensed table-striped table-bordered table-responsive\"><thead><tr><th ng-click=\"predicate = \\'timestamp\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.date\">Date</span></th><th ng-click=\"predicate = \\'principal\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.principal\">User</span></th><th ng-click=\"predicate = \\'type\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.status\">State</span></th><th ng-click=\"predicate = \\'data.message\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.data\">Extra data</span></th></tr></thead><tr ng-repeat=\"audit in vm.audits | filter:filter | orderBy:predicate:reverse\" ng-hide=\"audit.filtered\"><td><span>{{audit.timestamp| date:\\'medium\\'}}</span></td><td><small>{{audit.principal}}</small></td><td>{{audit.type}}</td><td><span ng-show=\"audit.data.message\">{{audit.data.message}}</span> <span ng-show=\"audit.data.remoteAddress\"><span data-translate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span></td></tr></table><div class=\"text-center\"><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.loadPage(vm.page)\"></uib-pagination></div></div>');\n$templateCache.put('app/admin/configuration/configuration.html','<div><h2 data-translate=\"configuration.title\">Configuration</h2><span data-translate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><label ng-hide=\"filteredConfig.length == 0\">Spring configuration</label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filteredConfig.length == 0\"><thead><tr><th ng-click=\"predicate = \\'prefix\\'; reverse=!reverse\" class=\"col-sm-4\"><span data-translate=\"configuration.table.prefix\">Prefix</span></th><th data-translate=\"configuration.table.properties\" class=\"col-sm-8\">Properties</th></tr></thead><tr ng-repeat=\"entry in filtered = (vm.configuration | filter:filter | orderBy:predicate:reverse)\"><td><span>{{entry.prefix}}</span></td><td><div class=\"row\" ng-repeat=\"(key, value) in entry.properties\"><div class=\"col-md-4\">{{key}}</div><div class=\"col-md-8\"><span class=\"pull-right label label-default break\">{{value}}</span></div></div></td></tr></table><div ng-repeat=\"(key, value) in vm.allConfiguration\"><label ng-hide=\"filtered.length == 0\"><span>{{key}}</span></label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filtered.length == 0\"><thead><tr><th class=\"col-sm-4\">Property</th><th class=\"col-sm-8\">Value</th></tr></thead><tbody><tr ng-repeat=\"item in filtered = (value | filter:filter)\"><td class=\"break\">{{item.key}}</td><td class=\"break\"><span class=\"pull-right label label-default break\">{{item.val}}</span></td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/docs/docs.html','<iframe src=\"swagger-ui/index.html\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" width=\"100%\" height=\"900\" scrolling=\"auto\" target=\"_top\"></iframe>');\n$templateCache.put('app/admin/health/health.html','<div><h2 data-translate=\"health.title\">Health Checks</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"health.refresh.button\">Refresh</span></button></p><table id=\"healthCheck\" class=\"table table-striped\"><thead><tr><th class=\"col-md-7\" data-translate=\"health.table.service\">Service Name</th><th class=\"col-md-2 text-center\" data-translate=\"health.table.status\">Status</th><th class=\"col-md-2 text-center\" data-translate=\"health.details.details\">Details</th></tr></thead><tbody><tr ng-repeat=\"health in vm.healthData\"><td>{{\\'health.indicator.\\' + vm.baseName(health.name) | translate}} {{vm.subSystemName(health.name)}}</td><td class=\"text-center\"><span class=\"label\" ng-class=\"vm.getLabelClass(health.status)\">{{\\'health.status.\\' + health.status | translate}}</span></td><td class=\"text-center\"><a class=\"hand\" ng-click=\"vm.showHealth(health)\" ng-show=\"health.details || health.error\"><i class=\"glyphicon glyphicon-eye-open\"></i></a></td></tr></tbody></table></div>');\n$templateCache.put('app/admin/health/health.modal.html','<div class=\"modal-header\"><button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" ng-click=\"vm.cancel()\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"showHealthLabel\">{{\\'health.indicator.\\' + vm.baseName(vm.currentHealth.name) | translate}} {{vm.subSystemName(vm.currentHealth.name)}}</h4></div><div class=\"modal-body pad\"><div ng-show=\"vm.currentHealth.details\"><h4 data-translate=\"health.details.properties\">Properties</h4><table class=\"table table-striped\"><thead><tr><th class=\"col-md-6 text-left\" data-translate=\"health.details.name\">Name</th><th class=\"col-md-6 text-left\" data-translate=\"health.details.value\">Value</th></tr></thead><tbody><tr ng-repeat=\"(k,v) in vm.currentHealth.details\"><td class=\"col-md-6 text-left\">{{k}}</td><td class=\"col-md-6 text-left\">{{v}}</td></tr></tbody></table></div><div ng-show=\"vm.currentHealth.error\"><h4 data-translate=\"health.details.error\">Error</h4><pre>{{vm.currentHealth.error}}</pre></div></div><div class=\"modal-footer\"><button data-dismiss=\"modal\" class=\"btn btn-default pull-left\" type=\"button\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/logs/logs.html','<div class=\"table-responsive\"><h2 data-translate=\"logs.title\">Logs</h2><p data-translate=\"logs.nbloggers\" translate-values=\"{total: \\'{{ vm.loggers.length }}\\'}\">There are {{ vm.loggers.length }} loggers.</p><span data-translate=\"logs.filter\">Filter</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><table class=\"table table-condensed table-striped table-bordered\"><thead><tr title=\"click to order\"><th ng-click=\"predicate = \\'name\\'; reverse=!reverse\"><span data-translate=\"logs.table.name\">Name</span></th><th ng-click=\"predicate = \\'level\\'; reverse=!reverse\"><span data-translate=\"logs.table.level\">Level</span></th></tr></thead><tr ng-repeat=\"logger in vm.loggers | filter:filter | orderBy:predicate:reverse\"><td><small>{{logger.name | characters:140}}</small></td><td><button ng-click=\"vm.changeLevel(logger.name, \\'TRACE\\')\" ng-class=\"(logger.level==\\'TRACE\\') ? \\'btn-danger\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">TRACE</button> <button ng-click=\"vm.changeLevel(logger.name, \\'DEBUG\\')\" ng-class=\"(logger.level==\\'DEBUG\\') ? \\'btn-warning\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">DEBUG</button> <button ng-click=\"vm.changeLevel(logger.name, \\'INFO\\')\" ng-class=\"(logger.level==\\'INFO\\') ? \\'btn-info\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">INFO</button> <button ng-click=\"vm.changeLevel(logger.name, \\'WARN\\')\" ng-class=\"(logger.level==\\'WARN\\') ? \\'btn-success\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">WARN</button> <button ng-click=\"vm.changeLevel(logger.name, \\'ERROR\\')\" ng-class=\"(logger.level==\\'ERROR\\') ? \\'btn-primary\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">ERROR</button></td></tr></table></div>');\n$templateCache.put('app/admin/metrics/metrics.html','<div><h2 data-translate=\"metrics.title\">Application Metrics</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"metrics.refresh.button\">Refresh</span></button></p><h3 data-translate=\"metrics.jvm.title\">JVM Metrics</h3><div class=\"row\" ng-hide=\"vm.updatingMetrics\"><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.memory.title\">Memory</b><p><span data-translate=\"metrics.jvm.memory.total\">Total Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.total.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.total.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.total.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{vm.metrics.gauges[\\'jvm.threads.count\\'].value}}) <a class=\"hand\" ng-click=\"vm.refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"glyphicon glyphicon-eye-open\"></i></a><p><span data-translate=\"metrics.jvm.threads.runnable\">Runnable</span> {{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value}}</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.gc.title\">Garbage collections</b><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.time\\'].value}}ms</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.time\\'].value}}ms</div></div></div></div><div class=\"well well-lg\" ng-show=\"vm.updatingMetrics\" data-translate=\"metrics.updating\">Updating...</div><h3 data-translate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3><p><span data-translate=\"metrics.jvm.http.active\">Active requests</span> <b>{{vm.metrics.counters[\\'com.codahale.metrics.servlet.InstrumentedFilter.activeRequests\\'].count | number:0}}</b> - <span data-translate=\"metrics.jvm.http.total\">Total requests</span> <b>{{vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}</b></p><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.jvm.http.table.code\">Code</th><th data-translate=\"metrics.jvm.http.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.http.table.mean\">Mean</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th></tr></thead><tbody><tr><td data-translate=\"metrics.jvm.http.code.ok\">OK</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.notfound\">Not Found</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.servererror\">Server error</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m15_rate | number:2}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.servicesstats.table.name\">Service name</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.max\">Max</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.servicesStats\"><td>{{k}}</td><td class=\"text-right\">{{v.count}}</td><td class=\"text-right\">{{v.mean * 1000 | number:0}}</td><td class=\"text-right\">{{v.min * 1000 | number:0}}</td><td class=\"text-right\">{{v.p50 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p75 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p95 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p99 * 1000 | number:0}}</td><td class=\"text-right\">{{v.max * 1000 | number:0}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.ehcache.title\">Ehcache statistics</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.ehcache.cachename\">Cache name</th><th class=\"text-right\" data-translate=\"metrics.ehcache.objects\">Objects</th><th class=\"text-right\" data-translate=\"metrics.ehcache.hits\">Hits</th><th class=\"text-right\" data-translate=\"metrics.ehcache.misses\">Misses</th><th class=\"text-right\" data-translate=\"metrics.ehcache.evictioncount\">Eviction count</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.cachesStats\" ng-once><td>{{v.name}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.objects\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.hits\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.misses\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.eviction-count\\'].value}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.datasource.title\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">DataSource statistics (time in millisecond)</h3><div class=\"table-responsive\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\"><table class=\"table table-striped\"><thead><tr><th><span data-translate=\"metrics.datasource.usage\">Usage</span> ({{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value}} / {{vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value}})</th><th class=\"text-right\" data-translate=\"metrics.datasource.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.datasource.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.datasource.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.datasource.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.datasource.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.datasource.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.datasource.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.datasource.max\">Max</th></tr></thead><tbody><tr><td><div class=\"progress progress-striped\"><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value\" value=\"vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value * 100 / vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value | number:0}}%</span></uib-progressbar></div></td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].count}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].mean | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].min | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p50 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p75 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p95 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p99 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].max | number:2}}</td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/metrics/metrics.modal.html','<!-- Modal used to display the threads dump --><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"metrics.jvm.threads.dump.title\">Threads dump</h4></div><div class=\"modal-body pad\"><span class=\"label label-primary\" ng-click=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge\">{{vm.threadDumpAll}}</span></span>&nbsp; <span class=\"label label-success\" ng-click=\"threadDumpFilter = {threadState: \\'RUNNABLE\\'}\">Runnable&nbsp;<span class=\"badge\">{{vm.threadDumpRunnable}}</span></span>&nbsp; <span class=\"label label-info\" ng-click=\"threadDumpFilter = {threadState: \\'WAITING\\'}\">Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpWaiting}}</span></span>&nbsp; <span class=\"label label-warning\" ng-click=\"threadDumpFilter = {threadState: \\'TIMED_WAITING\\'}\">Timed Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpTimedWaiting}}</span></span>&nbsp; <span class=\"label label-danger\" ng-click=\"threadDumpFilter = {threadState: \\'BLOCKED\\'}\">Blocked&nbsp;<span class=\"badge\">{{vm.threadDumpBlocked}}</span></span>&nbsp;<div class=\"voffset2\">&nbsp;</div>Filter <input type=\"text\" ng-model=\"threadDumpFilter\" class=\"form-control\"><div class=\"row pad\" ng-repeat=\"(k, v) in vm.threadDump | filter:threadDumpFilter\"><h5><span class=\"label\" ng-class=\"vm.getLabelClass(v.threadState)\">{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click=\"show = !show\"><span ng-show=\"!show\" data-translate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span> <span ng-show=\"show\" data-translate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span></a></h5><div class=\"well\" ng-show=\"show\"><div ng-repeat=\"(stK, stV) in v.stackTrace\">{{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=\"voffset1\"></span></div></div><table class=\"table table-condensed\"><thead><tr><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th><th data-translate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th></tr></thead><tbody><tr><td>{{v.blockedTime}}</td><td>{{v.blockedCount}}</td><td>{{v.waitedTime}}</td><td>{{v.waitedCount}}</td><td>{{v.lockName}}</td></tr></tbody></table></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/user-management/user-management-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.user.login)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"userManagement.delete.question\" translate-values=\"{login: \\'{{vm.user.login}}\\'}\">Are you sure you want to delete this User?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management-detail.html','<div><h2><span data-translate=\"userManagement.detail.title\">User</span> \"{{vm.user.login}}\"</h2><dl class=\"dl-horizontal\"><dt><span data-translate=\"userManagement.login\">Login</span></dt><dd><span>{{vm.user.login}}</span></dd><dt><span data-translate=\"userManagement.firstName\">First Name</span></dt><dd>{{vm.user.firstName}}</dd><dt><span data-translate=\"userManagement.lastName\">Last Name</span></dt><dd>{{vm.user.lastName}}</dd><dt><span data-translate=\"userManagement.email\">Email</span></dt><dd>{{vm.user.email}}</dd></dl><br><h3><span data-translate=\"userManagement.detail.organosActuales\" id=\"organosActuales\">\\xD3rganos actuales</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-8 no-padding-left\"></div><div class=\"col-xs-4 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"qo\" id=\"searchOrgano\" class=\"form-control\" placeholder=\"{{ \\'userManagement.search\\' | translate }}\"></div></form></div></div></div><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicateOrganos\" ascending=\"vm.reverseOrganos\"><th jh-sort-by=\"organo.nombre|noAccents\"><span data-translate=\"userManagement.detail.organo\">\\xD3rgano</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre|noAccents\"><span data-translate=\"userManagement.detail.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaAlta\"><span data-translate=\"userManagement.detail.fechaAlta\">Fecha Alta</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones|noAccents\"><span data-translate=\"userManagement.detail.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th></tr></thead><tbody><tr dir-paginate=\"miembro in vm.membresia | orderBy:vm.predicateOrganos:!vm.reverseOrganos | filter:qo:vm.qFn | itemsPerPage: 10\" pagination-id=\"organos\"><td><a ui-sref=\"organo-detail({id:miembro.organo.id})\">{{miembro.organo.nombre}}</a></td><td>{{miembro.cargo.nombre}}</td><td>{{miembro.fechaAlta | date:\\'mediumDate\\'}}</td><td>{{miembro.observaciones}}</td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls pagination-id=\"organos\" on-page-change=\"vm.goUp(\\'organosActuales\\')\"></dir-pagination-controls></div><h3><span data-translate=\"userManagement.detail.participaciones\" id=\"participaciones\">Participaciones</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-8 no-padding-left\"></div><div class=\"col-xs-4 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"qp\" id=\"searchParticipacion\" class=\"form-control\" placeholder=\"{{ \\'userManagement.search\\' | translate }}\"></div></form></div></div></div><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicateParticipaciones\" ascending=\"vm.reverseParticipaciones\"><th jh-sort-by=\"sesion.organo.nombre|noAccents\"><span data-translate=\"userManagement.detail.organo\">\\xD3rgano</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"sesion.numero\"><span data-translate=\"userManagement.detail.numero\">Numero</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"sesion.primeraConvocatoria\"><span data-translate=\"userManagement.detail.primeraConvocatoria\">Primera Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"sesion.segundaConvocatoria\"><span data-translate=\"userManagement.detail.segundaConvocatoria\">Segunda Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"sesion.lugar|noAccents\"><span data-translate=\"userManagement.detail.lugar\">Lugar</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre|noAccents\"><span data-translate=\"userManagement.detail.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"asistencia|noAccents\"><span data-translate=\"userManagement.detail.asistencia\">Asistencia</span> <span class=\"glyphicon glyphicon-sort\"></span></th></tr></thead><tbody><tr dir-paginate=\"participante in vm.participaciones | orderBy:vm.predicateParticipaciones:!vm.reverseParticipaciones | filter:qp | itemsPerPage: 5\" pagination-id=\"participaciones\"><td><a ui-sref=\"organo-detail({id:sesion.organo.id})\">{{participante.sesion.organo.nombre}}</a></td><td><a ui-sref=\"sesion-detail({id:sesion.id})\">{{participante.sesion.numero}}</a></td><td>{{participante.sesion.primeraConvocatoria | date:\\'medium\\'}}</td><td>{{participante.sesion.segundaConvocatoria | date:\\'medium\\'}}</td><td>{{participante.sesion.lugar}}</td><td>{{participante.cargo.nombre}}</td><td>{{participante.asistencia}}</td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls pagination-id=\"participaciones\" on-page-change=\"vm.goUp(\\'participaciones\\')\"></dir-pagination-controls></div><h3><span data-translate=\"userManagement.resumen\" id=\"titulo\">Cuadro resumen</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-8 no-padding-left\"><button class=\"btn btn-info\" ng-click=\"vm.exportar()\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"userManagement.exportar\">Exportar resumen</span></button></div><div class=\"col-xs-4 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"q\" id=\"search\" class=\"form-control\" placeholder=\"{{ \\'userManagement.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\"><th jh-sort-by=\"curso\"><span data-translate=\"userManagement.curso\">Curso</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"organo.nombre|noAccents\"><span data-translate=\"userManagement.organo\">\\xD3rgano</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"convocado\"><span data-translate=\"userManagement.convocado\">Convocado</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"asiste\"><span data-translate=\"userManagement.asiste\">Asiste</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"falta\"><span data-translate=\"userManagement.falta\">Falta</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"disculpa\"><span data-translate=\"userManagement.disculpa\">Disculpa</span> <span class=\"glyphicon glyphicon-sort\"></span></th></tr></thead><tbody><tr dir-paginate=\"linea in vm.resumen | orderBy:vm.predicate:!vm.reverse | filter:q:vm.qFn | itemsPerPage: 20\"><td>{{linea.curso}}</td><td><a ui-sref=\"organo-detail({id:linea.organo.id})\">{{linea.organo.nombre}}</a></td><td>{{linea.convocado}}</td><td>{{linea.asiste}}</td><td>{{linea.falta}}</td><td>{{linea.disculpa}}</td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls on-page-change=\"vm.goUp(\\'titulo\\')\"></dir-pagination-controls></div><button type=\"submit\" ng-click=\"vm.back()\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"user-management-detail.edit({login:vm.user.login})\" class=\"btn btn-primary\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/admin/user-management/user-management-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myUserLabel\" data-translate=\"userManagement.home.createOrEditLabel\">Create or edit a User</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" name=\"id\" ng-model=\"vm.user.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.login\">Login</label><input type=\"text\" class=\"form-control\" name=\"login\" ng-model=\"vm.user.login\" ng-required=\"vm.user.id == null\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\"><div ng-show=\"editForm.login.$invalid\"><p class=\"help-block\" ng-show=\"editForm.login.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.login.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.firstName\">First Name</label><input type=\"text\" class=\"form-control\" name=\"firstName\" ng-model=\"vm.user.firstName\" ng-maxlength=\"50\"><div ng-show=\"editForm.firstName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.firstName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label data-translate=\"userManagement.lastName\">Last Name</label><input type=\"text\" class=\"form-control\" name=\"lastName\" ng-model=\"vm.user.lastName\" ng-maxlength=\"50\"><div ng-show=\"editForm.lastName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.lastName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.email\">Email</label><input type=\"email\" class=\"form-control\" name=\"email\" ng-model=\"vm.user.email\" required ng-maxlength=\"100\"><div ng-show=\"editForm.email.$invalid\"><p class=\"help-block\" ng-show=\"editForm.email.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"100\">This field cannot be longer than 100 characters.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your e-mail is invalid.</p></div></div><div class=\"form-group\"><label for=\"activated\"><input ng-disabled=\"vm.user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" ng-model=\"vm.user.activated\"> <span data-translate=\"userManagement.activated\">Activated</span></label></div><div class=\"form-group\"><label data-translate=\"userManagement.langKey\">Lang Key</label><select class=\"form-control\" name=\"langKey\" ng-model=\"vm.user.langKey\" ng-options=\"language as language for language in vm.languages track by language\"></select></div><div class=\"form-group\"><label data-translate=\"userManagement.profiles\">Profiles</label><select class=\"form-control\" multiple=\"multiple\" name=\"authority\" ng-model=\"vm.user.authorities\" ng-options=\"authority for authority in vm.authorities\"></select></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management.html','<div><h2 data-translate=\"userManagement.home.title\" id=\"titulo\">Users</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"user-management.new\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"userManagement.home.createLabel\">Create new User</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"q\" id=\"search\" class=\"form-control\" placeholder=\"{{ \\'userManagement.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"userManagement.lastName\">Last name</span>, <span data-translate=\"userManagement.firstName\">First name</span></th><th></th></tr></thead><tbody><tr dir-paginate=\"user in vm.users | orderBy:\\'(lastName|noAccents)\\':false | filter:q:vm.qFn | itemsPerPage: 15\"><td><a ui-sref=\"user-management-detail({login:user.login})\">{{user.lastName}}, {{user.firstName}}</a></td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"user-management-detail({login:user.login})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"user-management.edit({login:user.login})\" class=\"btn btn-primary btn-sm\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"user-management.delete({login:user.login})\" class=\"btn btn-danger btn-sm\" ng-disabled=\"vm.currentAccount.login==user.login\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls on-page-change=\"vm.goUp(\\'titulo\\')\"></dir-pagination-controls></div></div>');\n$templateCache.put('app/components/login/login.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"login.title\">Sign in</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"login.title\">Sign in</h1></div><div class=\"col-md-8 col-md-offset-2\"><div class=\"alert alert-danger\" ng-show=\"vm.authenticationError\" data-translate=\"login.messages.error.authentication\"><strong>Failed to sign in!</strong> Please check your credentials and try again.</div></div><div class=\"col-md-8 col-md-offset-2\"><form class=\"form\" role=\"form\" ng-submit=\"vm.login($event)\"><div class=\"form-group\"><label for=\"username\" data-translate=\"global.form.username\">Login</label><input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.username\"></div><div class=\"form-group\"><label for=\"password\" data-translate=\"login.form.password\">Password</label><input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"{{\\'login.form.password.placeholder\\' | translate}}\" ng-model=\"vm.password\"></div><div class=\"form-group\"><label for=\"rememberMe\"><input type=\"checkbox\" id=\"rememberMe\" ng-model=\"vm.rememberMe\" checked=\"checked\"> <span data-translate=\"login.form.rememberme\">Remember me</span></label></div><button type=\"submit\" class=\"btn btn-primary\" data-translate=\"login.form.button\">Sign in</button></form><p></p><div class=\"alert alert-warning\"><a class=\"alert-link\" href=\"\" ng-click=\"vm.requestResetPassword()\" data-translate=\"login.password.forgot\">Did you forget your password?</a></div><div class=\"alert alert-warning\" data-translate=\"global.messages.info.register\" translate-compile>You don\\'t have an account yet? <a class=\"alert-link\" href=\"\" ng-click=\"vm.register()\">Register a new account</a></div></div></div></div>');\n$templateCache.put('app/entities/cargo/cargo-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.cargo.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.cargo.delete.question\" translate-values=\"{id: \\'{{vm.cargo.nombre}}\\'}\">Are you sure you want to delete this Cargo?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/cargo/cargo-detail.html','<div><h2><span data-translate=\"reunionsApp.cargo.detail.title\">Cargo</span> {{vm.cargo.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.cargo.nombre\">Nombre</span></dt><dd><span>{{vm.cargo.nombre}}</span></dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"cargo-detail.edit({id:vm.cargo.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/cargo/cargo-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myCargoLabel\" data-translate=\"reunionsApp.cargo.home.createOrEditLabel\">Create or edit a Cargo</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.cargo.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.cargo.nombre\" for=\"field_nombre\">Nombre</label><input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"field_nombre\" ng-model=\"vm.cargo.nombre\" required><div ng-show=\"editForm.nombre.$invalid\"><p class=\"help-block\" ng-show=\"editForm.nombre.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/cargo/cargos.html','<div><h2 data-translate=\"reunionsApp.cargo.home.title\">Cargos</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"cargo.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.cargo.home.createLabel\">Create new Cargo</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.cargo.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"global.field.id\">ID</span></th><th><span data-translate=\"reunionsApp.cargo.nombre\">Nombre</span></th><th></th></tr></thead><tbody><tr ng-repeat=\"cargo in vm.cargos track by cargo.id\"><td><a ui-sref=\"cargo-detail({id:cargo.id})\">{{cargo.id}}</a></td><td>{{cargo.nombre}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"cargo-detail({id:cargo.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"cargo.edit({id:cargo.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"cargo.delete({id:cargo.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div></div>');\n$templateCache.put('app/entities/documento/documento-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.documento.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.documento.delete.question\" translate-values=\"{id: \\'{{vm.documento.nombre}}\\'}\">Are you sure you want to delete this Documento?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/documento/documento-detail.html','<div><h2><span data-translate=\"reunionsApp.documento.detail.title\">Documento</span> {{vm.documento.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.documento.nombre\">Nombre</span></dt><dd><span>{{vm.documento.nombre}}</span></dd><dt><span data-translate=\"reunionsApp.documento.archivo\">Archivo</span></dt><dd><div ng-if=\"vm.documento.archivo\"><a ng-click=\"vm.openFile(vm.documento.archivoContentType, vm.documento.archivo)\" data-translate=\"entity.action.open\">open</a> {{vm.documento.archivoContentType}}, {{vm.byteSize(vm.documento.archivo)}}</div></dd><dt><span data-translate=\"reunionsApp.documento.sesion\">Sesion</span></dt><dd><a ui-sref=\"sesion-detail({id:vm.documento.sesion.id})\">{{vm.documento.sesion.numero}}</a></dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"documento-detail.edit({id:vm.documento.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/documento/documento-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myDocumentoLabel\" data-translate=\"reunionsApp.documento.home.createOrEditLabel\">Create or edit a Documento</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.documento.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.documento.nombre\" for=\"field_nombre\">Nombre</label><input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"field_nombre\" ng-model=\"vm.documento.nombre\" required><div ng-show=\"editForm.nombre.$invalid\"><p class=\"help-block\" ng-show=\"editForm.nombre.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\" ngf-drop ngf-change=\"vm.setArchivo($file, vm.documento)\"><label class=\"control-label\" data-translate=\"reunionsApp.documento.archivo\" for=\"field_archivo\">Archivo</label><div><div ng-if=\"vm.documento.archivo\" class=\"help-block clearfix\"><a class=\"pull-left\" ng-click=\"vm.openFile(vm.documento.archivoContentType, vm.documento.archivo)\" data-translate=\"entity.action.open\">open</a><br><span class=\"pull-left\">{{vm.documento.archivoContentType}}, {{vm.byteSize(vm.documento.archivo)}}</span> <button type=\"button\" ng-click=\"vm.documento.archivo=null;vm.documento.archivoContentType=null;\" class=\"btn btn-default btn-xs pull-right\"><span class=\"glyphicon glyphicon-remove\"></span></button></div><button type=\"button\" ngf-select class=\"btn btn-default btn-block\" ngf-change=\"vm.setArchivo($file, vm.documento)\" data-translate=\"entity.action.addblob\">Add blob</button></div><input type=\"hidden\" class=\"form-control\" name=\"archivo\" id=\"field_archivo\" ng-model=\"vm.documento.archivo\" required> <input type=\"hidden\" class=\"form-control\" name=\"archivoContentType\" id=\"field_archivoContentType\" ng-model=\"vm.documento.archivoContentType\"><div ng-show=\"editForm.archivo.$invalid\"><p class=\"help-block\" ng-show=\"editForm.archivo.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\"><label data-translate=\"reunionsApp.documento.sesion\" for=\"field_sesion\">Sesion</label><select disabled=\"disabled\" class=\"form-control\" id=\"field_sesion\" name=\"sesion\" ng-model=\"vm.documento.sesion\" ng-options=\"sesion as sesion.numero for sesion in vm.sesions track by sesion.id\" required><option value=\"\"></option></select></div><div ng-show=\"editForm.sesion.$invalid\"><p class=\"help-block\" ng-show=\"editForm.sesion.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/documento/documentos.html','<div><h2 data-translate=\"reunionsApp.documento.home.title\">Documentos</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"documento.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.documento.home.createLabel\">Create new Documento</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.documento.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"global.field.id\">ID</span></th><th><span data-translate=\"reunionsApp.documento.nombre\">Nombre</span></th><th><span data-translate=\"reunionsApp.documento.archivo\">Archivo</span></th><th><span data-translate=\"reunionsApp.documento.sesion\">Sesion</span></th><th></th></tr></thead><tbody><tr ng-repeat=\"documento in vm.documentos track by documento.id\"><td><a ui-sref=\"documento-detail({id:documento.id})\">{{documento.id}}</a></td><td>{{documento.nombre}}</td><td><a ng-if=\"documento.archivo\" ng-click=\"vm.openFile(documento.archivoContentType, documento.archivo)\" data-translate=\"entity.action.open\">open</a> <span ng-if=\"documento.archivo\">{{documento.archivoContentType}}, {{vm.byteSize(documento.archivo)}}</span></td><td><a ui-sref=\"sesion-detail({id:documento.sesion.id})\">{{documento.sesion.numero}}</a></td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"documento-detail({id:documento.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"documento.edit({id:documento.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"documento.delete({id:documento.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div></div>');\n$templateCache.put('app/entities/grupo/grupo-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.grupo.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.grupo.delete.question\" translate-values=\"{id: \\'{{vm.grupo.id}}\\'}\">Are you sure you want to delete this Grupo?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/grupo/grupo-detail.html','<div><h2><span data-translate=\"reunionsApp.grupo.detail.title\">Grupo</span> {{vm.grupo.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.grupo.nombre\">Nombre</span></dt><dd><span>{{vm.grupo.nombre}}</span></dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"grupo-detail.edit({id:vm.grupo.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/grupo/grupo-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myGrupoLabel\" data-translate=\"reunionsApp.grupo.home.createOrEditLabel\">Create or edit a Grupo</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.grupo.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.grupo.nombre\" for=\"field_nombre\">Nombre</label><input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"field_nombre\" ng-model=\"vm.grupo.nombre\" required><div ng-show=\"editForm.nombre.$invalid\"><p class=\"help-block\" ng-show=\"editForm.nombre.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/grupo/grupos.html','<div><h2 data-translate=\"reunionsApp.grupo.home.title\">Grupos</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"grupo.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.grupo.home.createLabel\">Create new Grupo</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.grupo.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"global.field.id\">ID</span></th><th><span data-translate=\"reunionsApp.grupo.nombre\">Nombre</span></th><th></th></tr></thead><tbody><tr ng-repeat=\"grupo in vm.grupos track by grupo.id\"><td><a ui-sref=\"grupo-detail({id:grupo.id})\">{{grupo.id}}</a></td><td>{{grupo.nombre}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"grupo-detail({id:grupo.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"grupo.edit({id:grupo.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"grupo.delete({id:grupo.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div></div>');\n$templateCache.put('app/entities/miembro/miembro-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.miembro.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.miembro.delete.question\" translate-values=\"{id: \\'{{vm.miembro.user.login}}\\'}\">Are you sure you want to delete this Miembro?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/miembro/miembro-detail.html','<div><h2><span data-translate=\"reunionsApp.miembro.detail.title\">Miembro</span> {{vm.miembro.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.miembro.fechaAlta\">Fecha Alta</span></dt><dd><span>{{vm.miembro.fechaAlta | date:\\'mediumDate\\'}}</span></dd><dt><span data-translate=\"reunionsApp.miembro.fechaBaja\">Fecha Baja</span></dt><dd><span>{{vm.miembro.fechaBaja | date:\\'mediumDate\\'}}</span></dd><dt><span data-translate=\"reunionsApp.miembro.observaciones\">Observaciones</span></dt><dd><span>{{vm.miembro.observaciones}}</span></dd><dt><span data-translate=\"reunionsApp.miembro.organo\">Organo</span></dt><dd><a ui-sref=\"organo-detail({id:vm.miembro.organo.id})\">{{vm.miembro.organo.nombre}}</a></dd><dt><span data-translate=\"reunionsApp.miembro.cargo\">Cargo</span></dt><dd><a ui-sref=\"cargo-detail({id:vm.miembro.cargo.id})\">{{vm.miembro.cargo.nombre}}</a></dd><dt><span data-translate=\"reunionsApp.miembro.user\">User</span></dt><dd>{{vm.miembro.user.login}}</dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"miembro-detail.edit({id:vm.miembro.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/miembro/miembro-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myMiembroLabel\" data-translate=\"reunionsApp.miembro.home.createOrEditLabel\">Create or edit a Miembro</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.miembro.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.miembro.fechaAlta\" for=\"field_fechaAlta\">Fecha Alta</label><div class=\"input-group\"><input id=\"field_fechaAlta\" disabled=\"true\" type=\"text\" class=\"form-control\" name=\"fechaAlta\" uib-datepicker-popup=\"{{dateformat}}\" ng-model=\"vm.miembro.fechaAlta\" is-open=\"vm.datePickerOpenStatus.fechaAlta\" required> <span class=\"input-group-btn\"><button type=\"button\" disabled=\"true\" class=\"btn btn-default\" ng-click=\"vm.openCalendar(\\'fechaAlta\\')\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div><div ng-show=\"editForm.fechaAlta.$invalid\"><p class=\"help-block\" ng-show=\"editForm.fechaAlta.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\" hidden><label class=\"control-label\" data-translate=\"reunionsApp.miembro.fechaBaja\" for=\"field_fechaBaja\">Fecha Baja</label><div class=\"input-group\"><input id=\"field_fechaBaja\" disabled=\"disabled\" type=\"text\" class=\"form-control\" name=\"fechaBaja\" uib-datepicker-popup=\"{{dateformat}}\" ng-model=\"vm.miembro.fechaBaja\" is-open=\"vm.datePickerOpenStatus.fechaBaja\"> <span class=\"input-group-btn\"><button type=\"button\" disabled=\"disabled\" class=\"btn btn-default\" ng-click=\"vm.openCalendar(\\'fechaBaja\\')\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.miembro.observaciones\" for=\"field_observaciones\">Observaciones</label><input type=\"text\" class=\"form-control\" name=\"observaciones\" id=\"field_observaciones\" ng-model=\"vm.miembro.observaciones\"></div><div class=\"form-group\"><label data-translate=\"reunionsApp.miembro.organo\" for=\"field_organo\">Organo</label><select class=\"form-control\" id=\"field_organo\" name=\"organo\" ng-model=\"vm.miembro.organo\" disabled=\"disabled\" required><option label=\"{{vm.miembro.organo.nombre}}\" value=\"{{vm.miembro.organo.id}}\" selected=\"selected\">{{vm.miembro.organo.nombre}}</option></select></div><div ng-show=\"editForm.organo.$invalid\"><p class=\"help-block\" ng-show=\"editForm.organo.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div><div class=\"form-group\"><label data-translate=\"reunionsApp.miembro.cargo\" for=\"field_cargo\">Cargo</label><select class=\"form-control\" id=\"field_cargo\" name=\"cargo\" ng-model=\"vm.miembro.cargo\" ng-options=\"cargo as cargo.nombre for cargo in vm.cargos track by cargo.id\" required><option value=\"\"></option></select></div><div ng-show=\"editForm.cargo.$invalid\"><p class=\"help-block\" ng-show=\"editForm.cargo.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div><div class=\"form-group\"><label data-translate=\"reunionsApp.miembro.user\" for=\"field_user\">User</label><input ng-disabled=\"vm.miembro.id\" type=\"text\" id=\"field_user\" name=\"user\" ng-model=\"vm.miembro.user\" uib-typeahead=\"user as user.lastName + \\', \\' + user.firstName for user in vm.users | filter:$viewValue:vm.qFn | orderBy:(\\'lastName|noAccents\\')\" class=\"form-control\" required typeahead-editable=\"false\" autocomplete=\"off\"></div><div ng-show=\"editForm.user.$invalid\"><p class=\"help-block\" ng-show=\"editForm.user.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/miembro/miembros.html','<div><h2 data-translate=\"reunionsApp.miembro.home.title\">Miembros</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"miembro.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.miembro.home.createLabel\">Create new Miembro</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.miembro.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaAlta\"><span data-translate=\"reunionsApp.miembro.fechaAlta\">Fecha Alta</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaBaja\"><span data-translate=\"reunionsApp.miembro.fechaBaja\">Fecha Baja</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones\"><span data-translate=\"reunionsApp.miembro.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"organo.nombre\"><span data-translate=\"reunionsApp.miembro.organo\">Organo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre\"><span data-translate=\"reunionsApp.miembro.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"user.login\"><span data-translate=\"reunionsApp.miembro.user\">User</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"miembro in vm.miembros track by miembro.id\"><td><a ui-sref=\"miembro-detail({id:miembro.id})\">{{miembro.id}}</a></td><td>{{miembro.fechaAlta | date:\\'mediumDate\\'}}</td><td>{{miembro.fechaBaja | date:\\'mediumDate\\'}}</td><td>{{miembro.observaciones}}</td><td><a ui-sref=\"organo-detail({id:miembro.organo.id})\">{{miembro.organo.nombre}}</a></td><td><a ui-sref=\"cargo-detail({id:miembro.cargo.id})\">{{miembro.cargo.nombre}}</a></td><td>{{miembro.user.login}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"miembro-detail({id:miembro.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"miembro.edit({id:miembro.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"miembro.delete({id:miembro.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" items-per-page=\"vm.itemsPerPage\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/entities/organo/organo-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.organo.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.organo.delete.question\" translate-values=\"{id: \\'{{vm.organo.id}}\\'}\">Are you sure you want to delete this Organo?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/organo/organo-detail.html','<div><h2>{{vm.organo.nombre}}</h2><hr><jhi-alert></jhi-alert><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.organo.descripcion\">Descripcion</span></dt><dd><span>{{vm.organo.descripcion}}</span></dd><dt><span data-translate=\"reunionsApp.organo.grupo\">Grupo</span></dt><dd><span>{{vm.organo.grupo.nombre}}</span></dd></dl><h3><span data-translate=\"reunionsApp.organo.miembros\" id=\"tituloActuales\">Miembros actuales</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"miembro.new({organo:vm.organo})\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.miembro.home.createLabel\">Add new miembro</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"q\" id=\"search\" class=\"form-control\" placeholder=\"{{ \\'reunionsApp.miembro.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\"><th jh-sort-by=\"user.lastName|noAccents\"><span data-translate=\"reunionsApp.miembro.user\">User</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre|noAccents\"><span data-translate=\"reunionsApp.miembro.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaAlta\"><span data-translate=\"reunionsApp.miembro.fechaAlta\">Fecha Alta</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones|noAccents\"><span data-translate=\"reunionsApp.miembro.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr dir-paginate=\"miembro in vm.miembros | orderBy:vm.predicate:!vm.reverse | filter:q:vm.qFn | itemsPerPage: 40\" pagination-id=\"actuales\"><td><a ui-sref=\"user-management-detail({login:miembro.user.login})\">{{miembro.user.lastName}}, {{miembro.user.firstName}}</a></td><td>{{miembro.cargo.nombre}}</td><td>{{miembro.fechaAlta | date:\\'mediumDate\\'}}</td><td>{{miembro.observaciones}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"miembro.edit({idm:miembro.id})\" class=\"btn btn-primary btn-sm\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"miembro.delete({idm:miembro.id})\" class=\"btn btn-danger btn-sm\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls pagination-id=\"actuales\" on-page-change=\"vm.goUp(\\'tituloActuales\\')\"></dir-pagination-controls></div><hr><h3><span data-translate=\"reunionsApp.organo.miembrosAnteriores\" id=\"tituloAnteriores\">Miembros anteriores</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"qa\" id=\"searchAnt\" class=\"form-control\" placeholder=\"{{ \\'reunionsApp.miembro.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicateAnteriores\" ascending=\"vm.reverseAnteriores\"><th jh-sort-by=\"user.lastName|noAccents\"><span data-translate=\"reunionsApp.miembro.user\">User</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre|noAccents\"><span data-translate=\"reunionsApp.miembro.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaAlta\"><span data-translate=\"reunionsApp.miembro.fechaAlta\">Fecha Alta</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"fechaBaja\"><span data-translate=\"reunionsApp.miembro.fechaBaja\">Fecha Baja</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones|noAccents\"><span data-translate=\"reunionsApp.miembro.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th></tr></thead><tbody><tr dir-paginate=\"miembro in vm.miembrosAnteriores | orderBy:vm.predicateAnteriores:!vm.reverseAnteriores | filter:qa:vm.qFn | itemsPerPage: 10\" pagination-id=\"anteriores\"><td><a ui-sref=\"user-management-detail({login:miembro.user.login})\">{{miembro.user.lastName}}, {{miembro.user.firstName}}</a></td><td>{{miembro.cargo.nombre}}</td><td>{{miembro.fechaAlta | date:\\'mediumDate\\'}}</td><td>{{miembro.fechaBaja | date:\\'mediumDate\\'}}</td><td>{{miembro.observaciones}}</td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls pagination-id=\"anteriores\" on-page-change=\"vm.goUp(\\'tituloAnteriores\\')\"></dir-pagination-controls></div><hr><h3><span data-translate=\"reunionsApp.organo.sesiones\" id=\"tituloSesiones\">Sesiones</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"sesion.new({organo:vm.organo})\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.home.createLabel\">Add new sesion</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"qs\" id=\"searchSes\" class=\"form-control\" placeholder=\"{{ \\'reunionsApp.sesion.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicateSesiones\" ascending=\"vm.reverseSesiones\"><th jh-sort-by=\"numero\"><span data-translate=\"reunionsApp.sesion.numero\">Numero</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"primeraConvocatoria\"><span data-translate=\"reunionsApp.sesion.primeraConvocatoria\">Primera Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"segundaConvocatoria\"><span data-translate=\"reunionsApp.sesion.segundaConvocatoria\">Segunda Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lugar|noAccents\"><span data-translate=\"reunionsApp.sesion.lugar\">Lugar</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr dir-paginate=\"sesion in vm.sesiones | orderBy:vm.predicateSesiones:!vm.reverseSesiones | filter:{numero:qs} | itemsPerPage: 10\" pagination-id=\"sesiones\"><td><a ui-sref=\"sesion-detail({id:sesion.id})\">{{sesion.numero}}</a></td><td>{{sesion.primeraConvocatoria | date:\\'medium\\'}}</td><td>{{sesion.segundaConvocatoria | date:\\'medium\\'}}</td><td>{{sesion.lugar}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"sesion-detail({id:sesion.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"sesion.edit({ids:sesion.id})\" class=\"btn btn-primary btn-sm\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"sesion.delete({ids:sesion.id})\" class=\"btn btn-danger btn-sm\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls pagination-id=\"sesiones\" on-page-change=\"vm.goUp(\\'tituloSesiones\\')\"></dir-pagination-controls></div><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" has-authority=\"ROLE_ADMIN\" ui-sref=\"organo-detail.edit({id:vm.organo.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/organo/organo-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myOrganoLabel\" data-translate=\"reunionsApp.organo.home.createOrEditLabel\">Create or edit a Organo</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.organo.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.organo.nombre\" for=\"field_nombre\">Nombre</label><input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"field_nombre\" ng-model=\"vm.organo.nombre\" required><div ng-show=\"editForm.nombre.$invalid\"><p class=\"help-block\" ng-show=\"editForm.nombre.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.organo.descripcion\" for=\"field_descripcion\">Descripcion</label><input type=\"text\" class=\"form-control\" name=\"descripcion\" id=\"field_descripcion\" ng-model=\"vm.organo.descripcion\"></div><div class=\"form-group\"><label data-translate=\"reunionsApp.organo.grupo\" for=\"field_grupo\">Grupo</label><select class=\"form-control\" id=\"field_grupo\" name=\"grupo\" ng-model=\"vm.organo.grupo\" ng-options=\"grupo as grupo.nombre for grupo in vm.grupos track by grupo.id\" required><option value=\"\"></option></select></div><div ng-show=\"editForm.grupo.$invalid\"><p class=\"help-block\" ng-show=\"editForm.grupo.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/organo/organos.html','<div><h2 data-translate=\"reunionsApp.organo.home.title\" id=\"titulo\">Organos</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"organo.new\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.organo.home.createLabel\">Create new Organo</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"q\" id=\"search\" class=\"form-control\" placeholder=\"{{ \\'reunionsApp.organo.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr><th><span data-translate=\"reunionsApp.organo.nombre\">Nombre</span></th><th></th></tr></thead><tbody><tr dir-paginate=\"organo in vm.organos | orderBy:\\'(nombre|noAccents)\\' | filter:q:vm.qFn | itemsPerPage: 20\"><td><a ui-sref=\"organo-detail({id:organo.id})\">{{organo.nombre}}</a></td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"organo-detail({id:organo.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"organo.edit({id:organo.id})\" class=\"btn btn-primary btn-sm\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"organo.delete({id:organo.id})\" class=\"btn btn-danger btn-sm\" has-authority=\"ROLE_ADMIN\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls on-page-change=\"vm.goUp(\\'titulo\\')\"></dir-pagination-controls></div></div>');\n$templateCache.put('app/entities/participante/participante-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.participante.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.participante.delete.question\" translate-values=\"{id: \\'{{vm.participante.id}}\\'}\">Are you sure you want to delete this Participante?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/participante/participante-detail.html','<div><h2><span data-translate=\"reunionsApp.participante.detail.title\">Participante</span> {{vm.participante.id}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.participante.asistencia\">Asistencia</span></dt><dd><span data-translate=\"{{\\'reunionsApp.Asistencia.\\' + vm.participante.asistencia}}\">{{vm.participante.asistencia}}</span></dd><dt><span data-translate=\"reunionsApp.participante.observaciones\">Observaciones</span></dt><dd><span>{{vm.participante.observaciones}}</span></dd><dt><span data-translate=\"reunionsApp.participante.sesion\">Sesion</span></dt><dd><a ui-sref=\"sesion-detail({id:vm.participante.sesion.id})\">{{vm.participante.sesion.numero}}</a></dd><dt><span data-translate=\"reunionsApp.participante.cargo\">Cargo</span></dt><dd><a ui-sref=\"cargo-detail({id:vm.participante.cargo.id})\">{{vm.participante.cargo.nombre}}</a></dd><dt><span data-translate=\"reunionsApp.participante.user\">User</span></dt><dd>{{vm.participante.user.login}}</dd></dl><button type=\"submit\" ui-sref=\"{{ vm.previousState }}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ui-sref=\"participante-detail.edit({id:vm.participante.id})\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/participante/participante-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myParticipanteLabel\" data-translate=\"reunionsApp.participante.home.createOrEditLabel\">Create or edit a Participante</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.participante.id\" disabled=\"disabled\"></div><div class=\"form-group\"><label data-translate=\"reunionsApp.participante.user\" for=\"field_user\">User</label><input ng-disabled=\"vm.participante.id\" type=\"text\" id=\"field_user\" name=\"user\" ng-model=\"vm.participante.user\" uib-typeahead=\"user as user.lastName + \\', \\' + user.firstName for user in vm.users | filter:$viewValue:vm.qFn | orderBy:(\\'lastName|noAccents\\')\" class=\"form-control\" required typeahead-editable=\"false\" autocomplete=\"off\"></div><div ng-show=\"editForm.user.$invalid\"><p class=\"help-block\" ng-show=\"editForm.user.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.participante.asistencia\" for=\"field_asistencia\">Asistencia</label><select class=\"form-control\" name=\"asistencia\" ng-model=\"vm.participante.asistencia\" id=\"field_asistencia\"><option value=\"asiste\" data-translate=\"reunionsApp.Asistencia.asiste\">asiste</option><option value=\"falta\" data-translate=\"reunionsApp.Asistencia.falta\">falta</option><option value=\"disculpa\" data-translate=\"reunionsApp.Asistencia.disculpa\">disculpa</option></select></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.participante.observaciones\" for=\"field_observaciones\">Observaciones</label><input type=\"text\" class=\"form-control\" name=\"observaciones\" id=\"field_observaciones\" ng-model=\"vm.participante.observaciones\"></div><div class=\"form-group\"><label data-translate=\"reunionsApp.participante.sesion\" for=\"field_sesion\">Sesion</label><select class=\"form-control\" id=\"field_sesion\" name=\"sesion\" ng-model=\"vm.participante.sesion\" ng-options=\"sesion as sesion.numero for sesion in vm.sesions track by sesion.id\" required disabled=\"disabled\"><option value=\"\"></option></select></div><div ng-show=\"editForm.sesion.$invalid\"><p class=\"help-block\" ng-show=\"editForm.sesion.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div><div class=\"form-group\"><label data-translate=\"reunionsApp.participante.cargo\" for=\"field_cargo\">Cargo</label><select class=\"form-control\" id=\"field_cargo\" name=\"cargo\" ng-model=\"vm.participante.cargo\" ng-options=\"cargo as cargo.nombre for cargo in vm.cargos track by cargo.id\" required ng-disabled=\"vm.participante.id\"><option value=\"\"></option></select></div><div ng-show=\"editForm.cargo.$invalid\"><p class=\"help-block\" ng-show=\"editForm.cargo.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/participante/participantes.html','<div><h2 data-translate=\"reunionsApp.participante.home.title\">Participantes</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"participante.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.participante.home.createLabel\">Create new Participante</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.participante.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"asistencia\"><span data-translate=\"reunionsApp.participante.asistencia\">Asistencia</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones\"><span data-translate=\"reunionsApp.participante.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"sesion.numero\"><span data-translate=\"reunionsApp.participante.sesion\">Sesion</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre\"><span data-translate=\"reunionsApp.participante.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"user.login\"><span data-translate=\"reunionsApp.participante.user\">User</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"participante in vm.participantes track by participante.id\"><td><a ui-sref=\"participante-detail({id:participante.id})\">{{participante.id}}</a></td><td data-translate=\"{{\\'reunionsApp.Asistencia.\\' + participante.asistencia}}\">{{participante.asistencia}}</td><td>{{participante.observaciones}}</td><td><a ui-sref=\"sesion-detail({id:participante.sesion.id})\">{{participante.sesion.numero}}</a></td><td><a ui-sref=\"cargo-detail({id:participante.cargo.id})\">{{participante.cargo.nombre}}</a></td><td>{{participante.user.login}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"participante-detail({id:participante.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"participante.edit({id:participante.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"participante.delete({id:participante.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" items-per-page=\"vm.itemsPerPage\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/entities/sesion/sesion-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.sesion.id)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"reunionsApp.sesion.delete.question\" translate-values=\"{id: \\'{{vm.sesion.id}}\\'}\">Are you sure you want to delete this Sesion?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"deleteForm.$invalid\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/entities/sesion/sesion-detail.html','<div><h2><span data-translate=\"reunionsApp.sesion.detail.title\">Sesion</span> {{vm.sesion.numero}} - {{vm.sesion.organo.nombre}}</h2><hr><jhi-alert-error></jhi-alert-error><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"reunionsApp.sesion.numero\">Numero</span></dt><dd><span>{{vm.sesion.numero}}</span></dd><dt><span data-translate=\"reunionsApp.sesion.primeraConvocatoria\">Primera Convocatoria</span></dt><dd><span>{{vm.sesion.primeraConvocatoria | date:\\'medium\\'}}</span></dd><dt><span data-translate=\"reunionsApp.sesion.segundaConvocatoria\">Segunda Convocatoria</span></dt><dd><span>{{vm.sesion.segundaConvocatoria | date:\\'medium\\'}}</span></dd><dt><span data-translate=\"reunionsApp.sesion.lugar\">Lugar</span></dt><dd><span>{{vm.sesion.lugar}}</span></dd><dt><span data-translate=\"reunionsApp.sesion.descripcion\">Descripcion</span></dt><dd><pre>{{vm.sesion.descripcion}}</pre></dd><dt><span data-translate=\"reunionsApp.sesion.organo\">Organo</span></dt><dd><a ui-sref=\"organo-detail({id:vm.sesion.organo.id})\">{{vm.sesion.organo.nombre}}</a></dd><dt><span data-translate=\"reunionsApp.sesion.documentos\">Documentos</span></dt><dd><div class=\"row\"><div class=\"col-xs-8\"><li ng-repeat=\"documento in vm.documentos\"><a ng-if=\"documento.archivo\" ng-click=\"vm.openFile(documento.archivoContentType, documento.archivo)\">{{documento.nombre}}</a> <span ng-if=\"documento.archivo\">{{documento.archivoContentType}}, {{vm.byteSize(documento.archivo)}}</span> <button type=\"submit\" ui-sref=\"documento.delete({idd:documento.id})\" class=\"btn btn-link btn-xs\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></li></div><div class=\"col-xs-4 no-padding-right\"><button class=\"btn btn-primary\" ui-sref=\"documento.new({sesion:vm.sesion})\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.documento.home.createLabel\">Create new Documento</span></button></div></div></dd></dl><h3><span data-translate=\"reunionsApp.sesion.participantes\" id=\"titulo\">Participantes</span></h3><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-9 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"participante.new({sesion:vm.sesion})\" ng-show=\"vm.admin\" ng-disabled=\"vm.marcando\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.participante.home.createLabel\">Add new participante</span></button> <button class=\"btn btn-primary\" ng-click=\"vm.marcarAsistencia()\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-edit\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.marcar\" ng-if=\"!vm.marcando\">Marcar asistencia </span><span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.guardar\" ng-if=\"vm.marcando\">Guardar asistencia</span></button> <button class=\"btn btn-info\" ng-click=\"vm.notificar(vm.sesion.id)\" ng-show=\"vm.admin\" ng-disabled=\"vm.marcando\"><span class=\"glyphicon glyphicon-share\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.notificar\">Notificar</span></button> <button class=\"btn btn-info\" ng-click=\"vm.exportar()\" ng-disabled=\"vm.marcando\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.exportar\">Exportar</span></button></div><div class=\"col-xs-3 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" ng-model=\"q\" id=\"search\" class=\"form-control\" placeholder=\"{{ \\'reunionsApp.participante.home.search\\' | translate }}\"></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\"><th jh-sort-by=\"user.lastName|noAccents\"><span data-translate=\"reunionsApp.participante.user\">User</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"user.email\" ng-if=\"!vm.marcando\"><span data-translate=\"reunionsApp.participante.email\">E-mail</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"cargo.nombre|noAccents\" ng-if=\"!vm.marcando\"><span data-translate=\"reunionsApp.participante.cargo\">Cargo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"asistencia|noAccents\"><span data-translate=\"reunionsApp.participante.asistencia\">Asistencia</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"observaciones|noAccents\" ng-if=\"!vm.marcando\"><span data-translate=\"reunionsApp.participante.observaciones\">Observaciones</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th ng-if=\"!vm.marcando\"></th></tr></thead><tbody><tr dir-paginate=\"participante in vm.participantes | orderBy:vm.predicate:!vm.reverse | filter:q:vm.qFn | itemsPerPage: 20\"><td><a ui-sref=\"user-management-detail({login:participante.user.login})\">{{participante.user.lastName}}, {{participante.user.firstName}}</a></td><td ng-if=\"!vm.marcando\">{{participante.user.email}}</td><td ng-if=\"!vm.marcando\">{{participante.cargo.nombre}}</td><td ng-if=\"vm.marcando\"><label class=\"radio-inline\"><input type=\"radio\" ng-model=\"participante.asistencia\" value=\"asiste\">asiste</label><label class=\"radio-inline\"><input type=\"radio\" ng-model=\"participante.asistencia\" value=\"falta\">falta</label><label class=\"radio-inline\"><input type=\"radio\" ng-model=\"participante.asistencia\" value=\"disculpa\">disculpa</label></td><td ng-if=\"!vm.marcando\">{{participante.asistencia}}</td><td ng-if=\"!vm.marcando\">{{participante.observaciones}}</td><td ng-if=\"!vm.marcando\" class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"participante.edit({idp:participante.id})\" class=\"btn btn-primary btn-sm\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"participante.delete({idp:participante.id})\" class=\"btn btn-danger btn-sm\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><dir-pagination-controls on-page-change=\"vm.goUp(\\'titulo\\')\"></dir-pagination-controls></div><button type=\"submit\" ng-click=\"vm.back()\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button> <button type=\"button\" ng-disabled=\"vm.marcando\" ui-sref=\"sesion-detail.edit({id:vm.sesion.id})\" class=\"btn btn-primary\" ng-show=\"vm.admin\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\">Edit</span></button></div>');\n$templateCache.put('app/entities/sesion/sesion-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"mySesionLabel\" data-translate=\"reunionsApp.sesion.home.createOrEditLabel\">Create or edit a Sesion</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\" ng-show=\"false\"><label for=\"id\" data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" ng-model=\"vm.sesion.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.sesion.numero\" for=\"field_numero\">Numero</label><input type=\"number\" class=\"form-control\" name=\"numero\" id=\"field_numero\" ng-model=\"vm.sesion.numero\" required disabled=\"disabled\"><div ng-show=\"editForm.numero.$invalid\"><p class=\"help-block\" ng-show=\"editForm.numero.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.numero.$error.number\" data-translate=\"entity.validation.number\">This field should be a number.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.sesion.primeraConvocatoria\" for=\"field_primeraConvocatoria\">Primera Convocatoria</label><div class=\"input-group\"><input id=\"field_primeraConvocatoria\" type=\"text\" class=\"form-control\" name=\"primeraConvocatoria\" datetime-picker=\"{{dateformat}}\" ng-model=\"vm.sesion.primeraConvocatoria\" is-open=\"vm.datePickerOpenStatus.primeraConvocatoria\" required> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.openCalendar(\\'primeraConvocatoria\\')\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div><div ng-show=\"editForm.primeraConvocatoria.$invalid\"><p class=\"help-block\" ng-show=\"editForm.primeraConvocatoria.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.primeraConvocatoria.$error.ZonedDateTimelocal\" data-translate=\"entity.validation.ZonedDateTimelocal\">This field should be a date and time.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.sesion.segundaConvocatoria\" for=\"field_segundaConvocatoria\">Segunda Convocatoria</label><div class=\"input-group\"><input id=\"field_segundaConvocatoria\" type=\"text\" class=\"form-control\" name=\"segundaConvocatoria\" datetime-picker=\"{{dateformat}}\" ng-model=\"vm.sesion.segundaConvocatoria\" is-open=\"vm.datePickerOpenStatus.segundaConvocatoria\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.openCalendar(\\'segundaConvocatoria\\')\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.sesion.lugar\" for=\"field_lugar\">Lugar</label><input type=\"text\" class=\"form-control\" name=\"lugar\" id=\"field_lugar\" ng-model=\"vm.sesion.lugar\" required><div ng-show=\"editForm.lugar.$invalid\"><p class=\"help-block\" ng-show=\"editForm.lugar.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"reunionsApp.sesion.descripcion\" for=\"field_descripcion\">Descripcion</label><textarea type=\"text\" class=\"form-control\" name=\"descripcion\" id=\"field_descripcion\" ng-model=\"vm.sesion.descripcion\">\\n        </div>\\n\\n        <div class=\"form-group\">\\n            <label data-translate=\"reunionsApp.sesion.organo\" for=\"field_organo\">Organo</label>\\n            <select disabled=\"disabled\" class=\"form-control\" id=\"field_organo\" name=\"organo\" ng-model=\"vm.sesion.organo\" ng-options=\"organo as organo.nombre for organo in vm.organos track by organo.id\" required>\\n                <option value=\"\"></option>\\n            </select>\\n        </div>\\n        <div ng-show=\"editForm.organo.$invalid\">\\n            <p class=\"help-block\" ng-show=\"editForm.organo.$error.required\" data-translate=\"entity.validation.required\">\\n                This field is required.\\n            </p>\\n        </div>\\n    </div>\\n    <div class=\"modal-footer\">\\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\">\\n            <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span>\\n        </button>\\n        <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\">\\n            <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/entities/sesion/sesions.html','<div><h2 data-translate=\"reunionsApp.sesion.home.title\">Sesions</h2><jhi-alert></jhi-alert><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-xs-4 no-padding-left\"><button class=\"btn btn-primary\" ui-sref=\"sesion.new\"><span class=\"glyphicon glyphicon-plus\"></span> <span class=\"hidden-xs\" data-translate=\"reunionsApp.sesion.home.createLabel\">Create new Sesion</span></button></div><div class=\"col-xs-8 no-padding-right\"><form name=\"searchForm\" class=\"form-inline\"><div class=\"input-group pull-right\"><input type=\"text\" class=\"form-control\" ng-model=\"vm.searchQuery\" id=\"searchQuery\" placeholder=\"{{ \\'reunionsApp.sesion.home.search\\' | translate }}\"> <span class=\"input-group-btn width-min\"><button class=\"btn btn-info\" ng-click=\"vm.search(vm.searchQuery)\"><span class=\"glyphicon glyphicon-search\"></span></button> </span><span class=\"input-group-btn width-min\" ng-if=\"vm.currentSearch\"><button class=\"btn btn-info\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-trash\"></span></button></span></div></form></div></div></div><br><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"numero\"><span data-translate=\"reunionsApp.sesion.numero\">Numero</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"primeraConvocatoria\"><span data-translate=\"reunionsApp.sesion.primeraConvocatoria\">Primera Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"segundaConvocatoria\"><span data-translate=\"reunionsApp.sesion.segundaConvocatoria\">Segunda Convocatoria</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lugar\"><span data-translate=\"reunionsApp.sesion.lugar\">Lugar</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"descripcion\"><span data-translate=\"reunionsApp.sesion.descripcion\">Descripcion</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"organo.nombre\"><span data-translate=\"reunionsApp.sesion.organo\">Organo</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"sesion in vm.sesions track by sesion.id\"><td><a ui-sref=\"sesion-detail({id:sesion.id})\">{{sesion.id}}</a></td><td>{{sesion.numero}}</td><td>{{sesion.primeraConvocatoria | date:\\'medium\\'}}</td><td>{{sesion.segundaConvocatoria | date:\\'medium\\'}}</td><td>{{sesion.lugar}}</td><td>{{sesion.descripcion}}</td><td><a ui-sref=\"organo-detail({id:sesion.organo.id})\">{{sesion.organo.nombre}}</a></td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"sesion-detail({id:sesion.id})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"sesion.edit({id:sesion.id})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"sesion.delete({id:sesion.id})\" class=\"btn btn-danger btn-sm\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" items-per-page=\"vm.itemsPerPage\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/layouts/error/accessdenied.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div class=\"alert alert-danger\" data-translate=\"error.403\">You are not authorized to access the page.</div></div></div></div>');\n$templateCache.put('app/layouts/error/error.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div ng-show=\"errorMessage\"><div class=\"alert alert-danger\">{{errorMessage}}</div></div></div></div></div>');\n$templateCache.put('app/layouts/navbar/navbar.html','<nav class=\"navbar navbar-default\" role=\"navigation\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle\" ng-click=\"vm.toggleNavbar()\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></button> <a class=\"navbar-brand logo\" href=\"#/\" ng-click=\"vm.collapseNavbar()\"><!--<img class=\"logo-img\" src=\"content/images/logo-jhipster.png\"/>--> <span data-translate=\"global.title\">Reunions</span> <span class=\"navbar-version\">v{{VERSION}}</span></a></div><div class=\"navbar-collapse\" uib-collapse=\"vm.isNavbarCollapsed\" ng-switch=\"vm.isAuthenticated()\"><ul class=\"nav navbar-nav navbar-right\"><li ui-sref-active=\"active\"><a ui-sref=\"home\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-home\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.home\">Home</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"organo\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-globe\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.organos\">Organos</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"user-management\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-user\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.personal\">Personal</span></a></li><!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here --><li ng-class=\"{active: vm.$state.includes(\\'entity\\')}\" ng-switch-when=\"true\" uib-dropdown class=\"dropdown pointer\" has-authority=\"ROLE_ADMIN\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"entity-menu\"><span><span class=\"glyphicon glyphicon-th-list\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.entities.main\">Entities </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\"><a ui-sref=\"grupo\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.grupo\">Grupo</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"organo\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.organo\">Organo</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"sesion\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.sesion\">Sesion</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"miembro\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.miembro\">Miembro</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"cargo\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.cargo\">Cargo</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"participante\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.participante\">Participante</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"documento\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-asterisk\"></span>&nbsp; <span data-translate=\"global.menu.entities.documento\">Documento</span></a></li><!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here --></ul></li><li ng-class=\"{active: vm.$state.includes(\\'account\\')}\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"account-menu\"><span><span class=\"glyphicon glyphicon-user\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.account.main\">Account </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"settings\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-wrench\"></span>&nbsp; <span data-translate=\"global.menu.account.settings\">Settings</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"password\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-lock\"></span>&nbsp; <span data-translate=\"global.menu.account.password\">Password</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"sessions\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-cloud\"></span>&nbsp; <span data-translate=\"global.menu.account.sessions\">Sessions</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a href=\"\" ng-click=\"vm.logout()\" id=\"logout\"><span class=\"glyphicon glyphicon-log-out\"></span>&nbsp; <span data-translate=\"global.menu.account.logout\">Sign out</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a href=\"\" ng-click=\"vm.login()\" id=\"login\"><span class=\"glyphicon glyphicon-log-in\"></span>&nbsp; <span data-translate=\"global.menu.account.login\">Sign in</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a ui-sref=\"register\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-plus-sign\"></span>&nbsp; <span data-translate=\"global.menu.account.register\">Register</span></a></li></ul></li><li ng-class=\"{active: vm.$state.includes(\\'admin\\')}\" ng-switch-when=\"true\" has-authority=\"ROLE_ADMIN\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"admin-menu\"><span><span class=\"glyphicon glyphicon-tower\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.admin.main\">Administration</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\"><a ui-sref=\"user-management\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-user\"></span>&nbsp; <span data-translate=\"global.menu.admin.userManagement\">User management</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-metrics\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-dashboard\"></span>&nbsp; <span data-translate=\"global.menu.admin.metrics\">Metrics</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-health\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-heart\"></span>&nbsp; <span data-translate=\"global.menu.admin.health\">Health</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-configuration\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-list-alt\"></span>&nbsp; <span data-translate=\"global.menu.admin.configuration\">Configuration</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"audits\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-bell\"></span>&nbsp; <span data-translate=\"global.menu.admin.audits\">Audits</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"logs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-tasks\"></span>&nbsp; <span data-translate=\"global.menu.admin.logs\">Logs</span></a></li><li ng-show=\"vm.swaggerEnabled\" ui-sref-active=\"active\"><a ui-sref=\"docs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-book\"></span>&nbsp; <span data-translate=\"global.menu.admin.apidocs\">API</span></a></li><!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here --></ul></li><li ui-sref-active=\"active\" uib-dropdown class=\"dropdown pointer\" ng-controller=\"JhiLanguageController as languageVm\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" ng-if=\"languageVm.languages.length > 1\"><span><span class=\"glyphicon glyphicon-flag\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.language\">Language</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu ng-if=\"languageVm.languages.length > 1\"><li active-menu=\"{{language}}\" ng-repeat=\"language in languageVm.languages\"><a href=\"\" ng-click=\"languageVm.changeLanguage(language);vm.collapseNavbar();\">{{language | findLanguageFromKey}}</a></li></ul></li></ul></div></div></nav>');\n$templateCache.put('app/account/reset/finish/reset.finish.html','<div><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"reset.finish.title\">Reset password</h1><div class=\"alert alert-danger\" data-translate=\"reset.finish.messages.keymissing\" ng-show=\"vm.keyMissing\"><strong>The password reset key is missing.</strong></div><div class=\"alert alert-warning\" ng-hide=\"vm.success || vm.keyMissing\"><p data-translate=\"reset.finish.messages.info\">Choose a new password</p></div><div class=\"alert alert-danger\" ng-show=\"vm.error\"><p data-translate=\"reset.finish.messages.error\">Your password couldn\\'t be reset. Remember a password request is only valid for 24 hours.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success\"><p data-translate=\"reset.finish.messages.success\" translate-compile><strong>Your password has been reset.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</p></div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><div ng-hide=\"vm.keyMissing\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.finishReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.resetAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your password confirmation is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your password confirmation is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your password confirmation cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.finish.form.button\">Reset Password</button></form></div></div></div></div>');\n$templateCache.put('app/account/reset/request/reset.request.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"reset.request.title\">Reset your password</h1><div class=\"alert alert-danger\" data-translate=\"reset.request.messages.notfound\" ng-show=\"vm.errorEmailNotExists\"><strong>E-Mail address isn\\'t registered!</strong> Please check and try again.</div><div class=\"alert alert-warning\" ng-hide=\"vm.success\"><p data-translate=\"reset.request.messages.info\">Enter the e-mail address you used to register.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success == \\'OK\\'\"><p data-translate=\"reset.request.messages.success\">Check your e-mails for details on how to reset your password.</p></div><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.requestReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">E-mail</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your e-mail is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your e-mail is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your e-mail is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your e-mail cannot be longer than 100 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.request.form.button\">Reset</button></form></div></div></div>');}]);})();"],"sourceRoot":"/source/"}